{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEigenLayrDelegation",
          "name": "_delegation",
          "type": "address"
        },
        {
          "internalType": "contract IInvestmentManager",
          "name": "_investmentManager",
          "type": "address"
        },
        {
          "internalType": "contract IServiceManager",
          "name": "_serviceManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "swapped",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "X",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "Y",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct BN254.G1Point",
          "name": "pk",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "apkHash",
          "type": "bytes32"
        }
      ],
      "name": "Deregistration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "socket",
          "type": "string"
        }
      ],
      "name": "SocketUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "firstQuorumStake",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "secondQuorumStake",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "updateBlockNumber",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "prevUpdateBlockNumber",
          "type": "uint32"
        }
      ],
      "name": "StakeUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "quorumNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "contract IInvestmentStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyAddedToQuorum",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "quorumNumber",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "contract IInvestmentStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemovedFromQuorum",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NUMBER_OF_QUORUMS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quorumNumber",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]",
          "name": "_newStrategiesConsideredAndMultipliers",
          "type": "tuple[]"
        }
      ],
      "name": "addStrategiesConsideredAndMultipliers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeHistoryIndex",
          "type": "uint256"
        }
      ],
      "name": "checkOperatorActiveAtBlockNumber",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "stakeHistoryIndex",
          "type": "uint256"
        }
      ],
      "name": "checkOperatorInactiveAtBlockNumber",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract IEigenLayrDelegation",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "deregisterOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "firstQuorumStakedByOperator",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getFromTaskNumberForOperator",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pubkeyHash",
          "type": "bytes32"
        }
      ],
      "name": "getLengthOfPubkeyHashIndexHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pubkeyHash",
          "type": "bytes32"
        }
      ],
      "name": "getLengthOfPubkeyHashStakeHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLengthOfTotalOperatorsHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLengthOfTotalStakeHistory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getMostRecentStakeByOperator",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "firstQuorumStake",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "secondQuorumStake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IQuorumRegistry.OperatorStake",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "getOperatorIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getOperatorPubkeyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pubkeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getStakeFromPubkeyHashAndIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "firstQuorumStake",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "secondQuorumStake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IQuorumRegistry.OperatorStake",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "pubkeyHash",
          "type": "bytes32"
        }
      ],
      "name": "getStakeHistoryLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "name": "getTotalOperators",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTotalStakeFromIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "firstQuorumStake",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "secondQuorumStake",
              "type": "uint96"
            }
          ],
          "internalType": "struct IQuorumRegistry.OperatorStake",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_quorumBips",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]",
          "name": "_firstQuorumStrategiesConsideredAndMultipliers",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ],
          "internalType": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]",
          "name": "_secondQuorumStrategiesConsideredAndMultipliers",
          "type": "tuple[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentManager",
      "outputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isActiveOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumStakeFirstQuorum",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumStakeSecondQuorum",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numOperators",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "operatorList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "operatorStakes",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "blockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "prevElement",
          "type": "uint256"
        }
      ],
      "name": "propagateStakeUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pubkeyHashToIndexHistory",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "toBlockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pubkeyHashToStakeHistory",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "updateBlockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "nextUpdateBlockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint96",
          "name": "firstQuorumStake",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "secondQuorumStake",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "quorumBips",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "serveUntil",
          "type": "uint32"
        }
      ],
      "name": "registerOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registry",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "pubkeyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint32",
          "name": "fromTaskNumber",
          "type": "uint32"
        },
        {
          "internalType": "enum IQuorumRegistry.Status",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quorumNumber",
          "type": "uint256"
        },
        {
          "internalType": "contract IInvestmentStrategy[]",
          "name": "_strategiesToRemove",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "indicesToRemove",
          "type": "uint256[]"
        }
      ],
      "name": "removeStrategiesConsideredAndMultipliers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "secondQuorumStakedByOperator",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "serviceManager",
      "outputs": [
        {
          "internalType": "contract IServiceManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_minimumStakeFirstQuorum",
          "type": "uint128"
        }
      ],
      "name": "setMinimumStakeFirstQuorum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "_minimumStakeSecondQuorum",
          "type": "uint128"
        }
      ],
      "name": "setMinimumStakeSecondQuorum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "strategiesConsideredAndMultipliers",
      "outputs": [
        {
          "internalType": "contract IInvestmentStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "multiplier",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "quorumNumber",
          "type": "uint256"
        }
      ],
      "name": "strategiesConsideredAndMultipliersLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "totalOperatorsHistory",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "toBlockNumber",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "index",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStake",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newSocket",
          "type": "string"
        }
      ],
      "name": "updateSocket",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quorumNumber",
          "type": "uint256"
        }
      ],
      "name": "weightOfOperator",
      "outputs": [
        {
          "internalType": "uint96",
          "name": "",
          "type": "uint96"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x610100604052700100000000000000000000000000000001600355600a805462ff00ff1916620200011790553480156200003857600080fd5b5060405162002dce38038062002dce8339810160408190526200005b9162000269565b600a548290829062010000900460ff1682828282828280620000ea5760405162461bcd60e51b815260206004820152603b60248201527f566f7465576569676865724261736553746f726167652e636f6e73747275637460448201527f6f723a205f4e554d4245525f4f465f51554f52554d53203d3d2030000000000060648201526084015b60405180910390fd5b6001600160a01b03831660a08190526040805163df5cf72360e01b8152905163df5cf723916004808201926020929091908290030181865afa15801562000135573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200015b9190620002bd565b6001600160a01b03908116608052821660c05260ff811660e0526200017f62000191565b505050505050505050505050620002e4565b600054610100900460ff1615620001fb5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608401620000e1565b60005460ff90811610156200024e576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200026657600080fd5b50565b6000806000606084860312156200027f57600080fd5b83516200028c8162000250565b60208501519093506200029f8162000250565b6040850151909250620002b28162000250565b809150509250925092565b600060208284031215620002d057600080fd5b8151620002dd8162000250565b9392505050565b60805160a05160c05160e051612a716200035d6000396000818161077501528181610804015281816114d901528181611e4d0152611ef50152600081816104e80152818161093f0152818161113d015281816113f901526117680152600061053a01526000818161074e01526115ab0152612a716000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c806388db78a91161015c578063ca06c782116100ce578063df5cf72311610087578063df5cf72314610749578063e21ade6d14610770578063e84ef3cb14610797578063fa7626d4146107aa578063fae6cf58146107b7578063fd0d930a146107d757600080fd5b8063ca06c782146106c7578063ca150cb6146106cf578063cb38f407146106e2578063d24f6ddd146106f5578063d266b10814610725578063d8cf98ca1461073857600080fd5b8063ae124d4011610120578063ae124d4014610655578063aeadd15c14610498578063b322bdc714610687578063ba414fa61461069a578063bd820688146106ac578063c0bf897e146106b457600080fd5b806388db78a9146105e2578063891f28a5146105f55780638b0e9f3f14610608578063a3c96ce514610610578063a9983b5c1461062357600080fd5b80632979536e1161020057806353c9264a116101b957806353c9264a1461055c578063586621621461056f578063629b312a146105815780636bbc5310146105945780637210b0c9146105a75780638392eb59146105cf57600080fd5b80632979536e146104985780633367cca5146104b85780633531d479146104db5780633998fdd3146104e35780634698a394146105225780634b31bb101461053557600080fd5b8063102068d311610252578063102068d31461036f57806317422e8a146103cd5780631c9856ae146103f85780631ea1afe11461042b5780632173fa231461046557806328420dfa1461047857600080fd5b80630191f72c1461028f578063038defd7146102b55780630712b6a4146102fd5780630baa9798146103475780630cf4b7671461035c575b600080fd5b6102a261029d36600461229a565b610800565b6040519081526020015b60405180910390f35b6102ee6102c33660046122c8565b6004602052600090815260409020805460019091015463ffffffff811690600160201b900460ff1683565b6040516102ac939291906122fb565b61031061030b36600461233a565b6108e4565b6040805163ffffffff95861681529490931660208501526001600160601b03918216928401929092521660608201526080016102ac565b61035a61035536600461235c565b61093d565b005b61035a61036a366004612385565b610a0e565b61038261037d36600461229a565b610b04565b60408051825163ffffffff908116825260208085015190911690820152828201516001600160601b0390811692820192909252606092830151909116918101919091526080016102ac565b6103e06103db3660046122c8565b610b9a565b6040516001600160601b0390911681526020016102ac565b61040b6104063660046122c8565b610bb1565b604080516001600160601b039384168152929091166020830152016102ac565b61043e61043936600461233a565b610bd5565b604080516001600160a01b0390931683526001600160601b039091166020830152016102ac565b61038261047336600461233a565b610c1e565b6102a261048636600461229a565b60026020526000908152604090205481565b6102a26104a636600461229a565b60009081526008602052604090205490565b6104cb6104c63660046122c8565b610cc3565b60405190151581526020016102ac565b6007546102a2565b61050a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102ac565b61035a610530366004612539565b610d02565b61050a7f000000000000000000000000000000000000000000000000000000000000000081565b61038261056a3660046122c8565b610f42565b61035a61057d36600461262f565b5050565b6104cb61058f366004612664565b61103f565b61035a6105a2366004612699565b61113b565b6105ba6105b53660046126e0565b6111f7565b60405163ffffffff90911681526020016102ac565b6103e06105dd3660046122c8565b6113e0565b61035a6105f036600461235c565b6113f7565b6103e0610603366004612725565b6114d4565b61040b6116d7565b61035a61061e36600461279d565b611766565b60035461063d90600160801b90046001600160801b031681565b6040516001600160801b0390911681526020016102ac565b6105ba6106633660046122c8565b6001600160a01b031660009081526004602052604090206001015463ffffffff1690565b6105ba610695366004612817565b611b10565b600a546104cb90610100900460ff1681565b6005546105ba565b61035a6106c2366004612833565b505050565b6006546102a2565b60035461063d906001600160801b031681565b61050a6106f036600461229a565b611c34565b61070861070336600461233a565b611c5e565b6040805163ffffffff9384168152929091166020830152016102ac565b61070861073336600461229a565b611c9e565b61035a6107463660046122c8565b50565b61050a7f000000000000000000000000000000000000000000000000000000000000000081565b6102a27f000000000000000000000000000000000000000000000000000000000000000081565b6104cb6107a5366004612664565b611cd0565b600a546104cb9060ff1681565b6102a26107c536600461229a565b60009081526009602052604090205490565b6102a26107e53660046122c8565b6001600160a01b031660009081526004602052604090205490565b60007f000000000000000000000000000000000000000000000000000000000000000082106108d15760405162461bcd60e51b815260206004820152606660248201527f566f746557656967686572426173652e73747261746567696573436f6e73696460448201527f65726564416e644d756c7469706c696572734c656e6774683a2071756f72756d60648201527f4e756d62657220696e7075742065786365656473204e554d4245525f4f465f51608482015265554f52554d5360d01b60a482015260c4015b60405180910390fd5b5060009081526001602052604090205490565b6008602052816000526040600020818154811061090057600080fd5b60009182526020909120015463ffffffff8082169350600160201b82041691506001600160601b03600160401b8204811691600160a01b90041684565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190612871565b6001600160a01b0316336001600160a01b0316146109ef5760405162461bcd60e51b81526004016108c89061288e565b600380546001600160801b03928316600160801b029216919091179055565b6001336000908152600460205260409020600190810154600160201b900460ff1690811115610a3f57610a3f6122e5565b14610ac55760405162461bcd60e51b815260206004820152604a60248201527f5265676973747279426173652e757064617465536f636b65743a2043616e206f60448201527f6e6c792075706461746520736f636b657420696620616374697665206f6e20746064820152696865207365727669636560b01b608482015260a4016108c8565b7fe8b6bc12be6e3abe0dcea31ecbc3a015bc0346210e971332ea65f3b49c7bd32e338383604051610af8939291906128c5565b60405180910390a15050565b60408051608081018252600080825260208201819052918101829052606081019190915260068281548110610b3b57610b3b612905565b600091825260209182902060408051608081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b8404811692820192909252600160a01b90920416606082015292915050565b600080610ba683610f42565b606001519392505050565b6000806000610bbf84610f42565b9050806040015181606001519250925050915091565b60016020528160005260406000208181548110610bf157600080fd5b6000918252602090912001546001600160a01b0381169250600160a01b90046001600160601b0316905082565b6040805160808101825260008082526020820181905291810182905260608101919091526000838152600860205260409020805483908110610c6257610c62612905565b600091825260209182902060408051608081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b8404811692820192909252600160a01b909204166060820152905092915050565b6001600160a01b0381166000908152600460205260408120600190810154600160201b900460ff1681811115610cfb57610cfb6122e5565b1492915050565b600054610100900460ff1615808015610d225750600054600160ff909116105b80610d3c5750303b158015610d3c575060005460ff166001145b610d9f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108c8565b6000805460ff191660011790558015610dc2576000805461ff0019166101001790555b610dcb84611de0565b604080516080810182526000808252602080830182815283850183815260608501848152600680546001808201835591875287517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f909101805495519451935163ffffffff92831667ffffffffffffffff1997881617600160201b96841687021767ffffffffffffffff16600160401b6001600160601b03968716026001600160a01b031617600160a01b9590911694909402939093179092558751808901909852858852938701858152600780549586018155865287517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688909501805491519583169190941617931602919091179055909190610ee99086611ff8565b610ef4600185611ff8565b50508015610f3c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60408051608080820183526000808352602080840182905283850182905260608085018390526001600160a01b038716835260048252858320548084526008835286842054875195860188528486529285018490529584018390528301919091529192919081610fb457949350505050565b6000838152600860205260409020610fcd600184612931565b81548110610fdd57610fdd612905565b600091825260209182902060408051608081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b8404811692820192909252600160a01b90920416606082015295945050505050565b6001600160a01b0383166000908152600460209081526040808320548084526008909252822080548391908590811061107a5761107a612905565b600091825260209182902060408051608081018252929091015463ffffffff808216808552600160201b8304909116948401949094526001600160601b03600160401b8204811692840192909252600160a01b9004166060820152915085108015906111015750602081015163ffffffff161580611101575084816020015163ffffffff16115b801561112f575060408101516001600160601b031615158061112f575060608101516001600160601b031615155b925050505b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bd9190612871565b6001600160a01b0316336001600160a01b0316146111ed5760405162461bcd60e51b81526004016108c89061288e565b61057d8282611ff8565b6001600160a01b03831660009081526004602052604081205463ffffffff8316158061126a5750600081815260096020526040902063ffffffff85169061123f600186612948565b63ffffffff168154811061125557611255612905565b60009182526020909120015463ffffffff1611155b6112eb5760405162461bcd60e51b815260206004820152604660248201527f5265676973747279426173652e6765744f70657261746f72496e6465783a204f60448201527f70657261746f7220696e646578486973746f727920696e64657820697320746f6064820152650de40d0d2ced60d31b608482015260a4016108c8565b6000818152600960205260408120805463ffffffff861690811061131157611311612905565b60009182526020918290206040805180820190915291015463ffffffff808216808452600160201b9092041692820192909252915015806113615750806000015163ffffffff168563ffffffff16105b6113d35760405162461bcd60e51b815260206004820152603c60248201527f5265676973747279426173652e6765744f70657261746f72496e6465783a206960448201527f6e646578486973746f727920696e64657820697320746f6f206c6f770000000060648201526084016108c8565b6020015195945050505050565b6000806113ec83610f42565b604001519392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114799190612871565b6001600160a01b0316336001600160a01b0316146114a95760405162461bcd60e51b81526004016108c89061288e565b600380546fffffffffffffffffffffffffffffffff19166001600160801b0392909216919091179055565b6000807f000000000000000000000000000000000000000000000000000000000000000083101561113457600061150a84610800565b604080518082019091526000808252602082015290915060005b828110156116cd57600086815260016020526040902080548290811061154c5761154c612905565b6000918252602080832060408051808201825293909101546001600160a01b03808216808652600160a01b9092046001600160601b031693850193909352905163778e55f360e01b81528b8316600482015260248101919091529194507f0000000000000000000000000000000000000000000000000000000000000000169063778e55f390604401602060405180830381865afa1580156115f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611616919061296d565b905080156116c4576020830151835160405163f3e7387560e01b815260048101849052670de0b6b3a7640000926001600160601b0316916001600160a01b03169063f3e73875906024016020604051808303816000875af115801561167f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a3919061296d565b6116ad9190612986565b6116b791906129a5565b6116c190866129c7565b94505b50600101611524565b5050509392505050565b6000806000600660016006805490506116f09190612931565b8154811061170057611700612905565b600091825260209182902060408051608081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b84048116928201839052600160a01b909304909216606090920182905294909350915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190612871565b6001600160a01b0316336001600160a01b0316146118185760405162461bcd60e51b81526004016108c89061288e565b828181146118a25760405162461bcd60e51b815260206004820152604b60248201527f566f746557656967686572426173652e72656d6f76655374726174656769657360448201527f436f6e73696465726564416e64576569676874733a20696e707574206c656e6760648201526a0e8d040dad2e6dac2e8c6d60ab1b608482015260a4016108c8565b60005b81811015611b07578585828181106118bf576118bf612905565b90506020020160208101906118d491906122c8565b6001600160a01b03166001600089815260200190815260200160002085858481811061190257611902612905565b905060200201358154811061191957611919612905565b6000918252602090912001546001600160a01b0316146119af5760405162461bcd60e51b815260206004820152604560248201527f566f746557656967686572426173652e72656d6f76655374726174656769657360448201527f436f6e73696465726564416e64576569676874733a20696e64657820696e636f6064820152641c9c9958dd60da1b608482015260a4016108c8565b6000878152600160208190526040909120805490916119cd91612931565b815481106119dd576119dd612905565b9060005260206000200160016000898152602001908152602001600020858584818110611a0c57611a0c612905565b9050602002013581548110611a2357611a23612905565b600091825260208083208454920180546001600160a01b0319166001600160a01b03909316928317815593546001600160601b03600160a01b918290041602909117909255888152600190915260409020805480611a8357611a836129f2565b600082815260208120820160001990810191909155019055867f327495b508542e8eeed9261ee4edc99d913ed525014a835e67fe5c1669c7c8b4878784818110611acf57611acf612905565b9050602002016020810190611ae491906122c8565b6040516001600160a01b03909116815260200160405180910390a26001016118a5565b50505050505050565b600063ffffffff82161580611b5f575063ffffffff83166007611b34600185612948565b63ffffffff1681548110611b4a57611b4a612905565b60009182526020909120015463ffffffff1611155b611be15760405162461bcd60e51b815260206004820152604760248201527f5265676973747279426173652e676574546f74616c4f70657261746f72733a2060448201527f546f74616c4f70657261746f7273486973746f727920696e64657820697320746064820152660dede40d0d2ced60cb1b608482015260a4016108c8565b600060078363ffffffff1681548110611bfc57611bfc612905565b60009182526020918290206040805180820190915291015463ffffffff8082168352600160201b909104169101819052949350505050565b60058181548110611c4457600080fd5b6000918252602090912001546001600160a01b0316905081565b60096020528160005260406000208181548110611c7a57600080fd5b60009182526020909120015463ffffffff8082169350600160201b90910416905082565b60078181548110611cae57600080fd5b60009182526020909120015463ffffffff8082169250600160201b9091041682565b6001600160a01b0383166000908152600460209081526040808320548084526008909252822054611d05576001915050611134565b6000818152600860205260408120805485908110611d2557611d25612905565b600091825260209182902060408051608081018252929091015463ffffffff808216808552600160201b8304909116948401949094526001600160601b03600160401b8204811692840192909252600160a01b900416606082015291508510801590611dac5750602081015163ffffffff161580611dac575084816020015163ffffffff16115b801561112f575060408101516001600160601b031615801561112f5750606001516001600160601b03161595945050505050565b600054610100900460ff16611e4b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016108c8565b7f0000000000000000000000000000000000000000000000000000000000000000815114611eef5760405162461bcd60e51b8152602060048201526044602482018190527f566f746557656967686572426173652e5f696e697469616c697a653a205f7175908201527f6f72756d426970732e6c656e67746820213d204e554d4245525f4f465f51554f60648201526352554d5360e01b608482015260a4016108c8565b6000805b7f0000000000000000000000000000000000000000000000000000000000000000811015611f8057828181518110611f2d57611f2d612905565b602002602001015182611f409190612a08565b9150828181518110611f5457611f54612905565b60209081029190910181015160008381526002909252604090912055611f7981612a20565b9050611ef3565b50612710811461057d5760405162461bcd60e51b815260206004820152603860248201527f566f746557656967686572426173652e5f696e697469616c697a653a20746f7460448201527f616c51756f72756d4269707320213d204d41585f42495053000000000000000060648201526084016108c8565b8051600083815260016020908152604090912054906120178383612a08565b11156120b15760405162461bcd60e51b815260206004820152605b60248201527f566f746557656967686572426173652e5f61646453747261746567696573436f60448201527f6e73696465726564416e644d756c7469706c696572733a20657863656564204d60648201527f41585f5745494748494e475f46554e4354494f4e5f4c454e4754480000000000608482015260a4016108c8565b60005b828110156122935760005b6120c98284612a08565b8110156121c8578482815181106120e2576120e2612905565b6020026020010151600001516001600160a01b031660016000888152602001908152602001600020828154811061211b5761211b612905565b6000918252602090912001546001600160a01b031614156121c05760405162461bcd60e51b815260206004820152605360248201527f566f746557656967686572426173652e5f61646453747261746567696573436f60448201527f6e73696465726564416e644d756c7469706c696572733a2063616e6e6f7420616064820152720c8c840e6c2daca40e6e8e4c2e8cacef24064f606b1b608482015260a4016108c8565b6001016120bf565b50600085815260016020526040902084518590839081106121eb576121eb612905565b6020908102919091018101518254600181018455600093845292829020815191909201516001600160601b0316600160a01b026001600160a01b0390911617910155835185907fa9d6f91aa411cbebcc7bd4c1f2685e2f4677353ebadfba370f19a365ea679d929086908490811061226557612265612905565b602090810291909101810151516040516001600160a01b0390911681520160405180910390a26001016120b4565b5050505050565b6000602082840312156122ac57600080fd5b5035919050565b6001600160a01b038116811461074657600080fd5b6000602082840312156122da57600080fd5b8135611134816122b3565b634e487b7160e01b600052602160045260246000fd5b83815263ffffffff83166020820152606081016002831061232c57634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b6000806040838503121561234d57600080fd5b50508035926020909101359150565b60006020828403121561236e57600080fd5b81356001600160801b038116811461113457600080fd5b6000806020838503121561239857600080fd5b823567ffffffffffffffff808211156123b057600080fd5b818501915085601f8301126123c457600080fd5b8135818111156123d357600080fd5b8660208285010111156123e557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612430576124306123f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561245f5761245f6123f7565b604052919050565b600067ffffffffffffffff821115612481576124816123f7565b5060051b60200190565b600082601f83011261249c57600080fd5b813560206124b16124ac83612467565b612436565b82815260069290921b840181019181810190868411156124d057600080fd5b8286015b8481101561252e57604081890312156124ed5760008081fd5b6124f561240d565b8135612500816122b3565b8152818501356001600160601b038116811461251c5760008081fd5b818601528352918301916040016124d4565b509695505050505050565b60008060006060848603121561254e57600080fd5b833567ffffffffffffffff8082111561256657600080fd5b818601915086601f83011261257a57600080fd5b8135602061258a6124ac83612467565b82815260059290921b8401810191818101908a8411156125a957600080fd5b948201945b838610156125c7578535825294820194908201906125ae565b975050870135925050808211156125dd57600080fd5b6125e98783880161248b565b935060408601359150808211156125ff57600080fd5b5061260c8682870161248b565b9150509250925092565b803563ffffffff8116811461262a57600080fd5b919050565b6000806040838503121561264257600080fd5b823561264d816122b3565b915061265b60208401612616565b90509250929050565b60008060006060848603121561267957600080fd5b8335612684816122b3565b95602085013595506040909401359392505050565b600080604083850312156126ac57600080fd5b82359150602083013567ffffffffffffffff8111156126ca57600080fd5b6126d68582860161248b565b9150509250929050565b6000806000606084860312156126f557600080fd5b8335612700816122b3565b925061270e60208501612616565b915061271c60408501612616565b90509250925092565b6000806040838503121561273857600080fd5b8235612743816122b3565b946020939093013593505050565b60008083601f84011261276357600080fd5b50813567ffffffffffffffff81111561277b57600080fd5b6020830191508360208260051b850101111561279657600080fd5b9250929050565b6000806000806000606086880312156127b557600080fd5b85359450602086013567ffffffffffffffff808211156127d457600080fd5b6127e089838a01612751565b909650945060408801359150808211156127f957600080fd5b5061280688828901612751565b969995985093965092949392505050565b6000806040838503121561282a57600080fd5b61264d83612616565b60008060006060848603121561284857600080fd5b8335612853816122b3565b925061286160208501612616565b9150604084013590509250925092565b60006020828403121561288357600080fd5b8151611134816122b3565b60208082526017908201527f6f6e6c79536572766963654d616e616765724f776e6572000000000000000000604082015260600190565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156129435761294361291b565b500390565b600063ffffffff838116908316818110156129655761296561291b565b039392505050565b60006020828403121561297f57600080fd5b5051919050565b60008160001904831182151516156129a0576129a061291b565b500290565b6000826129c257634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160601b038083168185168083038211156129e9576129e961291b565b01949350505050565b634e487b7160e01b600052603160045260246000fd5b60008219821115612a1b57612a1b61291b565b500190565b6000600019821415612a3457612a3461291b565b506001019056fea2646970667358221220fe719dafed55580cc3481175be53ef3a39dc56e2df244cf36b2def91f17b87be64736f6c634300080c0033",
    "sourceMap": "149:1920:91:-:0;;;1174:47:71;1122:46;1174:47;1573:26:0;;;-1:-1:-1;;214:28:91;;;;;249:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;451:18;;414;;434:15;;451:18;;;;;414;434:15;451:18;414;434:15;451:18;;2717:95:74;;;;-1:-1:-1;;;2717:95:74;;1047:2:96;2717:95:74;;;1029:21:96;1086:2;1066:18;;;1059:30;1125:34;1105:18;;;1098:62;1196:29;1176:18;;;1169:57;1243:19;;2717:95:74;;;;;;;;;-1:-1:-1;;;;;2822:38:74;;;;;;2883:31;;;-1:-1:-1;;;2883:31:74;;;;:29;;:31;;;;;;;;;;;;;;;2822:38;2883:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2870:44:74;;;;;2924:32;;;;2966:38;;;;;3104:22;:20;:22::i;:::-;2478:655;;;1558:276:73;;;3059:268:71;;;249:228:91;;;149:1920;;5388:279:8;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:8;;1783:2:96;5447:66:8;;;1765:21:96;1822:2;1802:18;;;1795:30;1861:34;1841:18;;;1834:62;-1:-1:-1;;;1912:18:96;;;1905:37;1959:19;;5447:66:8;1581:403:96;5447:66:8;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:8;5588:15;5573:30;;;;;;5622:28;;2131:36:96;;;5622:28:8;;2119:2:96;2104:18;5622:28:8;;;;;;;5523:138;5388:279::o;14:153:96:-;-1:-1:-1;;;;;111:31:96;;101:42;;91:70;;157:1;154;147:12;91:70;14:153;:::o;172:668::-;343:6;351;359;412:2;400:9;391:7;387:23;383:32;380:52;;;428:1;425;418:12;380:52;460:9;454:16;479:53;526:5;479:53;:::i;:::-;601:2;586:18;;580:25;551:5;;-1:-1:-1;614:55:96;580:25;614:55;:::i;:::-;740:2;725:18;;719:25;688:7;;-1:-1:-1;753:55:96;719:25;753:55;:::i;:::-;827:7;817:17;;;172:668;;;;;:::o;1273:303::-;1373:6;1426:2;1414:9;1405:7;1401:23;1397:32;1394:52;;;1442:1;1439;1432:12;1394:52;1474:9;1468:16;1493:53;1540:5;1493:53;:::i;:::-;1565:5;1273:303;-1:-1:-1;;;1273:303:96:o;1989:184::-;149:1920:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061028a5760003560e01c806388db78a91161015c578063ca06c782116100ce578063df5cf72311610087578063df5cf72314610749578063e21ade6d14610770578063e84ef3cb14610797578063fa7626d4146107aa578063fae6cf58146107b7578063fd0d930a146107d757600080fd5b8063ca06c782146106c7578063ca150cb6146106cf578063cb38f407146106e2578063d24f6ddd146106f5578063d266b10814610725578063d8cf98ca1461073857600080fd5b8063ae124d4011610120578063ae124d4014610655578063aeadd15c14610498578063b322bdc714610687578063ba414fa61461069a578063bd820688146106ac578063c0bf897e146106b457600080fd5b806388db78a9146105e2578063891f28a5146105f55780638b0e9f3f14610608578063a3c96ce514610610578063a9983b5c1461062357600080fd5b80632979536e1161020057806353c9264a116101b957806353c9264a1461055c578063586621621461056f578063629b312a146105815780636bbc5310146105945780637210b0c9146105a75780638392eb59146105cf57600080fd5b80632979536e146104985780633367cca5146104b85780633531d479146104db5780633998fdd3146104e35780634698a394146105225780634b31bb101461053557600080fd5b8063102068d311610252578063102068d31461036f57806317422e8a146103cd5780631c9856ae146103f85780631ea1afe11461042b5780632173fa231461046557806328420dfa1461047857600080fd5b80630191f72c1461028f578063038defd7146102b55780630712b6a4146102fd5780630baa9798146103475780630cf4b7671461035c575b600080fd5b6102a261029d36600461229a565b610800565b6040519081526020015b60405180910390f35b6102ee6102c33660046122c8565b6004602052600090815260409020805460019091015463ffffffff811690600160201b900460ff1683565b6040516102ac939291906122fb565b61031061030b36600461233a565b6108e4565b6040805163ffffffff95861681529490931660208501526001600160601b03918216928401929092521660608201526080016102ac565b61035a61035536600461235c565b61093d565b005b61035a61036a366004612385565b610a0e565b61038261037d36600461229a565b610b04565b60408051825163ffffffff908116825260208085015190911690820152828201516001600160601b0390811692820192909252606092830151909116918101919091526080016102ac565b6103e06103db3660046122c8565b610b9a565b6040516001600160601b0390911681526020016102ac565b61040b6104063660046122c8565b610bb1565b604080516001600160601b039384168152929091166020830152016102ac565b61043e61043936600461233a565b610bd5565b604080516001600160a01b0390931683526001600160601b039091166020830152016102ac565b61038261047336600461233a565b610c1e565b6102a261048636600461229a565b60026020526000908152604090205481565b6102a26104a636600461229a565b60009081526008602052604090205490565b6104cb6104c63660046122c8565b610cc3565b60405190151581526020016102ac565b6007546102a2565b61050a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102ac565b61035a610530366004612539565b610d02565b61050a7f000000000000000000000000000000000000000000000000000000000000000081565b61038261056a3660046122c8565b610f42565b61035a61057d36600461262f565b5050565b6104cb61058f366004612664565b61103f565b61035a6105a2366004612699565b61113b565b6105ba6105b53660046126e0565b6111f7565b60405163ffffffff90911681526020016102ac565b6103e06105dd3660046122c8565b6113e0565b61035a6105f036600461235c565b6113f7565b6103e0610603366004612725565b6114d4565b61040b6116d7565b61035a61061e36600461279d565b611766565b60035461063d90600160801b90046001600160801b031681565b6040516001600160801b0390911681526020016102ac565b6105ba6106633660046122c8565b6001600160a01b031660009081526004602052604090206001015463ffffffff1690565b6105ba610695366004612817565b611b10565b600a546104cb90610100900460ff1681565b6005546105ba565b61035a6106c2366004612833565b505050565b6006546102a2565b60035461063d906001600160801b031681565b61050a6106f036600461229a565b611c34565b61070861070336600461233a565b611c5e565b6040805163ffffffff9384168152929091166020830152016102ac565b61070861073336600461229a565b611c9e565b61035a6107463660046122c8565b50565b61050a7f000000000000000000000000000000000000000000000000000000000000000081565b6102a27f000000000000000000000000000000000000000000000000000000000000000081565b6104cb6107a5366004612664565b611cd0565b600a546104cb9060ff1681565b6102a26107c536600461229a565b60009081526009602052604090205490565b6102a26107e53660046122c8565b6001600160a01b031660009081526004602052604090205490565b60007f000000000000000000000000000000000000000000000000000000000000000082106108d15760405162461bcd60e51b815260206004820152606660248201527f566f746557656967686572426173652e73747261746567696573436f6e73696460448201527f65726564416e644d756c7469706c696572734c656e6774683a2071756f72756d60648201527f4e756d62657220696e7075742065786365656473204e554d4245525f4f465f51608482015265554f52554d5360d01b60a482015260c4015b60405180910390fd5b5060009081526001602052604090205490565b6008602052816000526040600020818154811061090057600080fd5b60009182526020909120015463ffffffff8082169350600160201b82041691506001600160601b03600160401b8204811691600160a01b90041684565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190612871565b6001600160a01b0316336001600160a01b0316146109ef5760405162461bcd60e51b81526004016108c89061288e565b600380546001600160801b03928316600160801b029216919091179055565b6001336000908152600460205260409020600190810154600160201b900460ff1690811115610a3f57610a3f6122e5565b14610ac55760405162461bcd60e51b815260206004820152604a60248201527f5265676973747279426173652e757064617465536f636b65743a2043616e206f60448201527f6e6c792075706461746520736f636b657420696620616374697665206f6e20746064820152696865207365727669636560b01b608482015260a4016108c8565b7fe8b6bc12be6e3abe0dcea31ecbc3a015bc0346210e971332ea65f3b49c7bd32e338383604051610af8939291906128c5565b60405180910390a15050565b60408051608081018252600080825260208201819052918101829052606081019190915260068281548110610b3b57610b3b612905565b600091825260209182902060408051608081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b8404811692820192909252600160a01b90920416606082015292915050565b600080610ba683610f42565b606001519392505050565b6000806000610bbf84610f42565b9050806040015181606001519250925050915091565b60016020528160005260406000208181548110610bf157600080fd5b6000918252602090912001546001600160a01b0381169250600160a01b90046001600160601b0316905082565b6040805160808101825260008082526020820181905291810182905260608101919091526000838152600860205260409020805483908110610c6257610c62612905565b600091825260209182902060408051608081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b8404811692820192909252600160a01b909204166060820152905092915050565b6001600160a01b0381166000908152600460205260408120600190810154600160201b900460ff1681811115610cfb57610cfb6122e5565b1492915050565b600054610100900460ff1615808015610d225750600054600160ff909116105b80610d3c5750303b158015610d3c575060005460ff166001145b610d9f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016108c8565b6000805460ff191660011790558015610dc2576000805461ff0019166101001790555b610dcb84611de0565b604080516080810182526000808252602080830182815283850183815260608501848152600680546001808201835591875287517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f909101805495519451935163ffffffff92831667ffffffffffffffff1997881617600160201b96841687021767ffffffffffffffff16600160401b6001600160601b03968716026001600160a01b031617600160a01b9590911694909402939093179092558751808901909852858852938701858152600780549586018155865287517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688909501805491519583169190941617931602919091179055909190610ee99086611ff8565b610ef4600185611ff8565b50508015610f3c576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60408051608080820183526000808352602080840182905283850182905260608085018390526001600160a01b038716835260048252858320548084526008835286842054875195860188528486529285018490529584018390528301919091529192919081610fb457949350505050565b6000838152600860205260409020610fcd600184612931565b81548110610fdd57610fdd612905565b600091825260209182902060408051608081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b8404811692820192909252600160a01b90920416606082015295945050505050565b6001600160a01b0383166000908152600460209081526040808320548084526008909252822080548391908590811061107a5761107a612905565b600091825260209182902060408051608081018252929091015463ffffffff808216808552600160201b8304909116948401949094526001600160601b03600160401b8204811692840192909252600160a01b9004166060820152915085108015906111015750602081015163ffffffff161580611101575084816020015163ffffffff16115b801561112f575060408101516001600160601b031615158061112f575060608101516001600160601b031615155b925050505b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611199573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111bd9190612871565b6001600160a01b0316336001600160a01b0316146111ed5760405162461bcd60e51b81526004016108c89061288e565b61057d8282611ff8565b6001600160a01b03831660009081526004602052604081205463ffffffff8316158061126a5750600081815260096020526040902063ffffffff85169061123f600186612948565b63ffffffff168154811061125557611255612905565b60009182526020909120015463ffffffff1611155b6112eb5760405162461bcd60e51b815260206004820152604660248201527f5265676973747279426173652e6765744f70657261746f72496e6465783a204f60448201527f70657261746f7220696e646578486973746f727920696e64657820697320746f6064820152650de40d0d2ced60d31b608482015260a4016108c8565b6000818152600960205260408120805463ffffffff861690811061131157611311612905565b60009182526020918290206040805180820190915291015463ffffffff808216808452600160201b9092041692820192909252915015806113615750806000015163ffffffff168563ffffffff16105b6113d35760405162461bcd60e51b815260206004820152603c60248201527f5265676973747279426173652e6765744f70657261746f72496e6465783a206960448201527f6e646578486973746f727920696e64657820697320746f6f206c6f770000000060648201526084016108c8565b6020015195945050505050565b6000806113ec83610f42565b604001519392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114799190612871565b6001600160a01b0316336001600160a01b0316146114a95760405162461bcd60e51b81526004016108c89061288e565b600380546fffffffffffffffffffffffffffffffff19166001600160801b0392909216919091179055565b6000807f000000000000000000000000000000000000000000000000000000000000000083101561113457600061150a84610800565b604080518082019091526000808252602082015290915060005b828110156116cd57600086815260016020526040902080548290811061154c5761154c612905565b6000918252602080832060408051808201825293909101546001600160a01b03808216808652600160a01b9092046001600160601b031693850193909352905163778e55f360e01b81528b8316600482015260248101919091529194507f0000000000000000000000000000000000000000000000000000000000000000169063778e55f390604401602060405180830381865afa1580156115f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611616919061296d565b905080156116c4576020830151835160405163f3e7387560e01b815260048101849052670de0b6b3a7640000926001600160601b0316916001600160a01b03169063f3e73875906024016020604051808303816000875af115801561167f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a3919061296d565b6116ad9190612986565b6116b791906129a5565b6116c190866129c7565b94505b50600101611524565b5050509392505050565b6000806000600660016006805490506116f09190612931565b8154811061170057611700612905565b600091825260209182902060408051608081018252919092015463ffffffff8082168352600160201b820416938201939093526001600160601b03600160401b84048116928201839052600160a01b909304909216606090920182905294909350915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117e89190612871565b6001600160a01b0316336001600160a01b0316146118185760405162461bcd60e51b81526004016108c89061288e565b828181146118a25760405162461bcd60e51b815260206004820152604b60248201527f566f746557656967686572426173652e72656d6f76655374726174656769657360448201527f436f6e73696465726564416e64576569676874733a20696e707574206c656e6760648201526a0e8d040dad2e6dac2e8c6d60ab1b608482015260a4016108c8565b60005b81811015611b07578585828181106118bf576118bf612905565b90506020020160208101906118d491906122c8565b6001600160a01b03166001600089815260200190815260200160002085858481811061190257611902612905565b905060200201358154811061191957611919612905565b6000918252602090912001546001600160a01b0316146119af5760405162461bcd60e51b815260206004820152604560248201527f566f746557656967686572426173652e72656d6f76655374726174656769657360448201527f436f6e73696465726564416e64576569676874733a20696e64657820696e636f6064820152641c9c9958dd60da1b608482015260a4016108c8565b6000878152600160208190526040909120805490916119cd91612931565b815481106119dd576119dd612905565b9060005260206000200160016000898152602001908152602001600020858584818110611a0c57611a0c612905565b9050602002013581548110611a2357611a23612905565b600091825260208083208454920180546001600160a01b0319166001600160a01b03909316928317815593546001600160601b03600160a01b918290041602909117909255888152600190915260409020805480611a8357611a836129f2565b600082815260208120820160001990810191909155019055867f327495b508542e8eeed9261ee4edc99d913ed525014a835e67fe5c1669c7c8b4878784818110611acf57611acf612905565b9050602002016020810190611ae491906122c8565b6040516001600160a01b03909116815260200160405180910390a26001016118a5565b50505050505050565b600063ffffffff82161580611b5f575063ffffffff83166007611b34600185612948565b63ffffffff1681548110611b4a57611b4a612905565b60009182526020909120015463ffffffff1611155b611be15760405162461bcd60e51b815260206004820152604760248201527f5265676973747279426173652e676574546f74616c4f70657261746f72733a2060448201527f546f74616c4f70657261746f7273486973746f727920696e64657820697320746064820152660dede40d0d2ced60cb1b608482015260a4016108c8565b600060078363ffffffff1681548110611bfc57611bfc612905565b60009182526020918290206040805180820190915291015463ffffffff8082168352600160201b909104169101819052949350505050565b60058181548110611c4457600080fd5b6000918252602090912001546001600160a01b0316905081565b60096020528160005260406000208181548110611c7a57600080fd5b60009182526020909120015463ffffffff8082169350600160201b90910416905082565b60078181548110611cae57600080fd5b60009182526020909120015463ffffffff8082169250600160201b9091041682565b6001600160a01b0383166000908152600460209081526040808320548084526008909252822054611d05576001915050611134565b6000818152600860205260408120805485908110611d2557611d25612905565b600091825260209182902060408051608081018252929091015463ffffffff808216808552600160201b8304909116948401949094526001600160601b03600160401b8204811692840192909252600160a01b900416606082015291508510801590611dac5750602081015163ffffffff161580611dac575084816020015163ffffffff16115b801561112f575060408101516001600160601b031615801561112f5750606001516001600160601b03161595945050505050565b600054610100900460ff16611e4b5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016108c8565b7f0000000000000000000000000000000000000000000000000000000000000000815114611eef5760405162461bcd60e51b8152602060048201526044602482018190527f566f746557656967686572426173652e5f696e697469616c697a653a205f7175908201527f6f72756d426970732e6c656e67746820213d204e554d4245525f4f465f51554f60648201526352554d5360e01b608482015260a4016108c8565b6000805b7f0000000000000000000000000000000000000000000000000000000000000000811015611f8057828181518110611f2d57611f2d612905565b602002602001015182611f409190612a08565b9150828181518110611f5457611f54612905565b60209081029190910181015160008381526002909252604090912055611f7981612a20565b9050611ef3565b50612710811461057d5760405162461bcd60e51b815260206004820152603860248201527f566f746557656967686572426173652e5f696e697469616c697a653a20746f7460448201527f616c51756f72756d4269707320213d204d41585f42495053000000000000000060648201526084016108c8565b8051600083815260016020908152604090912054906120178383612a08565b11156120b15760405162461bcd60e51b815260206004820152605b60248201527f566f746557656967686572426173652e5f61646453747261746567696573436f60448201527f6e73696465726564416e644d756c7469706c696572733a20657863656564204d60648201527f41585f5745494748494e475f46554e4354494f4e5f4c454e4754480000000000608482015260a4016108c8565b60005b828110156122935760005b6120c98284612a08565b8110156121c8578482815181106120e2576120e2612905565b6020026020010151600001516001600160a01b031660016000888152602001908152602001600020828154811061211b5761211b612905565b6000918252602090912001546001600160a01b031614156121c05760405162461bcd60e51b815260206004820152605360248201527f566f746557656967686572426173652e5f61646453747261746567696573436f60448201527f6e73696465726564416e644d756c7469706c696572733a2063616e6e6f7420616064820152720c8c840e6c2daca40e6e8e4c2e8cacef24064f606b1b608482015260a4016108c8565b6001016120bf565b50600085815260016020526040902084518590839081106121eb576121eb612905565b6020908102919091018101518254600181018455600093845292829020815191909201516001600160601b0316600160a01b026001600160a01b0390911617910155835185907fa9d6f91aa411cbebcc7bd4c1f2685e2f4677353ebadfba370f19a365ea679d929086908490811061226557612265612905565b602090810291909101810151516040516001600160a01b0390911681520160405180910390a26001016120b4565b5050505050565b6000602082840312156122ac57600080fd5b5035919050565b6001600160a01b038116811461074657600080fd5b6000602082840312156122da57600080fd5b8135611134816122b3565b634e487b7160e01b600052602160045260246000fd5b83815263ffffffff83166020820152606081016002831061232c57634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b6000806040838503121561234d57600080fd5b50508035926020909101359150565b60006020828403121561236e57600080fd5b81356001600160801b038116811461113457600080fd5b6000806020838503121561239857600080fd5b823567ffffffffffffffff808211156123b057600080fd5b818501915085601f8301126123c457600080fd5b8135818111156123d357600080fd5b8660208285010111156123e557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715612430576124306123f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561245f5761245f6123f7565b604052919050565b600067ffffffffffffffff821115612481576124816123f7565b5060051b60200190565b600082601f83011261249c57600080fd5b813560206124b16124ac83612467565b612436565b82815260069290921b840181019181810190868411156124d057600080fd5b8286015b8481101561252e57604081890312156124ed5760008081fd5b6124f561240d565b8135612500816122b3565b8152818501356001600160601b038116811461251c5760008081fd5b818601528352918301916040016124d4565b509695505050505050565b60008060006060848603121561254e57600080fd5b833567ffffffffffffffff8082111561256657600080fd5b818601915086601f83011261257a57600080fd5b8135602061258a6124ac83612467565b82815260059290921b8401810191818101908a8411156125a957600080fd5b948201945b838610156125c7578535825294820194908201906125ae565b975050870135925050808211156125dd57600080fd5b6125e98783880161248b565b935060408601359150808211156125ff57600080fd5b5061260c8682870161248b565b9150509250925092565b803563ffffffff8116811461262a57600080fd5b919050565b6000806040838503121561264257600080fd5b823561264d816122b3565b915061265b60208401612616565b90509250929050565b60008060006060848603121561267957600080fd5b8335612684816122b3565b95602085013595506040909401359392505050565b600080604083850312156126ac57600080fd5b82359150602083013567ffffffffffffffff8111156126ca57600080fd5b6126d68582860161248b565b9150509250929050565b6000806000606084860312156126f557600080fd5b8335612700816122b3565b925061270e60208501612616565b915061271c60408501612616565b90509250925092565b6000806040838503121561273857600080fd5b8235612743816122b3565b946020939093013593505050565b60008083601f84011261276357600080fd5b50813567ffffffffffffffff81111561277b57600080fd5b6020830191508360208260051b850101111561279657600080fd5b9250929050565b6000806000806000606086880312156127b557600080fd5b85359450602086013567ffffffffffffffff808211156127d457600080fd5b6127e089838a01612751565b909650945060408801359150808211156127f957600080fd5b5061280688828901612751565b969995985093965092949392505050565b6000806040838503121561282a57600080fd5b61264d83612616565b60008060006060848603121561284857600080fd5b8335612853816122b3565b925061286160208501612616565b9150604084013590509250925092565b60006020828403121561288357600080fd5b8151611134816122b3565b60208082526017908201527f6f6e6c79536572766963654d616e616765724f776e6572000000000000000000604082015260600190565b6001600160a01b03841681526040602082018190528101829052818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156129435761294361291b565b500390565b600063ffffffff838116908316818110156129655761296561291b565b039392505050565b60006020828403121561297f57600080fd5b5051919050565b60008160001904831182151516156129a0576129a061291b565b500290565b6000826129c257634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160601b038083168185168083038211156129e9576129e961291b565b01949350505050565b634e487b7160e01b600052603160045260246000fd5b60008219821115612a1b57612a1b61291b565b500190565b6000600019821415612a3457612a3461291b565b506001019056fea2646970667358221220fe719dafed55580cc3481175be53ef3a39dc56e2df244cf36b2def91f17b87be64736f6c634300080c0033",
    "sourceMap": "149:1920:91:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6553:372:73;;;;;;:::i;:::-;;:::i;:::-;;;345:25:96;;;333:2;318:18;6553:372:73;;;;;;;;1311:44:71;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1311:44:71;;;;;;;;;;;;;;;:::i;1925:67::-;;;;;;:::i;:::-;;:::i;:::-;;;;1889:10:96;1926:15;;;1908:34;;1978:15;;;;1973:2;1958:18;;1951:43;-1:-1:-1;;;;;2075:15:96;;;2055:18;;;2048:43;;;;2127:15;2122:2;2107:18;;2100:43;1866:3;1851:19;1925:67:71;1656:493:96;18423:174:71;;;;;;:::i;:::-;;:::i;:::-;;18603:306;;;;;;:::i;:::-;;:::i;17400:140::-;;;;;;:::i;:::-;;:::i;:::-;;;;3319:13:96;;3278:10;3315:22;;;3297:41;;3398:4;3386:17;;;3380:24;3376:33;;;3354:20;;;3347:63;3445:17;;;3439:24;-1:-1:-1;;;;;3546:21:96;;;3524:20;;;3517:51;;;;3628:4;3616:17;;;3610:24;3606:33;;;3584:20;;;3577:63;;;;3255:3;3240:19;17400:140:71;3057:589:96;15523:215:71;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3813:39:96;;;3795:58;;3783:2;3768:18;15523:215:71;3651:208:96;15930:235:71;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4097:15:96;;;4079:34;;4149:15;;;;4144:2;4129:18;;4122:43;4007:18;15930:235:71;3864:307:96;2023:94:74;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;4648:32:96;;;4630:51;;-1:-1:-1;;;;;4717:39:96;;;4712:2;4697:18;;4690:67;4603:18;2023:94:74;4429:334:96;8946:215:71;;;;;;:::i;:::-;;:::i;2426:45:74:-;;;;;;:::i;:::-;;;;;;;;;;;;;;15148:150:71;;;;;;:::i;:::-;15222:7;15248:36;;;:24;:36;;;;;:43;;15148:150;8142:165;;;;;;:::i;:::-;;:::i;:::-;;;5118:14:96;;5111:22;5093:41;;5081:2;5066:18;8142:165:71;4953:187:96;17071:128:71;17164:21;:28;17071:128;;1684:47:74;;;;;;;;-1:-1:-1;;;;;5334:32:96;;;5316:51;;5304:2;5289:18;1684:47:74;5145:228:96;483:947:91;;;;;;:::i;:::-;;:::i;1522:53:74:-;;;;;14663:479:71;;;;;;:::i;:::-;;:::i;1436:150:91:-;;;;;;:::i;:::-;;;;10497:1178:71;;;;;;:::i;:::-;;:::i;4275:321:73:-;;;;;;:::i;:::-;;:::i;5449:1290:71:-;;;;;;:::i;:::-;;:::i;:::-;;;11205:10:96;11193:23;;;11175:42;;11163:2;11148:18;5449:1290:71;11031:192:96;15304:213:71;;;;;;:::i;:::-;;:::i;18115:170::-;;;;;;:::i;:::-;;:::i;2853:1321:73:-;;;;;;:::i;:::-;;:::i;16259:344:71:-;;;:::i;5011:1309:73:-;;;;;;:::i;:::-;;:::i;1174:47:71:-;;;;;-1:-1:-1;;;1174:47:71;;-1:-1:-1;;;;;1174:47:71;;;;;;-1:-1:-1;;;;;13022:47:96;;;13004:66;;12992:2;12977:18;1174:47:71;12858:218:96;17624:144:71;;;;;;:::i;:::-;-1:-1:-1;;;;;17728:18:71;17703:6;17728:18;;;:8;:18;;;;;:33;;;;;;17624:144;7046:981;;;;;;:::i;:::-;;:::i;1605:18:0:-;;;;;;;;;;;;17847:104:71;17924:12;:19;17847:104;;1811:256:91;;;;;;:::i;:::-;;;;;16945:120:71;17034:17;:24;16945:120;;1122:46;;;;;-1:-1:-1;;;;;1122:46:71;;;1445:29;;;;;;:::i;:::-;;:::i;2110:67::-;;;;;;:::i;:::-;;:::i;:::-;;;;14122:10:96;14159:15;;;14141:34;;14211:15;;;;14206:2;14191:18;;14184:43;14085:18;2110:67:71;13942:291:96;1785:44:71;;;;;;:::i;:::-;;:::i;1592:213:91:-;;;;;;:::i;:::-;;;1390:48:74;;;;;1811:42;;;;;13013:1420:71;;;;;;:::i;:::-;;:::i;1573:26:0:-;;;;;;;;;16777:162:71;;;;;;:::i;:::-;16863:7;16889:36;;;:24;:36;;;;;:43;;16777:162;8389:132;;;;;;:::i;:::-;-1:-1:-1;;;;;8485:18:71;8459:7;8485:18;;;:8;:18;;;;;:29;;8389:132;6553:372:73;6646:7;6701:17;6686:12;:32;6665:181;;;;-1:-1:-1;;;6665:181:73;;14860:2:96;6665:181:73;;;14842:21:96;14899:3;14879:18;;;14872:31;14939:34;14919:18;;;14912:62;15010:34;14990:18;;;14983:62;15082:34;15061:19;;;15054:63;-1:-1:-1;;;15133:19:96;;;15126:37;15180:19;;6665:181:73;;;;;;;;;-1:-1:-1;6863:48:73;;;;:34;:48;;;;;:55;;6553:372::o;1925:67:71:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1925:67:71;;;;-1:-1:-1;;;;;;;;;1925:67:71;;;;;-1:-1:-1;;;1925:67:71;;;;:::o;18423:174::-;1343:14:73;-1:-1:-1;;;;;1343:20:73;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1329:36:73;:10;-1:-1:-1;;;;;1329:36:73;;1321:72;;;;-1:-1:-1;;;1321:72:73;;;;;;;:::i;:::-;18538:24:71::1;:52:::0;;-1:-1:-1;;;;;18538:52:71;;::::1;-1:-1:-1::0;;;18538:52:71::1;::::0;::::1;::::0;;;::::1;::::0;;18423:174::o;18603:306::-;18723:29;18701:10;18692:20;;;;:8;:20;;;;;:27;;;;;-1:-1:-1;;;18692:27:71;;;;;:60;;;;;;;:::i;:::-;;18671:181;;;;-1:-1:-1;;;18671:181:71;;16020:2:96;18671:181:71;;;16002:21:96;16059:2;16039:18;;;16032:30;16098:34;16078:18;;;16071:62;16169:34;16149:18;;;16142:62;-1:-1:-1;;;16220:19:96;;;16213:41;16271:19;;18671:181:71;15818:478:96;18671:181:71;18867:35;18880:10;18892:9;;18867:35;;;;;;;;:::i;:::-;;;;;;;;18603:306;;:::o;17400:140::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17509:17:71;17527:5;17509:24;;;;;;;;:::i;:::-;;;;;;;;;;17502:31;;;;;;;;17509:24;;;;17502:31;;;;;;;-1:-1:-1;;;17502:31:71;;;;;;;;;;-1:-1:-1;;;;;;;;17502:31:71;;;;;;;;;;;-1:-1:-1;;;17502:31:71;;;;;;;;;17400:140;-1:-1:-1;;17400:140:71:o;15523:215::-;15602:6;15620:28;15651:38;15680:8;15651:28;:38::i;:::-;15706:25;;;;15523:215;-1:-1:-1;;;15523:215:71:o;15930:235::-;15993:6;16001;16019:28;16050:38;16079:8;16050:28;:38::i;:::-;16019:69;;16106:7;:24;;;16132:7;:25;;;16098:60;;;;;15930:235;;;:::o;2023:94:74:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2023:94:74;;;-1:-1:-1;;;;2023:94:74;;-1:-1:-1;;;;;2023:94:74;;-1:-1:-1;2023:94:74;:::o;8946:215:71:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9111:36:71;;;;:24;:36;;;;;:43;;9148:5;;9111:43;;;;;;:::i;:::-;;;;;;;;;;9104:50;;;;;;;;9111:43;;;;9104:50;;;;;;;-1:-1:-1;;;9104:50:71;;;;;;;;;;-1:-1:-1;;;;;;;;9104:50:71;;;;;;;;;;;-1:-1:-1;;;9104:50:71;;;;;;;;;-1:-1:-1;8946:215:71;;;;:::o;8142:165::-;-1:-1:-1;;;;;8241:18:71;;8217:4;8241:18;;;:8;:18;;;;;8270:29;8241:25;;;;-1:-1:-1;;;8241:25:71;;;;:58;;;;;;;;:::i;:::-;;;8142:165;-1:-1:-1;;8142:165:71:o;483:947:91:-;3111:19:8;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:8;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:8;1476:19:10;:23;;;3219:66:8;;-1:-1:-1;3268:12:8;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:8;;17127:2:96;3157:201:8;;;17109:21:96;17166:2;17146:18;;;17139:30;17205:34;17185:18;;;17178:62;-1:-1:-1;;;17256:18:96;;;17249:44;17310:19;;3157:201:8;16925:410:96;3157:201:8;3368:12;:16;;-1:-1:-1;;3368:16:8;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:8;;;;;3394:65;771:40:91::1;799:11;771:27;:40::i;:::-;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;972:17:91::1;:35:::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;-1:-1:-1::0;;972:35:91;;;;-1:-1:-1;;;972:35:91;;::::1;::::0;::::1;;::::0;;-1:-1:-1;;;;;;;;972:35:91;;::::1;;-1:-1:-1::0;;;;;972:35:91;;-1:-1:-1;;;972:35:91;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;;;;;;;;;;;;;;;;;1180:21:91::1;:43:::0;;;;::::1;::::0;;;;;;;;;::::1;::::0;;;;;;::::1;::::0;;;;;;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;;;1234:89:91::1;::::0;1276:46;1234:38:::1;:89::i;:::-;1333:90;1372:1;1375:47;1333:38;:90::i;:::-;761:669;;3483:14:8::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:8;;;3553:14;;-1:-1:-1;17492:36:96;;3553:14:8;;17480:2:96;17465:18;3553:14:8;;;;;;;3479:99;3101:483;483:947:91;;;:::o;14663:479:71:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8485:18:71;;;;:8;:18;;;;;:29;14858:36;;;:24;:36;;;;;:43;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8485:29:71;14858:43;14953:18;14949:187;;14994:7;14663:479;-1:-1:-1;;;;14663:479:71:o;14949:187::-;15042:36;;;;:24;:36;;;;;15079:17;15095:1;15079:13;:17;:::i;:::-;15042:55;;;;;;;;:::i;:::-;;;;;;;;;;15032:65;;;;;;;;15042:55;;;;15032:65;;;;;;;-1:-1:-1;;;15032:65:71;;;;;;;;;;-1:-1:-1;;;;;;;;15032:65:71;;;;;;;;;;;-1:-1:-1;;;15032:65:71;;;;;;;;;14663:479;-1:-1:-1;;;;;14663:479:71:o;10497:1178::-;-1:-1:-1;;;;;10749:18:71;;10662:4;10749:18;;;:8;:18;;;;;;;;:29;10898:36;;;:24;:36;;;;;:55;;10662:4;;10898:36;10935:17;;10898:55;;;;;;:::i;:::-;;;;;;;;;;10861:92;;;;;;;;10898:55;;;;10861:92;;;;;;;;-1:-1:-1;;;10861:92:71;;;;;;;;;;;;-1:-1:-1;;;;;;;;10861:92:71;;;;;;;;;;;-1:-1:-1;;;10861:92:71;;;;;;;;-1:-1:-1;;;11093:46:71;;;11092:283;;-1:-1:-1;11281:35:71;;;;:40;;;;:93;;;11363:11;11325:13;:35;;;:49;;;11281:93;11092:566;;;;-1:-1:-1;11582:30:71;;;;-1:-1:-1;;;;;11582:35:71;;;;:75;;-1:-1:-1;11621:31:71;;;;-1:-1:-1;;;;;11621:36:71;;;11582:75;10963:705;;;;10497:1178;;;;;;:::o;4275:321:73:-;1343:14;-1:-1:-1;;;;;1343:20:73;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1329:36:73;:10;-1:-1:-1;;;;;1329:36:73;;1321:72;;;;-1:-1:-1;;;1321:72:73;;;;;;;:::i;:::-;4497:92:::1;4536:12;4550:38;4497;:92::i;5449:1290:71:-:0;-1:-1:-1;;;;;8485:18:71;;5550:6;8485:18;;;:8;:18;;;;;:29;5929:10;;;;;:90;;-1:-1:-1;5943:36:71;;;;:24;:36;;;;;:76;;;;5980:9;5988:1;5980:5;:9;:::i;:::-;5943:47;;;;;;;;;;:::i;:::-;;;;;;;;;;:61;;;:76;;5929:90;5908:207;;;;-1:-1:-1;;;5908:207:71;;18229:2:96;5908:207:71;;;18211:21:96;18268:2;18248:18;;;18241:30;18307:34;18287:18;;;18280:62;18378:34;18358:18;;;18351:62;-1:-1:-1;;;18429:19:96;;;18422:37;18476:19;;5908:207:71;18027:474:96;5908:207:71;6125:34;6162:36;;;:24;:36;;;;;:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6125:80;;;;;;;;;6162:43;;6125:80;;;;;;;;-1:-1:-1;;;6125:80:71;;;;;;;;;;;;-1:-1:-1;6533:32:71;;:77;;;6583:13;:27;;;6569:41;;:11;:41;;;6533:77;6512:184;;;;-1:-1:-1;;;6512:184:71;;18708:2:96;6512:184:71;;;18690:21:96;18747:2;18727:18;;;18720:30;18786:34;18766:18;;;18759:62;18857:30;18837:18;;;18830:58;18905:19;;6512:184:71;18506:424:96;6512:184:71;6713:19;;;;5449:1290;-1:-1:-1;;;;;5449:1290:71:o;15304:213::-;15382:6;15400:28;15431:38;15460:8;15431:28;:38::i;:::-;15486:24;;;;15304:213;-1:-1:-1;;;15304:213:71:o;18115:170::-;1343:14:73;-1:-1:-1;;;;;1343:20:73;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1329:36:73;:10;-1:-1:-1;;;;;1329:36:73;;1321:72;;;;-1:-1:-1;;;1321:72:73;;;;;;;:::i;:::-;18228:23:71::1;:50:::0;;-1:-1:-1;;18228:50:71::1;-1:-1:-1::0;;;;;18228:50:71;;;::::1;::::0;;;::::1;::::0;;18115:170::o;2853:1321:73:-;2943:6;2961:13;3004:17;2989:12;:32;2985:1159;;;3037:20;3060:54;3101:12;3060:40;:54::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;3037:77:73;;-1:-1:-1;3208:9:73;3203:931;3227:12;3223:1;:16;3203:931;;;3377:48;;;;:34;:48;;;;;:51;;3426:1;;3377:51;;;;;;:::i;:::-;;;;;;;;;3353:75;;;;;;;;3377:51;;;;3353:75;-1:-1:-1;;;;;3353:75:73;;;;;;-1:-1:-1;;;3353:75:73;;;-1:-1:-1;;;;;3353:75:73;;;;;;;;3539:67;;-1:-1:-1;;;3539:67:73;;19194:15:96;;;3539:67:73;;;19176:34:96;19226:18;;;19219:43;;;;3353:75:73;;-1:-1:-1;3539:10:73;:25;;;;19111:18:96;;3539:67:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3516:90;-1:-1:-1;3717:16:73;;3713:335;;3929:32;;;;3830:30;;3829:65;;-1:-1:-1;;;3829:65:73;;;;;345:25:96;;;1023:4:74;;-1:-1:-1;;;;;3829:132:73;;-1:-1:-1;;;;;3829:51:73;;;;318:18:96;;3829:65:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:132;;;;:::i;:::-;3799:208;;;;:::i;:::-;3757:272;;;;:::i;:::-;;;3713:335;-1:-1:-1;4098:3:73;;3203:931;;;;3023:1121;;4161:6;2853:1321;-1:-1:-1;;;2853:1321:73:o;16259:344:71:-;16304:6;16312;16436:32;16471:17;16516:1;16489:17;:24;;;;:28;;;;:::i;:::-;16471:47;;;;;;;;:::i;:::-;;;;;;;;;;16436:82;;;;;;;;16471:47;;;;16436:82;;;;;;;-1:-1:-1;;;16436:82:71;;;;;;;;;;-1:-1:-1;;;;;;;;16436:82:71;;;;;;;;;;-1:-1:-1;;;16436:82:71;;;;;;;;;;;;;;;;-1:-1:-1;16259:344:71;-1:-1:-1;;16259:344:71:o;5011:1309:73:-;1343:14;-1:-1:-1;;;;;1343:20:73;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1329:36:73;:10;-1:-1:-1;;;;;1329:36:73;;1321:72;;;;-1:-1:-1;;;1321:72:73;;;;;;;:::i;:::-;5272:19;5357:35;;::::1;5349:123;;;::::0;-1:-1:-1;;;5349:123:73;;20308:2:96;5349:123:73::1;::::0;::::1;20290:21:96::0;20347:2;20327:18;;;20320:30;20386:34;20366:18;;;20359:62;20457:34;20437:18;;;20430:62;-1:-1:-1;;;20508:19:96;;;20501:42;20560:19;;5349:123:73::1;20106:479:96::0;5349:123:73::1;5488:9;5483:831;5507:9;5503:1;:13;5483:831;;;5695:19;;5715:1;5695:22;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5614:103:73::1;:34;:48;5649:12;5614:48;;;;;;;;;;;5663:15;;5679:1;5663:18;;;;;;;:::i;:::-;;;;;;;5614:68;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;:77:::0;-1:-1:-1;;;;;5614:77:73::1;:103;5589:231;;;::::0;-1:-1:-1;;;5589:231:73;;21073:2:96;5589:231:73::1;::::0;::::1;21055:21:96::0;21112:2;21092:18;;;21085:30;21151:34;21131:18;;;21124:62;21222:34;21202:18;;;21195:62;-1:-1:-1;;;21273:19:96;;;21266:36;21319:19;;5589:231:73::1;20871:473:96::0;5589:231:73::1;5967:48;::::0;;;:34:::1;:48;::::0;;;;;;;6016:72;;5967:48;;6016:76:::1;::::0;::::1;:::i;:::-;5967:126;;;;;;;;:::i;:::-;;;;;;;;5896:34;:48;5931:12;5896:48;;;;;;;;;;;5945:15;;5961:1;5945:18;;;;;;;:::i;:::-;;;;;;;5896:68;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:197;;:68;::::1;:197:::0;;-1:-1:-1;;;;;;5896:197:73::1;-1:-1:-1::0;;;;;5896:197:73;;::::1;::::0;;::::1;::::0;;;;-1:-1:-1;;;;;;;;5896:197:73;;;::::1;;;::::0;;::::1;::::0;;;6107:48;;;5896:197;6107:48;;;;;;:54;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;6107:54:73;;;;;;;;;;6206:12;6180:63:::1;6220:19:::0;;6240:1;6220:22;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6180:63;::::0;-1:-1:-1;;;;;5334:32:96;;;5316:51;;5304:2;5289:18;6180:63:73::1;;;;;;;6286:3;;5483:831;;;;5242:1078;5011:1309:::0;;;;;:::o;7046:981:71:-;7130:6;7394:10;;;;;:75;;-1:-1:-1;7408:61:71;;;:21;7430:9;7438:1;7430:5;:9;:::i;:::-;7408:32;;;;;;;;;;:::i;:::-;;;;;;;;;;:46;;;:61;;7394:75;7373:193;;;;-1:-1:-1;;;7373:193:71;;21920:2:96;7373:193:71;;;21902:21:96;21959:2;21939:18;;;21932:30;21998:34;21978:18;;;21971:62;22069:34;22049:18;;;22042:62;-1:-1:-1;;;22120:19:96;;;22113:38;22168:19;;7373:193:71;21718:475:96;7373:193:71;7577:34;7614:21;7636:5;7614:28;;;;;;;;;;:::i;:::-;;;;;;;;;;7577:65;;;;;;;;;7614:28;;7577:65;;;;;;;-1:-1:-1;;;7577:65:71;;;;;;;;;;7046:981;-1:-1:-1;;;;7046:981:71:o;1445:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1445:29:71;;-1:-1:-1;1445:29:71;:::o;2110:67::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2110:67:71;;;;;-1:-1:-1;2110:67:71;:::o;1785:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1785:44:71;;;;;:::o;13013:1420::-;-1:-1:-1;;;;;13267:18:71;;13180:4;13267:18;;;:8;:18;;;;;;;;:29;13455:36;;;:24;:36;;;;;:43;13451:90;;13526:4;13519:11;;;;;13451:90;13623:34;13660:36;;;:24;:36;;;;;:55;;13697:17;;13660:55;;;;;;:::i;:::-;;;;;;;;;;13623:92;;;;;;;;13660:55;;;;13623:92;;;;;;;;-1:-1:-1;;;13623:92:71;;;;;;;;;;;;-1:-1:-1;;;;;;;;13623:92:71;;;;;;;;;;;-1:-1:-1;;;13623:92:71;;;;;;;;-1:-1:-1;;;13855:46:71;;;13854:283;;-1:-1:-1;14043:35:71;;;;:40;;;;:93;;;14125:11;14087:13;:35;;;:49;;;14043:93;13854:562;;;;-1:-1:-1;14340:30:71;;;;-1:-1:-1;;;;;14340:35:71;;:75;;;;-1:-1:-1;14379:31:71;;;-1:-1:-1;;;;;14379:36:71;;;13013:1420;-1:-1:-1;;;;;13013:1420:71:o;1913:700:73:-;4910:13:8;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:8;;22400:2:96;4902:69:8;;;22382:21:96;22439:2;22419:18;;;22412:30;22478:34;22458:18;;;22451:62;-1:-1:-1;;;22529:18:96;;;22522:41;22580:19;;4902:69:8;22198:407:96;4902:69:8;2126:17:73::1;2104:11;:18;:39;2083:154;;;::::0;-1:-1:-1;;;2083:154:73;;22812:2:96;2083:154:73::1;::::0;::::1;22794:21:96::0;22851:2;22831:18;;;22824:30;;;22890:34;22870:18;;;22863:62;22961:34;22941:18;;;22934:62;-1:-1:-1;;;23012:19:96;;;23005:35;23057:19;;2083:154:73::1;22610:472:96::0;2083:154:73::1;2247:23;2285:9:::0;2280:146:::1;2300:17;2296:1;:21;2280:146;;;2357:11;2369:1;2357:14;;;;;;;;:::i;:::-;;;;;;;2338:33;;;;;:::i;:::-;;;2401:11;2413:1;2401:14;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;2385:13:::1;::::0;;;:10:::1;:13:::0;;;;;;;:30;2319:3:::1;2396:1:::0;2319:3:::1;:::i;:::-;;;2280:146;;;;1308:5:74;2518:15:73;:27;2510:96;;;::::0;-1:-1:-1;;;2510:96:73;;23562:2:96;2510:96:73::1;::::0;::::1;23544:21:96::0;23601:2;23581:18;;;23574:30;23640:34;23620:18;;;23613:62;23711:26;23691:18;;;23684:54;23755:19;;2510:96:73::1;23360:420:96::0;7491:1489:73;7707:45;;7682:22;7790:48;;;:34;:48;;;;;;;;:55;;7876:34;7707:45;7790:55;7876:34;:::i;:::-;:66;;7855:204;;;;-1:-1:-1;;;7855:204:73;;23987:2:96;7855:204:73;;;23969:21:96;24026:2;24006:18;;;23999:30;24065:34;24045:18;;;24038:62;24136:34;24116:18;;;24109:62;24208:29;24187:19;;;24180:58;24255:19;;7855:204:73;23785:495:96;7855:204:73;8074:9;8069:905;8093:14;8089:1;:18;8069:905;;;8248:9;8243:446;8268:21;8288:1;8268:17;:21;:::i;:::-;8263:1;:27;8243:446;;;8428:38;8467:1;8428:41;;;;;;;;:::i;:::-;;;;;;;:50;;;-1:-1:-1;;;;;8340:138:73;:34;:48;8375:12;8340:48;;;;;;;;;;;8389:1;8340:51;;;;;;;;:::i;:::-;;;;;;;;;;:60;-1:-1:-1;;;;;8340:60:73;:138;;8311:292;;;;-1:-1:-1;;;8311:292:73;;24487:2:96;8311:292:73;;;24469:21:96;24526:2;24506:18;;;24499:30;24565:34;24545:18;;;24538:62;24636:34;24616:18;;;24609:62;-1:-1:-1;;;24687:19:96;;;24680:50;24747:19;;8311:292:73;24285:487:96;8311:292:73;8653:3;;8243:446;;;-1:-1:-1;8702:48:73;;;;:34;:48;;;;;8756:41;;:38;;8795:1;;8756:41;;;;;;:::i;:::-;;;;;;;;;;;;8702:96;;;;;;;-1:-1:-1;8702:96:73;;;;;;;;;;;;;;-1:-1:-1;;;;;8702:96:73;-1:-1:-1;;;8702:96:73;-1:-1:-1;;;;;8702:96:73;;;;;;;8853:41;;8839:12;;8817:87;;8853:38;;8892:1;;8853:41;;;;;;:::i;:::-;;;;;;;;;;;;:50;8817:87;;-1:-1:-1;;;;;5334:32:96;;;5316:51;;5289:18;8817:87:73;;;;;;;8946:3;;8069:905;;;;7672:1308;;7491:1489;;:::o;14:180:96:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:96;;14:180;-1:-1:-1;14:180:96:o;381:131::-;-1:-1:-1;;;;;456:31:96;;446:42;;436:70;;502:1;499;492:12;517:247;576:6;629:2;617:9;608:7;604:23;600:32;597:52;;;645:1;642;635:12;597:52;684:9;671:23;703:31;728:5;703:31;:::i;769:127::-;830:10;825:3;821:20;818:1;811:31;861:4;858:1;851:15;885:4;882:1;875:15;901:497;1111:25;;;1184:10;1172:23;;1167:2;1152:18;;1145:51;1099:2;1084:18;;1226:1;1215:13;;1205:144;;1271:10;1266:3;1262:20;1259:1;1252:31;1306:4;1303:1;1296:15;1334:4;1331:1;1324:15;1205:144;1385:6;1380:2;1369:9;1365:18;1358:34;901:497;;;;;;:::o;1403:248::-;1471:6;1479;1532:2;1520:9;1511:7;1507:23;1503:32;1500:52;;;1548:1;1545;1538:12;1500:52;-1:-1:-1;;1571:23:96;;;1641:2;1626:18;;;1613:32;;-1:-1:-1;1403:248:96:o;2154:301::-;2213:6;2266:2;2254:9;2245:7;2241:23;2237:32;2234:52;;;2282:1;2279;2272:12;2234:52;2321:9;2308:23;-1:-1:-1;;;;;2364:5:96;2360:46;2353:5;2350:57;2340:85;;2421:1;2418;2411:12;2460:592;2531:6;2539;2592:2;2580:9;2571:7;2567:23;2563:32;2560:52;;;2608:1;2605;2598:12;2560:52;2648:9;2635:23;2677:18;2718:2;2710:6;2707:14;2704:34;;;2734:1;2731;2724:12;2704:34;2772:6;2761:9;2757:22;2747:32;;2817:7;2810:4;2806:2;2802:13;2798:27;2788:55;;2839:1;2836;2829:12;2788:55;2879:2;2866:16;2905:2;2897:6;2894:14;2891:34;;;2921:1;2918;2911:12;2891:34;2966:7;2961:2;2952:6;2948:2;2944:15;2940:24;2937:37;2934:57;;;2987:1;2984;2977:12;2934:57;3018:2;3010:11;;;;;3040:6;;-1:-1:-1;2460:592:96;;-1:-1:-1;;;;2460:592:96:o;5378:127::-;5439:10;5434:3;5430:20;5427:1;5420:31;5470:4;5467:1;5460:15;5494:4;5491:1;5484:15;5510:257;5582:4;5576:11;;;5614:17;;5661:18;5646:34;;5682:22;;;5643:62;5640:88;;;5708:18;;:::i;:::-;5744:4;5737:24;5510:257;:::o;5772:275::-;5843:2;5837:9;5908:2;5889:13;;-1:-1:-1;;5885:27:96;5873:40;;5943:18;5928:34;;5964:22;;;5925:62;5922:88;;;5990:18;;:::i;:::-;6026:2;6019:22;5772:275;;-1:-1:-1;5772:275:96:o;6052:183::-;6112:4;6145:18;6137:6;6134:30;6131:56;;;6167:18;;:::i;:::-;-1:-1:-1;6212:1:96;6208:14;6224:4;6204:25;;6052:183::o;6240:1245::-;6324:5;6377:3;6370:4;6362:6;6358:17;6354:27;6344:55;;6395:1;6392;6385:12;6344:55;6431:6;6418:20;6457:4;6481:60;6497:43;6537:2;6497:43;:::i;:::-;6481:60;:::i;:::-;6575:15;;;6661:1;6657:10;;;;6645:23;;6641:32;;;6606:12;;;;6685:15;;;6682:35;;;6713:1;6710;6703:12;6682:35;6749:2;6741:6;6737:15;6761:695;6777:6;6772:3;6769:15;6761:695;;;6855:4;6849:3;6844;6840:13;6836:24;6833:114;;;6901:1;6930:2;6926;6919:14;6833:114;6973:22;;:::i;:::-;7036:3;7023:17;7053:33;7078:7;7053:33;:::i;:::-;7099:22;;7162:12;;;7149:26;-1:-1:-1;;;;;7210:40:96;;7198:53;;7188:151;;7293:1;7322:2;7318;7311:14;7188:151;7359:14;;;7352:31;7396:18;;7434:12;;;;6803:4;6794:14;6761:695;;;-1:-1:-1;7474:5:96;6240:1245;-1:-1:-1;;;;;;6240:1245:96:o;7490:1524::-;7740:6;7748;7756;7809:2;7797:9;7788:7;7784:23;7780:32;7777:52;;;7825:1;7822;7815:12;7777:52;7865:9;7852:23;7894:18;7935:2;7927:6;7924:14;7921:34;;;7951:1;7948;7941:12;7921:34;7989:6;7978:9;7974:22;7964:32;;8034:7;8027:4;8023:2;8019:13;8015:27;8005:55;;8056:1;8053;8046:12;8005:55;8092:2;8079:16;8114:4;8138:60;8154:43;8194:2;8154:43;:::i;8138:60::-;8232:15;;;8314:1;8310:10;;;;8302:19;;8298:28;;;8263:12;;;;8338:19;;;8335:39;;;8370:1;8367;8360:12;8335:39;8394:11;;;;8414:142;8430:6;8425:3;8422:15;8414:142;;;8496:17;;8484:30;;8447:12;;;;8534;;;;8414:142;;;8575:5;-1:-1:-1;;8618:18:96;;8605:32;;-1:-1:-1;;8649:16:96;;;8646:36;;;8678:1;8675;8668:12;8646:36;8701:93;8786:7;8775:8;8764:9;8760:24;8701:93;:::i;:::-;8691:103;;8847:2;8836:9;8832:18;8819:32;8803:48;;8876:2;8866:8;8863:16;8860:36;;;8892:1;8889;8882:12;8860:36;;8915:93;9000:7;8989:8;8978:9;8974:24;8915:93;:::i;:::-;8905:103;;;7490:1524;;;;;:::o;9255:163::-;9322:20;;9382:10;9371:22;;9361:33;;9351:61;;9408:1;9405;9398:12;9351:61;9255:163;;;:::o;9423:319::-;9490:6;9498;9551:2;9539:9;9530:7;9526:23;9522:32;9519:52;;;9567:1;9564;9557:12;9519:52;9606:9;9593:23;9625:31;9650:5;9625:31;:::i;:::-;9675:5;-1:-1:-1;9699:37:96;9732:2;9717:18;;9699:37;:::i;:::-;9689:47;;9423:319;;;;;:::o;9747:383::-;9824:6;9832;9840;9893:2;9881:9;9872:7;9868:23;9864:32;9861:52;;;9909:1;9906;9899:12;9861:52;9948:9;9935:23;9967:31;9992:5;9967:31;:::i;:::-;10017:5;10069:2;10054:18;;10041:32;;-1:-1:-1;10120:2:96;10105:18;;;10092:32;;9747:383;-1:-1:-1;;;9747:383:96:o;10135:495::-;10277:6;10285;10338:2;10326:9;10317:7;10313:23;10309:32;10306:52;;;10354:1;10351;10344:12;10306:52;10390:9;10377:23;10367:33;;10451:2;10440:9;10436:18;10423:32;10478:18;10470:6;10467:30;10464:50;;;10510:1;10507;10500:12;10464:50;10533:91;10616:7;10607:6;10596:9;10592:22;10533:91;:::i;:::-;10523:101;;;10135:495;;;;;:::o;10635:391::-;10710:6;10718;10726;10779:2;10767:9;10758:7;10754:23;10750:32;10747:52;;;10795:1;10792;10785:12;10747:52;10834:9;10821:23;10853:31;10878:5;10853:31;:::i;:::-;10903:5;-1:-1:-1;10927:37:96;10960:2;10945:18;;10927:37;:::i;:::-;10917:47;;10983:37;11016:2;11005:9;11001:18;10983:37;:::i;:::-;10973:47;;10635:391;;;;;:::o;11228:315::-;11296:6;11304;11357:2;11345:9;11336:7;11332:23;11328:32;11325:52;;;11373:1;11370;11363:12;11325:52;11412:9;11399:23;11431:31;11456:5;11431:31;:::i;:::-;11481:5;11533:2;11518:18;;;;11505:32;;-1:-1:-1;;;11228:315:96:o;11548:388::-;11632:8;11642:6;11696:3;11689:4;11681:6;11677:17;11673:27;11663:55;;11714:1;11711;11704:12;11663:55;-1:-1:-1;11737:20:96;;11780:18;11769:30;;11766:50;;;11812:1;11809;11802:12;11766:50;11849:4;11841:6;11837:17;11825:29;;11909:3;11902:4;11892:6;11889:1;11885:14;11877:6;11873:27;11869:38;11866:47;11863:67;;;11926:1;11923;11916:12;11863:67;11548:388;;;;;:::o;11941:912::-;12101:6;12109;12117;12125;12133;12186:2;12174:9;12165:7;12161:23;12157:32;12154:52;;;12202:1;12199;12192:12;12154:52;12238:9;12225:23;12215:33;;12299:2;12288:9;12284:18;12271:32;12322:18;12363:2;12355:6;12352:14;12349:34;;;12379:1;12376;12369:12;12349:34;12418:91;12501:7;12492:6;12481:9;12477:22;12418:91;:::i;:::-;12528:8;;-1:-1:-1;12392:117:96;-1:-1:-1;12616:2:96;12601:18;;12588:32;;-1:-1:-1;12632:16:96;;;12629:36;;;12661:1;12658;12651:12;12629:36;;12700:93;12785:7;12774:8;12763:9;12759:24;12700:93;:::i;:::-;11941:912;;;;-1:-1:-1;11941:912:96;;-1:-1:-1;12812:8:96;;12674:119;11941:912;-1:-1:-1;;;11941:912:96:o;13081:256::-;13147:6;13155;13208:2;13196:9;13187:7;13183:23;13179:32;13176:52;;;13224:1;13221;13214:12;13176:52;13247:28;13265:9;13247:28;:::i;13342:387::-;13418:6;13426;13434;13487:2;13475:9;13466:7;13462:23;13458:32;13455:52;;;13503:1;13500;13493:12;13455:52;13542:9;13529:23;13561:31;13586:5;13561:31;:::i;:::-;13611:5;-1:-1:-1;13635:37:96;13668:2;13653:18;;13635:37;:::i;:::-;13625:47;;13719:2;13708:9;13704:18;13691:32;13681:42;;13342:387;;;;;:::o;15210:251::-;15280:6;15333:2;15321:9;15312:7;15308:23;15304:32;15301:52;;;15349:1;15346;15339:12;15301:52;15381:9;15375:16;15400:31;15425:5;15400:31;:::i;15466:347::-;15668:2;15650:21;;;15707:2;15687:18;;;15680:30;15746:25;15741:2;15726:18;;15719:53;15804:2;15789:18;;15466:347::o;16301:487::-;-1:-1:-1;;;;;16488:32:96;;16470:51;;16557:2;16552;16537:18;;16530:30;;;16576:18;;16569:34;;;16596:6;16645;16640:2;16625:18;;16612:48;16709:1;16680:22;;;16704:2;16676:31;;;16669:42;;;;16772:2;16751:15;;;-1:-1:-1;;16747:29:96;16732:45;16728:54;;16301:487;-1:-1:-1;;16301:487:96:o;16793:127::-;16854:10;16849:3;16845:20;16842:1;16835:31;16885:4;16882:1;16875:15;16909:4;16906:1;16899:15;17539:127;17600:10;17595:3;17591:20;17588:1;17581:31;17631:4;17628:1;17621:15;17655:4;17652:1;17645:15;17671:125;17711:4;17739:1;17736;17733:8;17730:34;;;17744:18;;:::i;:::-;-1:-1:-1;17781:9:96;;17671:125::o;17801:221::-;17840:4;17869:10;17929;;;;17899;;17951:12;;;17948:38;;;17966:18;;:::i;:::-;18003:13;;17801:221;-1:-1:-1;;;17801:221:96:o;19273:184::-;19343:6;19396:2;19384:9;19375:7;19371:23;19367:32;19364:52;;;19412:1;19409;19402:12;19364:52;-1:-1:-1;19435:16:96;;19273:184;-1:-1:-1;19273:184:96:o;19462:168::-;19502:7;19568:1;19564;19560:6;19556:14;19553:1;19550:21;19545:1;19538:9;19531:17;19527:45;19524:71;;;19575:18;;:::i;:::-;-1:-1:-1;19615:9:96;;19462:168::o;19635:217::-;19675:1;19701;19691:132;;19745:10;19740:3;19736:20;19733:1;19726:31;19780:4;19777:1;19770:15;19808:4;19805:1;19798:15;19691:132;-1:-1:-1;19837:9:96;;19635:217::o;19857:244::-;19896:3;-1:-1:-1;;;;;19977:2:96;19974:1;19970:10;20007:2;20004:1;20000:10;20038:3;20034:2;20030:12;20025:3;20022:21;20019:47;;;20046:18;;:::i;:::-;20082:13;;19857:244;-1:-1:-1;;;;19857:244:96:o;21349:127::-;21410:10;21405:3;21401:20;21398:1;21391:31;21441:4;21438:1;21431:15;21465:4;21462:1;21455:15;23087:128;23127:3;23158:1;23154:6;23151:1;23148:13;23145:39;;;23164:18;;:::i;:::-;-1:-1:-1;23200:9:96;;23087:128::o;23220:135::-;23259:3;-1:-1:-1;;23280:17:96;;23277:43;;;23300:18;;:::i;:::-;-1:-1:-1;23347:1:96;23336:13;;23220:135::o",
    "linkReferences": {},
    "immutableReferences": {
      "37371": [
        {
          "start": 1870,
          "length": 32
        },
        {
          "start": 5547,
          "length": 32
        }
      ],
      "37375": [
        {
          "start": 1338,
          "length": 32
        }
      ],
      "37379": [
        {
          "start": 1256,
          "length": 32
        },
        {
          "start": 2367,
          "length": 32
        },
        {
          "start": 4413,
          "length": 32
        },
        {
          "start": 5113,
          "length": 32
        },
        {
          "start": 5992,
          "length": 32
        }
      ],
      "37382": [
        {
          "start": 1909,
          "length": 32
        },
        {
          "start": 2052,
          "length": 32
        },
        {
          "start": 5337,
          "length": 32
        },
        {
          "start": 7757,
          "length": 32
        },
        {
          "start": 7925,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "NUMBER_OF_QUORUMS()": "e21ade6d",
    "addStrategiesConsideredAndMultipliers(uint256,(address,uint96)[])": "6bbc5310",
    "checkOperatorActiveAtBlockNumber(address,uint256,uint256)": "629b312a",
    "checkOperatorInactiveAtBlockNumber(address,uint256,uint256)": "e84ef3cb",
    "delegation()": "df5cf723",
    "deregisterOperator(address)": "d8cf98ca",
    "failed()": "ba414fa6",
    "firstQuorumStakedByOperator(address)": "8392eb59",
    "getFromTaskNumberForOperator(address)": "ae124d40",
    "getLengthOfPubkeyHashIndexHistory(bytes32)": "fae6cf58",
    "getLengthOfPubkeyHashStakeHistory(bytes32)": "aeadd15c",
    "getLengthOfTotalOperatorsHistory()": "3531d479",
    "getLengthOfTotalStakeHistory()": "ca06c782",
    "getMostRecentStakeByOperator(address)": "53c9264a",
    "getOperatorIndex(address,uint32,uint32)": "7210b0c9",
    "getOperatorPubkeyHash(address)": "fd0d930a",
    "getStakeFromPubkeyHashAndIndex(bytes32,uint256)": "2173fa23",
    "getStakeHistoryLength(bytes32)": "2979536e",
    "getTotalOperators(uint32,uint32)": "b322bdc7",
    "getTotalStakeFromIndex(uint256)": "102068d3",
    "initialize(uint256[],(address,uint96)[],(address,uint96)[])": "4698a394",
    "investmentManager()": "4b31bb10",
    "isActiveOperator(address)": "3367cca5",
    "minimumStakeFirstQuorum()": "ca150cb6",
    "minimumStakeSecondQuorum()": "a9983b5c",
    "numOperators()": "bd820688",
    "operatorList(uint256)": "cb38f407",
    "operatorStakes(address)": "1c9856ae",
    "propagateStakeUpdate(address,uint32,uint256)": "c0bf897e",
    "pubkeyHashToIndexHistory(bytes32,uint256)": "d24f6ddd",
    "pubkeyHashToStakeHistory(bytes32,uint256)": "0712b6a4",
    "quorumBips(uint256)": "28420dfa",
    "registerOperator(address,uint32)": "58662162",
    "registry(address)": "038defd7",
    "removeStrategiesConsideredAndMultipliers(uint256,address[],uint256[])": "a3c96ce5",
    "secondQuorumStakedByOperator(address)": "17422e8a",
    "serviceManager()": "3998fdd3",
    "setMinimumStakeFirstQuorum(uint128)": "88db78a9",
    "setMinimumStakeSecondQuorum(uint128)": "0baa9798",
    "strategiesConsideredAndMultipliers(uint256,uint256)": "1ea1afe1",
    "strategiesConsideredAndMultipliersLength(uint256)": "0191f72c",
    "totalOperatorsHistory(uint256)": "d266b108",
    "totalStake()": "8b0e9f3f",
    "updateSocket(string)": "0cf4b767",
    "weightOfOperator(address,uint256)": "891f28a5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEigenLayrDelegation\",\"name\":\"_delegation\",\"type\":\"address\"},{\"internalType\":\"contract IInvestmentManager\",\"name\":\"_investmentManager\",\"type\":\"address\"},{\"internalType\":\"contract IServiceManager\",\"name\":\"_serviceManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"swapped\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct BN254.G1Point\",\"name\":\"pk\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"apkHash\",\"type\":\"bytes32\"}],\"name\":\"Deregistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"socket\",\"type\":\"string\"}],\"name\":\"SocketUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"firstQuorumStake\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"secondQuorumStake\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"prevUpdateBlockNumber\",\"type\":\"uint32\"}],\"name\":\"StakeUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quorumNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"quorumNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromQuorum\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NUMBER_OF_QUORUMS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quorumNumber\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]\",\"name\":\"_newStrategiesConsideredAndMultipliers\",\"type\":\"tuple[]\"}],\"name\":\"addStrategiesConsideredAndMultipliers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHistoryIndex\",\"type\":\"uint256\"}],\"name\":\"checkOperatorActiveAtBlockNumber\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeHistoryIndex\",\"type\":\"uint256\"}],\"name\":\"checkOperatorInactiveAtBlockNumber\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IEigenLayrDelegation\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"deregisterOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"firstQuorumStakedByOperator\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getFromTaskNumberForOperator\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pubkeyHash\",\"type\":\"bytes32\"}],\"name\":\"getLengthOfPubkeyHashIndexHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pubkeyHash\",\"type\":\"bytes32\"}],\"name\":\"getLengthOfPubkeyHashStakeHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLengthOfTotalOperatorsHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLengthOfTotalStakeHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getMostRecentStakeByOperator\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"firstQuorumStake\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"secondQuorumStake\",\"type\":\"uint96\"}],\"internalType\":\"struct IQuorumRegistry.OperatorStake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getOperatorIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorPubkeyHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pubkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getStakeFromPubkeyHashAndIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"firstQuorumStake\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"secondQuorumStake\",\"type\":\"uint96\"}],\"internalType\":\"struct IQuorumRegistry.OperatorStake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"pubkeyHash\",\"type\":\"bytes32\"}],\"name\":\"getStakeHistoryLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"getTotalOperators\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTotalStakeFromIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"firstQuorumStake\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"secondQuorumStake\",\"type\":\"uint96\"}],\"internalType\":\"struct IQuorumRegistry.OperatorStake\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_quorumBips\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]\",\"name\":\"_firstQuorumStrategiesConsideredAndMultipliers\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"internalType\":\"struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]\",\"name\":\"_secondQuorumStrategiesConsideredAndMultipliers\",\"type\":\"tuple[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentManager\",\"outputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isActiveOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeFirstQuorum\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeSecondQuorum\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numOperators\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"operatorList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"operatorStakes\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"prevElement\",\"type\":\"uint256\"}],\"name\":\"propagateStakeUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pubkeyHashToIndexHistory\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"toBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pubkeyHashToStakeHistory\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"updateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"nextUpdateBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"firstQuorumStake\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"secondQuorumStake\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"quorumBips\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"serveUntil\",\"type\":\"uint32\"}],\"name\":\"registerOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"pubkeyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"fromTaskNumber\",\"type\":\"uint32\"},{\"internalType\":\"enum IQuorumRegistry.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quorumNumber\",\"type\":\"uint256\"},{\"internalType\":\"contract IInvestmentStrategy[]\",\"name\":\"_strategiesToRemove\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"indicesToRemove\",\"type\":\"uint256[]\"}],\"name\":\"removeStrategiesConsideredAndMultipliers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"secondQuorumStakedByOperator\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"serviceManager\",\"outputs\":[{\"internalType\":\"contract IServiceManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_minimumStakeFirstQuorum\",\"type\":\"uint128\"}],\"name\":\"setMinimumStakeFirstQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_minimumStakeSecondQuorum\",\"type\":\"uint128\"}],\"name\":\"setMinimumStakeSecondQuorum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategiesConsideredAndMultipliers\",\"outputs\":[{\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"multiplier\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"quorumNumber\",\"type\":\"uint256\"}],\"name\":\"strategiesConsideredAndMultipliersLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalOperatorsHistory\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"toBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newSocket\",\"type\":\"string\"}],\"name\":\"updateSocket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorumNumber\",\"type\":\"uint256\"}],\"name\":\"weightOfOperator\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkOperatorActiveAtBlockNumber(address,uint256,uint256)\":{\"details\":\"In order for this function to return 'true', the inputs must satisfy all of the following list: 1) `pubkeyHashToStakeHistory[pubkeyHash][index].updateBlockNumber <= blockNumber` 2) `pubkeyHashToStakeHistory[pubkeyHash][index].nextUpdateBlockNumber` must be either `0` (signifying no next update) or is must be strictly greater than `blockNumber` 3) `pubkeyHashToStakeHistory[pubkeyHash][index].firstQuorumStake > 0` or `pubkeyHashToStakeHistory[pubkeyHash][index].secondQuorumStake > 0`, i.e. the operator had nonzero stakeNote that a return value of 'false' does not guarantee that the `operator` was inactive at `blockNumber`, since a bad `stakeHistoryIndex` can be supplied in order to obtain a response of 'false'.\",\"params\":{\"blockNumber\":\"is the block number of interest\",\"operator\":\"is the operator of interest\",\"stakeHistoryIndex\":\"specifies an index in `pubkeyHashToStakeHistory[pubkeyHash]`, where `pubkeyHash` is looked up in `registry[operator].pubkeyHash`\"},\"returns\":{\"_0\":\"'true' if it is succesfully proven that  the `operator` was active at the `blockNumber`, and 'false' otherwise\"}},\"checkOperatorInactiveAtBlockNumber(address,uint256,uint256)\":{\"details\":\"In order for this function to return 'true', the inputs must satisfy all of the following list: 1) `pubkeyHashToStakeHistory[pubkeyHash][index].updateBlockNumber <= blockNumber` 2) `pubkeyHashToStakeHistory[pubkeyHash][index].nextUpdateBlockNumber` must be either `0` (signifying no next update) or is must be strictly greater than `blockNumber` 3) `pubkeyHashToStakeHistory[pubkeyHash][index].firstQuorumStake > 0` or `pubkeyHashToStakeHistory[pubkeyHash][index].secondQuorumStake > 0`, i.e. the operator had nonzero stakeNote that a return value of 'false' does not guarantee that the `operator` was active at `blockNumber`, since a bad `stakeHistoryIndex` can be supplied in order to obtain a response of 'false'.\",\"params\":{\"blockNumber\":\"is the block number of interest\",\"operator\":\"is the operator of interest\",\"stakeHistoryIndex\":\"specifies an index in `pubkeyHashToStakeHistory[pubkeyHash]`, where `pubkeyHash` is looked up in `registry[operator].pubkeyHash`\"},\"returns\":{\"_0\":\"'true' if it is succesfully proven that  the `operator` was inactive at the `blockNumber`, and 'false' otherwise\"}},\"getMostRecentStakeByOperator(address)\":{\"details\":\"Function returns an OperatorStake struct with **every entry equal to 0** in the event that the operator has no stake history\"},\"getOperatorIndex(address,uint32,uint32)\":{\"details\":\"Function will revert in the event that the specified `index` input does not identify the appropriate entry in the array `pubkeyHashToIndexHistory[pubkeyHash]` to pull the info from.\",\"params\":{\"blockNumber\":\"Is the desired block number at which we wish to query the operator's position in the `operatorList` array\",\"index\":\"Used to specify the entry within the dynamic array `pubkeyHashToIndexHistory[pubkeyHash]` to read data from, where `pubkeyHash` is looked up from `operator`'s registration info\"}},\"getStakeFromPubkeyHashAndIndex(bytes32,uint256)\":{\"details\":\"Function will revert if `index` is out-of-bounds.\",\"params\":{\"index\":\"Array index for lookup, within the dynamic array `pubkeyHashToStakeHistory[pubkeyHash]`.\",\"pubkeyHash\":\"Hash of the public key of the operator of interest.\"}},\"getTotalOperators(uint32,uint32)\":{\"details\":\"This function will revert if the provided `index` is out of bounds.\",\"params\":{\"index\":\"Input used to specify the entry within the dynamic array `totalOperatorsHistory` to read data from.\"}},\"getTotalStakeFromIndex(uint256)\":{\"details\":\"Function will revert in the event that `index` is out-of-bounds.\"},\"operatorStakes(address)\":{\"details\":\"Function returns weights of **0** in the event that the operator has no stake history\"},\"removeStrategiesConsideredAndMultipliers(uint256,address[],uint256[])\":{\"details\":\"higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove\",\"params\":{\"quorumNumber\":\".\"}},\"strategiesConsideredAndMultipliersLength(uint256)\":{\"details\":\"Reverts if `quorumNumber` < `NUMBER_OF_QUORUMS`, i.e. the input is out of bounds.\"},\"weightOfOperator(address,uint256)\":{\"details\":\"returns zero in the case that `quorumNumber` is greater than or equal to `NUMBER_OF_QUORUMS`\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deregistration(address,address,(uint256,uint256),bytes32)\":{\"notice\":\"Emitted whenever an operator deregisters. The `swapped` address is the address returned by an internal call to the `_popRegistrant` function.\"},\"SocketUpdate(address,string)\":{\"notice\":\"emitted when `operator` updates their socket address to `socket`\"},\"StakeUpdate(address,uint96,uint96,uint32,uint32)\":{\"notice\":\"emitted whenever the stake of `operator` is updated\"},\"StrategyAddedToQuorum(uint256,address)\":{\"notice\":\"emitted when `strategy` has been added to the array at `strategiesConsideredAndMultipliers[quorumNumber]`\"},\"StrategyRemovedFromQuorum(uint256,address)\":{\"notice\":\"emitted when `strategy` has removed from the array at `strategiesConsideredAndMultipliers[quorumNumber]`\"}},\"kind\":\"user\",\"methods\":{\"NUMBER_OF_QUORUMS()\":{\"notice\":\"Number of quorums that are being used by the middleware.\"},\"addStrategiesConsideredAndMultipliers(uint256,(address,uint96)[])\":{\"notice\":\"Adds new strategies and the associated multipliers to the @param quorumNumber.\"},\"checkOperatorActiveAtBlockNumber(address,uint256,uint256)\":{\"notice\":\"Checks that the `operator` was active at the `blockNumber`, using the specified `stakeHistoryIndex` as proof.\"},\"checkOperatorInactiveAtBlockNumber(address,uint256,uint256)\":{\"notice\":\"Checks that the `operator` was inactive at the `blockNumber`, using the specified `stakeHistoryIndex` as proof.\"},\"delegation()\":{\"notice\":\"The address of the Delegation contract for EigenLayr.\"},\"getFromTaskNumberForOperator(address)\":{\"notice\":\"Returns task number from when `operator` has been registered.\"},\"getMostRecentStakeByOperator(address)\":{\"notice\":\"Returns the most recent stake weight for the `operator`\"},\"getOperatorIndex(address,uint32,uint32)\":{\"notice\":\"Looks up the `operator`'s index in the dynamic array `operatorList` at the specified `blockNumber`.\"},\"getOperatorPubkeyHash(address)\":{\"notice\":\"Returns the stored pubkeyHash for the specified `operator`.\"},\"getStakeFromPubkeyHashAndIndex(bytes32,uint256)\":{\"notice\":\"Returns the stake weight corresponding to `pubkeyHash`, at the `index`-th entry in the `pubkeyHashToStakeHistory[pubkeyHash]` array.\"},\"getTotalOperators(uint32,uint32)\":{\"notice\":\"Looks up the number of total operators at the specified `blockNumber`.\"},\"getTotalStakeFromIndex(uint256)\":{\"notice\":\"Returns the `index`-th entry in the dynamic array of total stake, `totalStakeHistory`.\"},\"investmentManager()\":{\"notice\":\"The address of the InvestmentManager contract for EigenLayr.\"},\"isActiveOperator(address)\":{\"notice\":\"Returns whether or not the `operator` is currently an active operator, i.e. is \\\"registered\\\".\"},\"minimumStakeFirstQuorum()\":{\"notice\":\"In order to register, an operator must have at least `minimumStakeFirstQuorum` or `minimumStakeSecondQuorum`, as evaluated by this contract's 'VoteWeigher' logic.\"},\"numOperators()\":{\"notice\":\"Returns the current number of operators of this service.\"},\"operatorList(uint256)\":{\"notice\":\"used for storing the list of current and past registered operators\"},\"operatorStakes(address)\":{\"notice\":\"Returns the most recent stake weights for the `operator`\"},\"pubkeyHashToIndexHistory(bytes32,uint256)\":{\"notice\":\"mapping from operator's pubkeyhash to the history of their index in the array of all operators\"},\"pubkeyHashToStakeHistory(bytes32,uint256)\":{\"notice\":\"mapping from operator's pubkeyhash to the history of their stake updates\"},\"quorumBips(uint256)\":{\"notice\":\"This defines the earnings split between different quorums. Mapping is quorumNumber => BIPS which the quorum earns, out of the total earnings.\"},\"registry(address)\":{\"notice\":\"used for storing Operator info on each operator while registration\"},\"removeStrategiesConsideredAndMultipliers(uint256,address[],uint256[])\":{\"notice\":\"This function is used for removing strategies and their associated weights from the\"},\"serviceManager()\":{\"notice\":\"The ServiceManager contract for this middleware, where tasks are created / initiated.\"},\"setMinimumStakeFirstQuorum(uint128)\":{\"notice\":\"Adjusts the `minimumStakeFirstQuorum` -- i.e. the node stake (weight) requirement for inclusion in the 1st quorum.\"},\"setMinimumStakeSecondQuorum(uint128)\":{\"notice\":\"Adjusts the `minimumStakeSecondQuorum` -- i.e. the node stake (weight) requirement for inclusion in the 2nd quorum.\"},\"strategiesConsideredAndMultipliers(uint256,uint256)\":{\"notice\":\"mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum\"},\"strategiesConsideredAndMultipliersLength(uint256)\":{\"notice\":\"Returns the length of the dynamic array stored in `strategiesConsideredAndMultipliers[quorumNumber]`.\"},\"totalOperatorsHistory(uint256)\":{\"notice\":\"array of the history of the number of operators, and the taskNumbers at which the number of operators changed\"},\"totalStake()\":{\"notice\":\"Returns the stake amounts from the latest entry in `totalStakeHistory`.\"},\"weightOfOperator(address,uint256)\":{\"notice\":\"This function computes the total weight of the @param operator in the quorum @param quorumNumber.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/mocks/MiddlewareVoteWeigherMock.sol\":\"MiddlewareVoteWeigherMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff9d5f742cefc0bb0d4b13b006c4d032bb24a5c1f7ce7031823230d0267dc0cd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ace1c4590fabf3063db1662746726d3d2c7d39a0df03267f3a9bd1e12100594f\",\"dweb:/ipfs/QmduV224JB2TXqrFcJbjyy4bsH5PY3jFHzYV8bSJSUzceL\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe758e38e94b1af29f4e8907124553bea067fdc19e76ba211ddba9b7ca75785ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b49649a6c9b123fc1948565ed6a03b44eebbf84631fce80901db05629c80107\",\"dweb:/ipfs/QmZ3GRymzdgTupEwtYyGANhVWeQ8H6sqVKi7xGP7HXkwEn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xbe41d06efd6f3de49ca2d31da1996e367ff8728f1a11d7255bcd29ff997c8698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3c94d0f4dddad6147aed4a0df9524f6be529f7815c1029cabf9c9245cb4adf4\",\"dweb:/ipfs/QmW8Dgv6y5D2ZiNU6G4i8qifDkPyYtF7e7PPi3j9oK8ygm\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"src/contracts/interfaces/IEigenLayrDelegation.sol\":{\"keccak256\":\"0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21\",\"dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5\"]},\"src/contracts/interfaces/IInvestmentManager.sol\":{\"keccak256\":\"0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34\",\"dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw\"]},\"src/contracts/interfaces/IInvestmentStrategy.sol\":{\"keccak256\":\"0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52\",\"dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob\"]},\"src/contracts/interfaces/IQuorumRegistry.sol\":{\"keccak256\":\"0xe666a9120ceaf3278c34cebd7c33ee27a14788752b70f08fccc252971a53d6e3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3f3df7d1504adc6f3c4305150c980d27c35feea7d1b9119b86a5bdb442b8f36e\",\"dweb:/ipfs/QmQqwGVbZ8mV7aFwe9rQ9hiAcXonmtyD2Kq22eNfcXhnkw\"]},\"src/contracts/interfaces/IRegistry.sol\":{\"keccak256\":\"0x5bd8be0f70b0e69f94e069c52417079ba2b9e73acd5f659c09b22142dc6c59f5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e32791f0147f40738d8a27c86e83c2207d5c1d1654c2f730629b3be587963cc4\",\"dweb:/ipfs/Qma4VYzA9jkLxWQCgCFm911rQodoSboaJxnNqi4AaSzftp\"]},\"src/contracts/interfaces/IServiceManager.sol\":{\"keccak256\":\"0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2\",\"dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb\"]},\"src/contracts/interfaces/IVoteWeigher.sol\":{\"keccak256\":\"0x4d8068106dc1bc924e15cb4f8ae1c2f1b86bd3c6de1ce947081774225da63ad0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b252272b18e9a9480568a2f96cbf17e41d7d61e42e30edaef9633ca4e7149fef\",\"dweb:/ipfs/QmSh9uPEpkT4QbT83vHgXuXCE8DhJpCZh1typa97tD4zZ4\"]},\"src/contracts/libraries/BN254.sol\":{\"keccak256\":\"0xf677d6de3e5b3688eb08ac23e116f4d926d2ccc39039571e7c90aabe8bd5fccb\",\"license\":\"UNLICENSED AND MIT\",\"urls\":[\"bzz-raw://0d0bfb10bc9b677311b0de35005549a8b772b38ce84b011115eb30466cc92646\",\"dweb:/ipfs/QmSA4yYCaoB1V6n1PYEJ3PEnd8Yi6xrKdihMJtqyGPfWJL\"]},\"src/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x8484c1dc5ba4a3b6abceb4965227d945787305175ef1e55a513d8f097f5fd95e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://fb6824b1d81175e73868498f985533654b1f4d4ac6705ea8f2a9e12598759ec3\",\"dweb:/ipfs/QmdweCgj6cp1bBfXGvQrVVaN1tgiAY4DUbTiGXjtx4eu13\"]},\"src/contracts/middleware/RegistryBase.sol\":{\"keccak256\":\"0x6ab4ffc19980aacb7c10e9b505fd39fa02cd09066c53bfe973695f7fedec55b5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6ea94156a67bf1ee748abfaacd35726eb700d5c8d4c01a796295af4ae88f9b41\",\"dweb:/ipfs/QmdSKbQsgBDHuQ6CwDQP859zZZ9CtAcEkeWuEdEjq7AThX\"]},\"src/contracts/middleware/VoteWeigherBase.sol\":{\"keccak256\":\"0x0c310a65e7c17a56722b83dc23b0aa53af8b82c672651c1a9b1317395610c4b3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://62e527d19cae0feb18f9750ae0037e1ddc0b526e48718d6254e6f5fe129e56b9\",\"dweb:/ipfs/QmRdqeaBn35CvESNJhR5oMmmcJL9SNZhthzpdHa1Myau8k\"]},\"src/contracts/middleware/VoteWeigherBaseStorage.sol\":{\"keccak256\":\"0xd28f150aaaf2729ea4e4fe389bebcb7289ca7516f93bb0f293f20dcd24d7ac19\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://37ea656b2d8788ae4392a58b60b8617eae3bc70187f3d8493593ef7981a94ee0\",\"dweb:/ipfs/QmRvQzewqFBPigQv76LDfq1MY6ECFL7FpVwwJATnAFVHHS\"]},\"src/test/mocks/MiddlewareVoteWeigherMock.sol\":{\"keccak256\":\"0xd183a0d2b00d14cc0d36f7e10ee42eafeec7d44edc3aa4256e2e95911b981e71\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cbd826646c882225c2dc3535fad7ef22b15d614383f586c95a83645f6c16ca85\",\"dweb:/ipfs/QmTgqEv5KM7ELoTbFqPQvthCd5qCUreHGpnYky4WaUWZ2o\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEigenLayrDelegation",
              "name": "_delegation",
              "type": "address"
            },
            {
              "internalType": "contract IInvestmentManager",
              "name": "_investmentManager",
              "type": "address"
            },
            {
              "internalType": "contract IServiceManager",
              "name": "_serviceManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "swapped",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct BN254.G1Point",
              "name": "pk",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "apkHash",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deregistration",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "socket",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SocketUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "firstQuorumStake",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "secondQuorumStake",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "prevUpdateBlockNumber",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakeUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quorumNumber",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToQuorum",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quorumNumber",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromQuorum",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NUMBER_OF_QUORUMS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quorumNumber",
              "type": "uint256"
            },
            {
              "internalType": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]",
              "name": "_newStrategiesConsideredAndMultipliers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IInvestmentStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategiesConsideredAndMultipliers"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHistoryIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkOperatorActiveAtBlockNumber",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "blockNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "stakeHistoryIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkOperatorInactiveAtBlockNumber",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IEigenLayrDelegation",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deregisterOperator"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "firstQuorumStakedByOperator",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getFromTaskNumberForOperator",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "pubkeyHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLengthOfPubkeyHashIndexHistory",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "pubkeyHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLengthOfPubkeyHashStakeHistory",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLengthOfTotalOperatorsHistory",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLengthOfTotalStakeHistory",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getMostRecentStakeByOperator",
          "outputs": [
            {
              "internalType": "struct IQuorumRegistry.OperatorStake",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "firstQuorumStake",
                  "type": "uint96"
                },
                {
                  "internalType": "uint96",
                  "name": "secondQuorumStake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorIndex",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorPubkeyHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "pubkeyHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeFromPubkeyHashAndIndex",
          "outputs": [
            {
              "internalType": "struct IQuorumRegistry.OperatorStake",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "firstQuorumStake",
                  "type": "uint96"
                },
                {
                  "internalType": "uint96",
                  "name": "secondQuorumStake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "pubkeyHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeHistoryLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalOperators",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalStakeFromIndex",
          "outputs": [
            {
              "internalType": "struct IQuorumRegistry.OperatorStake",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "updateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "nextUpdateBlockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "uint96",
                  "name": "firstQuorumStake",
                  "type": "uint96"
                },
                {
                  "internalType": "uint96",
                  "name": "secondQuorumStake",
                  "type": "uint96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_quorumBips",
              "type": "uint256[]"
            },
            {
              "internalType": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]",
              "name": "_firstQuorumStrategiesConsideredAndMultipliers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IInvestmentStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            },
            {
              "internalType": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]",
              "name": "_secondQuorumStrategiesConsideredAndMultipliers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IInvestmentStrategy",
                  "name": "strategy",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "multiplier",
                  "type": "uint96"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "investmentManager",
          "outputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isActiveOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minimumStakeFirstQuorum",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minimumStakeSecondQuorum",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numOperators",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorList",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorStakes",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "blockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint256",
              "name": "prevElement",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "propagateStakeUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pubkeyHashToIndexHistory",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "toBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pubkeyHashToStakeHistory",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "updateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "nextUpdateBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint96",
              "name": "firstQuorumStake",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "secondQuorumStake",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "quorumBips",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "serveUntil",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "registry",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "pubkeyHash",
              "type": "bytes32"
            },
            {
              "internalType": "uint32",
              "name": "fromTaskNumber",
              "type": "uint32"
            },
            {
              "internalType": "enum IQuorumRegistry.Status",
              "name": "status",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quorumNumber",
              "type": "uint256"
            },
            {
              "internalType": "contract IInvestmentStrategy[]",
              "name": "_strategiesToRemove",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "indicesToRemove",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategiesConsideredAndMultipliers"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "secondQuorumStakedByOperator",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "serviceManager",
          "outputs": [
            {
              "internalType": "contract IServiceManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "_minimumStakeFirstQuorum",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinimumStakeFirstQuorum"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "_minimumStakeSecondQuorum",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinimumStakeSecondQuorum"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategiesConsideredAndMultipliers",
          "outputs": [
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "multiplier",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "quorumNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategiesConsideredAndMultipliersLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalOperatorsHistory",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "toBlockNumber",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "index",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalStake",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            },
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newSocket",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateSocket"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "quorumNumber",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "weightOfOperator",
          "outputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkOperatorActiveAtBlockNumber(address,uint256,uint256)": {
            "details": "In order for this function to return 'true', the inputs must satisfy all of the following list: 1) `pubkeyHashToStakeHistory[pubkeyHash][index].updateBlockNumber <= blockNumber` 2) `pubkeyHashToStakeHistory[pubkeyHash][index].nextUpdateBlockNumber` must be either `0` (signifying no next update) or is must be strictly greater than `blockNumber` 3) `pubkeyHashToStakeHistory[pubkeyHash][index].firstQuorumStake > 0` or `pubkeyHashToStakeHistory[pubkeyHash][index].secondQuorumStake > 0`, i.e. the operator had nonzero stakeNote that a return value of 'false' does not guarantee that the `operator` was inactive at `blockNumber`, since a bad `stakeHistoryIndex` can be supplied in order to obtain a response of 'false'.",
            "params": {
              "blockNumber": "is the block number of interest",
              "operator": "is the operator of interest",
              "stakeHistoryIndex": "specifies an index in `pubkeyHashToStakeHistory[pubkeyHash]`, where `pubkeyHash` is looked up in `registry[operator].pubkeyHash`"
            },
            "returns": {
              "_0": "'true' if it is succesfully proven that  the `operator` was active at the `blockNumber`, and 'false' otherwise"
            }
          },
          "checkOperatorInactiveAtBlockNumber(address,uint256,uint256)": {
            "details": "In order for this function to return 'true', the inputs must satisfy all of the following list: 1) `pubkeyHashToStakeHistory[pubkeyHash][index].updateBlockNumber <= blockNumber` 2) `pubkeyHashToStakeHistory[pubkeyHash][index].nextUpdateBlockNumber` must be either `0` (signifying no next update) or is must be strictly greater than `blockNumber` 3) `pubkeyHashToStakeHistory[pubkeyHash][index].firstQuorumStake > 0` or `pubkeyHashToStakeHistory[pubkeyHash][index].secondQuorumStake > 0`, i.e. the operator had nonzero stakeNote that a return value of 'false' does not guarantee that the `operator` was active at `blockNumber`, since a bad `stakeHistoryIndex` can be supplied in order to obtain a response of 'false'.",
            "params": {
              "blockNumber": "is the block number of interest",
              "operator": "is the operator of interest",
              "stakeHistoryIndex": "specifies an index in `pubkeyHashToStakeHistory[pubkeyHash]`, where `pubkeyHash` is looked up in `registry[operator].pubkeyHash`"
            },
            "returns": {
              "_0": "'true' if it is succesfully proven that  the `operator` was inactive at the `blockNumber`, and 'false' otherwise"
            }
          },
          "getMostRecentStakeByOperator(address)": {
            "details": "Function returns an OperatorStake struct with **every entry equal to 0** in the event that the operator has no stake history"
          },
          "getOperatorIndex(address,uint32,uint32)": {
            "details": "Function will revert in the event that the specified `index` input does not identify the appropriate entry in the array `pubkeyHashToIndexHistory[pubkeyHash]` to pull the info from.",
            "params": {
              "blockNumber": "Is the desired block number at which we wish to query the operator's position in the `operatorList` array",
              "index": "Used to specify the entry within the dynamic array `pubkeyHashToIndexHistory[pubkeyHash]` to read data from, where `pubkeyHash` is looked up from `operator`'s registration info"
            }
          },
          "getStakeFromPubkeyHashAndIndex(bytes32,uint256)": {
            "details": "Function will revert if `index` is out-of-bounds.",
            "params": {
              "index": "Array index for lookup, within the dynamic array `pubkeyHashToStakeHistory[pubkeyHash]`.",
              "pubkeyHash": "Hash of the public key of the operator of interest."
            }
          },
          "getTotalOperators(uint32,uint32)": {
            "details": "This function will revert if the provided `index` is out of bounds.",
            "params": {
              "index": "Input used to specify the entry within the dynamic array `totalOperatorsHistory` to read data from."
            }
          },
          "getTotalStakeFromIndex(uint256)": {
            "details": "Function will revert in the event that `index` is out-of-bounds."
          },
          "operatorStakes(address)": {
            "details": "Function returns weights of **0** in the event that the operator has no stake history"
          },
          "removeStrategiesConsideredAndMultipliers(uint256,address[],uint256[])": {
            "details": "higher indices should be *first* in the list of @param indicesToRemove, since otherwise the removal of lower index entries will cause a shift in the indices of the other strategiesToRemove",
            "params": {
              "quorumNumber": "."
            }
          },
          "strategiesConsideredAndMultipliersLength(uint256)": {
            "details": "Reverts if `quorumNumber` < `NUMBER_OF_QUORUMS`, i.e. the input is out of bounds."
          },
          "weightOfOperator(address,uint256)": {
            "details": "returns zero in the case that `quorumNumber` is greater than or equal to `NUMBER_OF_QUORUMS`"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "NUMBER_OF_QUORUMS()": {
            "notice": "Number of quorums that are being used by the middleware."
          },
          "addStrategiesConsideredAndMultipliers(uint256,(address,uint96)[])": {
            "notice": "Adds new strategies and the associated multipliers to the @param quorumNumber."
          },
          "checkOperatorActiveAtBlockNumber(address,uint256,uint256)": {
            "notice": "Checks that the `operator` was active at the `blockNumber`, using the specified `stakeHistoryIndex` as proof."
          },
          "checkOperatorInactiveAtBlockNumber(address,uint256,uint256)": {
            "notice": "Checks that the `operator` was inactive at the `blockNumber`, using the specified `stakeHistoryIndex` as proof."
          },
          "delegation()": {
            "notice": "The address of the Delegation contract for EigenLayr."
          },
          "getFromTaskNumberForOperator(address)": {
            "notice": "Returns task number from when `operator` has been registered."
          },
          "getMostRecentStakeByOperator(address)": {
            "notice": "Returns the most recent stake weight for the `operator`"
          },
          "getOperatorIndex(address,uint32,uint32)": {
            "notice": "Looks up the `operator`'s index in the dynamic array `operatorList` at the specified `blockNumber`."
          },
          "getOperatorPubkeyHash(address)": {
            "notice": "Returns the stored pubkeyHash for the specified `operator`."
          },
          "getStakeFromPubkeyHashAndIndex(bytes32,uint256)": {
            "notice": "Returns the stake weight corresponding to `pubkeyHash`, at the `index`-th entry in the `pubkeyHashToStakeHistory[pubkeyHash]` array."
          },
          "getTotalOperators(uint32,uint32)": {
            "notice": "Looks up the number of total operators at the specified `blockNumber`."
          },
          "getTotalStakeFromIndex(uint256)": {
            "notice": "Returns the `index`-th entry in the dynamic array of total stake, `totalStakeHistory`."
          },
          "investmentManager()": {
            "notice": "The address of the InvestmentManager contract for EigenLayr."
          },
          "isActiveOperator(address)": {
            "notice": "Returns whether or not the `operator` is currently an active operator, i.e. is \"registered\"."
          },
          "minimumStakeFirstQuorum()": {
            "notice": "In order to register, an operator must have at least `minimumStakeFirstQuorum` or `minimumStakeSecondQuorum`, as evaluated by this contract's 'VoteWeigher' logic."
          },
          "numOperators()": {
            "notice": "Returns the current number of operators of this service."
          },
          "operatorList(uint256)": {
            "notice": "used for storing the list of current and past registered operators"
          },
          "operatorStakes(address)": {
            "notice": "Returns the most recent stake weights for the `operator`"
          },
          "pubkeyHashToIndexHistory(bytes32,uint256)": {
            "notice": "mapping from operator's pubkeyhash to the history of their index in the array of all operators"
          },
          "pubkeyHashToStakeHistory(bytes32,uint256)": {
            "notice": "mapping from operator's pubkeyhash to the history of their stake updates"
          },
          "quorumBips(uint256)": {
            "notice": "This defines the earnings split between different quorums. Mapping is quorumNumber => BIPS which the quorum earns, out of the total earnings."
          },
          "registry(address)": {
            "notice": "used for storing Operator info on each operator while registration"
          },
          "removeStrategiesConsideredAndMultipliers(uint256,address[],uint256[])": {
            "notice": "This function is used for removing strategies and their associated weights from the"
          },
          "serviceManager()": {
            "notice": "The ServiceManager contract for this middleware, where tasks are created / initiated."
          },
          "setMinimumStakeFirstQuorum(uint128)": {
            "notice": "Adjusts the `minimumStakeFirstQuorum` -- i.e. the node stake (weight) requirement for inclusion in the 1st quorum."
          },
          "setMinimumStakeSecondQuorum(uint128)": {
            "notice": "Adjusts the `minimumStakeSecondQuorum` -- i.e. the node stake (weight) requirement for inclusion in the 2nd quorum."
          },
          "strategiesConsideredAndMultipliers(uint256,uint256)": {
            "notice": "mapping from quorum number to the list of strategies considered and their corresponding multipliers for that specific quorum"
          },
          "strategiesConsideredAndMultipliersLength(uint256)": {
            "notice": "Returns the length of the dynamic array stored in `strategiesConsideredAndMultipliers[quorumNumber]`."
          },
          "totalOperatorsHistory(uint256)": {
            "notice": "array of the history of the number of operators, and the taskNumbers at which the number of operators changed"
          },
          "totalStake()": {
            "notice": "Returns the stake amounts from the latest entry in `totalStakeHistory`."
          },
          "weightOfOperator(address,uint256)": {
            "notice": "This function computes the total weight of the @param operator in the quorum @param quorumNumber."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/test/mocks/MiddlewareVoteWeigherMock.sol": "MiddlewareVoteWeigherMock"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0xff9d5f742cefc0bb0d4b13b006c4d032bb24a5c1f7ce7031823230d0267dc0cd",
        "urls": [
          "bzz-raw://ace1c4590fabf3063db1662746726d3d2c7d39a0df03267f3a9bd1e12100594f",
          "dweb:/ipfs/QmduV224JB2TXqrFcJbjyy4bsH5PY3jFHzYV8bSJSUzceL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe758e38e94b1af29f4e8907124553bea067fdc19e76ba211ddba9b7ca75785ce",
        "urls": [
          "bzz-raw://5b49649a6c9b123fc1948565ed6a03b44eebbf84631fce80901db05629c80107",
          "dweb:/ipfs/QmZ3GRymzdgTupEwtYyGANhVWeQ8H6sqVKi7xGP7HXkwEn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xbe41d06efd6f3de49ca2d31da1996e367ff8728f1a11d7255bcd29ff997c8698",
        "urls": [
          "bzz-raw://f3c94d0f4dddad6147aed4a0df9524f6be529f7815c1029cabf9c9245cb4adf4",
          "dweb:/ipfs/QmW8Dgv6y5D2ZiNU6G4i8qifDkPyYtF7e7PPi3j9oK8ygm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IEigenLayrDelegation.sol": {
        "keccak256": "0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e",
        "urls": [
          "bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21",
          "dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IInvestmentManager.sol": {
        "keccak256": "0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100",
        "urls": [
          "bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34",
          "dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IInvestmentStrategy.sol": {
        "keccak256": "0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb",
        "urls": [
          "bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52",
          "dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IQuorumRegistry.sol": {
        "keccak256": "0xe666a9120ceaf3278c34cebd7c33ee27a14788752b70f08fccc252971a53d6e3",
        "urls": [
          "bzz-raw://3f3df7d1504adc6f3c4305150c980d27c35feea7d1b9119b86a5bdb442b8f36e",
          "dweb:/ipfs/QmQqwGVbZ8mV7aFwe9rQ9hiAcXonmtyD2Kq22eNfcXhnkw"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IRegistry.sol": {
        "keccak256": "0x5bd8be0f70b0e69f94e069c52417079ba2b9e73acd5f659c09b22142dc6c59f5",
        "urls": [
          "bzz-raw://e32791f0147f40738d8a27c86e83c2207d5c1d1654c2f730629b3be587963cc4",
          "dweb:/ipfs/Qma4VYzA9jkLxWQCgCFm911rQodoSboaJxnNqi4AaSzftp"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IServiceManager.sol": {
        "keccak256": "0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4",
        "urls": [
          "bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2",
          "dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IVoteWeigher.sol": {
        "keccak256": "0x4d8068106dc1bc924e15cb4f8ae1c2f1b86bd3c6de1ce947081774225da63ad0",
        "urls": [
          "bzz-raw://b252272b18e9a9480568a2f96cbf17e41d7d61e42e30edaef9633ca4e7149fef",
          "dweb:/ipfs/QmSh9uPEpkT4QbT83vHgXuXCE8DhJpCZh1typa97tD4zZ4"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/libraries/BN254.sol": {
        "keccak256": "0xf677d6de3e5b3688eb08ac23e116f4d926d2ccc39039571e7c90aabe8bd5fccb",
        "urls": [
          "bzz-raw://0d0bfb10bc9b677311b0de35005549a8b772b38ce84b011115eb30466cc92646",
          "dweb:/ipfs/QmSA4yYCaoB1V6n1PYEJ3PEnd8Yi6xrKdihMJtqyGPfWJL"
        ],
        "license": "UNLICENSED AND MIT"
      },
      "src/contracts/libraries/BytesLib.sol": {
        "keccak256": "0x8484c1dc5ba4a3b6abceb4965227d945787305175ef1e55a513d8f097f5fd95e",
        "urls": [
          "bzz-raw://fb6824b1d81175e73868498f985533654b1f4d4ac6705ea8f2a9e12598759ec3",
          "dweb:/ipfs/QmdweCgj6cp1bBfXGvQrVVaN1tgiAY4DUbTiGXjtx4eu13"
        ],
        "license": "Unlicense"
      },
      "src/contracts/middleware/RegistryBase.sol": {
        "keccak256": "0x6ab4ffc19980aacb7c10e9b505fd39fa02cd09066c53bfe973695f7fedec55b5",
        "urls": [
          "bzz-raw://6ea94156a67bf1ee748abfaacd35726eb700d5c8d4c01a796295af4ae88f9b41",
          "dweb:/ipfs/QmdSKbQsgBDHuQ6CwDQP859zZZ9CtAcEkeWuEdEjq7AThX"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/middleware/VoteWeigherBase.sol": {
        "keccak256": "0x0c310a65e7c17a56722b83dc23b0aa53af8b82c672651c1a9b1317395610c4b3",
        "urls": [
          "bzz-raw://62e527d19cae0feb18f9750ae0037e1ddc0b526e48718d6254e6f5fe129e56b9",
          "dweb:/ipfs/QmRdqeaBn35CvESNJhR5oMmmcJL9SNZhthzpdHa1Myau8k"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/middleware/VoteWeigherBaseStorage.sol": {
        "keccak256": "0xd28f150aaaf2729ea4e4fe389bebcb7289ca7516f93bb0f293f20dcd24d7ac19",
        "urls": [
          "bzz-raw://37ea656b2d8788ae4392a58b60b8617eae3bc70187f3d8493593ef7981a94ee0",
          "dweb:/ipfs/QmRvQzewqFBPigQv76LDfq1MY6ECFL7FpVwwJATnAFVHHS"
        ],
        "license": "UNLICENSED"
      },
      "src/test/mocks/MiddlewareVoteWeigherMock.sol": {
        "keccak256": "0xd183a0d2b00d14cc0d36f7e10ee42eafeec7d44edc3aa4256e2e95911b981e71",
        "urls": [
          "bzz-raw://cbd826646c882225c2dc3535fad7ef22b15d614383f586c95a83645f6c16ca85",
          "dweb:/ipfs/QmTgqEv5KM7ELoTbFqPQvthCd5qCUreHGpnYky4WaUWZ2o"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/mocks/MiddlewareVoteWeigherMock.sol",
    "id": 42122,
    "exportedSymbols": {
      "AddressUpgradeable": [
        23638
      ],
      "BN254": [
        32311
      ],
      "BytesLib": [
        32644
      ],
      "DSTest": [
        1680
      ],
      "IERC20": [
        25366
      ],
      "IEigenLayrDelegation": [
        30977
      ],
      "IInvestmentManager": [
        31085
      ],
      "IInvestmentStrategy": [
        31179
      ],
      "IQuorumRegistry": [
        31339
      ],
      "IRegistry": [
        31351
      ],
      "IServiceManager": [
        31461
      ],
      "IVoteWeigher": [
        31529
      ],
      "Initializable": [
        23335
      ],
      "Math": [
        27606
      ],
      "MiddlewareVoteWeigherMock": [
        42121
      ],
      "RegistryBase": [
        36538
      ],
      "Script": [
        1943
      ],
      "StdStorage": [
        4971
      ],
      "Test": [
        4873
      ],
      "Vm": [
        6924
      ],
      "VoteWeigherBase": [
        37337
      ],
      "VoteWeigherBaseStorage": [
        37435
      ],
      "console": [
        14988
      ],
      "console2": [
        23052
      ],
      "stdError": [
        4943
      ],
      "stdJson": [
        2303
      ],
      "stdMath": [
        6212
      ],
      "stdStorage": [
        6073
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2031:91",
    "nodes": [
      {
        "id": 42016,
        "nodeType": "PragmaDirective",
        "src": "39:23:91",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 42017,
        "nodeType": "ImportDirective",
        "src": "64:53:91",
        "nodes": [],
        "absolutePath": "src/contracts/middleware/RegistryBase.sol",
        "file": "../../contracts/middleware/RegistryBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42122,
        "sourceUnit": 36539,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42018,
        "nodeType": "ImportDirective",
        "src": "119:28:91",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42122,
        "sourceUnit": 6213,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42121,
        "nodeType": "ContractDefinition",
        "src": "149:1920:91",
        "nodes": [
          {
            "id": 42025,
            "nodeType": "VariableDeclaration",
            "src": "214:28:91",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_NUMBER_OF_QUORUMS",
            "nameLocation": "220:18:91",
            "scope": 42121,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 42023,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "214:5:91",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 42024,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "241:1:91",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "id": 42043,
            "nodeType": "FunctionDefinition",
            "src": "249:228:91",
            "nodes": [],
            "body": {
              "id": 42042,
              "nodeType": "Block",
              "src": "475:2:91",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42037,
                    "name": "_investmentManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42031,
                    "src": "414:18:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  {
                    "id": 42038,
                    "name": "_serviceManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42034,
                    "src": "434:15:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IServiceManager_$31461",
                      "typeString": "contract IServiceManager"
                    }
                  },
                  {
                    "id": 42039,
                    "name": "_NUMBER_OF_QUORUMS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42025,
                    "src": "451:18:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 42040,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 42036,
                  "name": "RegistryBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36538,
                  "src": "401:12:91"
                },
                "nodeType": "ModifierInvocation",
                "src": "401:69:91"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 42035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42028,
                  "mutability": "mutable",
                  "name": "_delegation",
                  "nameLocation": "291:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42043,
                  "src": "270:32:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEigenLayrDelegation_$30977",
                    "typeString": "contract IEigenLayrDelegation"
                  },
                  "typeName": {
                    "id": 42027,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42026,
                      "name": "IEigenLayrDelegation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30977,
                      "src": "270:20:91"
                    },
                    "referencedDeclaration": 30977,
                    "src": "270:20:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenLayrDelegation_$30977",
                      "typeString": "contract IEigenLayrDelegation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42031,
                  "mutability": "mutable",
                  "name": "_investmentManager",
                  "nameLocation": "331:18:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42043,
                  "src": "312:37:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                    "typeString": "contract IInvestmentManager"
                  },
                  "typeName": {
                    "id": 42030,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42029,
                      "name": "IInvestmentManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31085,
                      "src": "312:18:91"
                    },
                    "referencedDeclaration": 31085,
                    "src": "312:18:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42034,
                  "mutability": "mutable",
                  "name": "_serviceManager",
                  "nameLocation": "375:15:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42043,
                  "src": "359:31:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IServiceManager_$31461",
                    "typeString": "contract IServiceManager"
                  },
                  "typeName": {
                    "id": 42033,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42032,
                      "name": "IServiceManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31461,
                      "src": "359:15:91"
                    },
                    "referencedDeclaration": 31461,
                    "src": "359:15:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IServiceManager_$31461",
                      "typeString": "contract IServiceManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "260:136:91"
            },
            "returnParameters": {
              "id": 42041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:91"
            },
            "scope": 42121,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42096,
            "nodeType": "FunctionDefinition",
            "src": "483:947:91",
            "nodes": [],
            "body": {
              "id": 42095,
              "nodeType": "Block",
              "src": "761:669:91",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42062,
                        "name": "_quorumBips",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42046,
                        "src": "799:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 42059,
                        "name": "VoteWeigherBase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37337,
                        "src": "771:15:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VoteWeigherBase_$37337_$",
                          "typeString": "type(contract VoteWeigherBase)"
                        }
                      },
                      "id": 42061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37030,
                      "src": "771:27:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256[] memory)"
                      }
                    },
                    "id": 42063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "771:40:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42064,
                  "nodeType": "ExpressionStatement",
                  "src": "771:40:91"
                },
                {
                  "assignments": [
                    42067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42067,
                      "mutability": "mutable",
                      "name": "_totalStake",
                      "nameLocation": "951:11:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 42095,
                      "src": "930:32:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OperatorStake_$31227_memory_ptr",
                        "typeString": "struct IQuorumRegistry.OperatorStake"
                      },
                      "typeName": {
                        "id": 42066,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42065,
                          "name": "OperatorStake",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31227,
                          "src": "930:13:91"
                        },
                        "referencedDeclaration": 31227,
                        "src": "930:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OperatorStake_$31227_storage_ptr",
                          "typeString": "struct IQuorumRegistry.OperatorStake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42068,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "930:32:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42072,
                        "name": "_totalStake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42067,
                        "src": "995:11:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OperatorStake_$31227_memory_ptr",
                          "typeString": "struct IQuorumRegistry.OperatorStake memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OperatorStake_$31227_memory_ptr",
                          "typeString": "struct IQuorumRegistry.OperatorStake memory"
                        }
                      ],
                      "expression": {
                        "id": 42069,
                        "name": "totalStakeHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35108,
                        "src": "972:17:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OperatorStake_$31227_storage_$dyn_storage",
                          "typeString": "struct IQuorumRegistry.OperatorStake storage ref[] storage ref"
                        }
                      },
                      "id": 42071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "972:22:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_OperatorStake_$31227_storage_$dyn_storage_ptr_$_t_struct$_OperatorStake_$31227_storage_$returns$__$bound_to$_t_array$_t_struct$_OperatorStake_$31227_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct IQuorumRegistry.OperatorStake storage ref[] storage pointer,struct IQuorumRegistry.OperatorStake storage ref)"
                      }
                    },
                    "id": 42073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "972:35:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42074,
                  "nodeType": "ExpressionStatement",
                  "src": "972:35:91"
                },
                {
                  "assignments": [
                    42077
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42077,
                      "mutability": "mutable",
                      "name": "_totalOperators",
                      "nameLocation": "1155:15:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 42095,
                      "src": "1134:36:91",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OperatorIndex_$31217_memory_ptr",
                        "typeString": "struct IQuorumRegistry.OperatorIndex"
                      },
                      "typeName": {
                        "id": 42076,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42075,
                          "name": "OperatorIndex",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31217,
                          "src": "1134:13:91"
                        },
                        "referencedDeclaration": 31217,
                        "src": "1134:13:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OperatorIndex_$31217_storage_ptr",
                          "typeString": "struct IQuorumRegistry.OperatorIndex"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42078,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1134:36:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42082,
                        "name": "_totalOperators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42077,
                        "src": "1207:15:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OperatorIndex_$31217_memory_ptr",
                          "typeString": "struct IQuorumRegistry.OperatorIndex memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OperatorIndex_$31217_memory_ptr",
                          "typeString": "struct IQuorumRegistry.OperatorIndex memory"
                        }
                      ],
                      "expression": {
                        "id": 42079,
                        "name": "totalOperatorsHistory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35113,
                        "src": "1180:21:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_OperatorIndex_$31217_storage_$dyn_storage",
                          "typeString": "struct IQuorumRegistry.OperatorIndex storage ref[] storage ref"
                        }
                      },
                      "id": 42081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1180:26:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_OperatorIndex_$31217_storage_$dyn_storage_ptr_$_t_struct$_OperatorIndex_$31217_storage_$returns$__$bound_to$_t_array$_t_struct$_OperatorIndex_$31217_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct IQuorumRegistry.OperatorIndex storage ref[] storage pointer,struct IQuorumRegistry.OperatorIndex storage ref)"
                      }
                    },
                    "id": 42083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:43:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42084,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:43:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 42086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 42087,
                        "name": "_firstQuorumStrategiesConsideredAndMultipliers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42050,
                        "src": "1276:46:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_StrategyAndWeightingMultiplier_$37355_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_StrategyAndWeightingMultiplier_$37355_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier memory[] memory"
                        }
                      ],
                      "id": 42085,
                      "name": "_addStrategiesConsideredAndMultipliers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37336,
                      "src": "1234:38:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_struct$_StrategyAndWeightingMultiplier_$37355_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier memory[] memory)"
                      }
                    },
                    "id": 42088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1234:89:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42089,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:89:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 42091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1372:1:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 42092,
                        "name": "_secondQuorumStrategiesConsideredAndMultipliers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42054,
                        "src": "1375:47:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_StrategyAndWeightingMultiplier_$37355_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_StrategyAndWeightingMultiplier_$37355_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier memory[] memory"
                        }
                      ],
                      "id": 42090,
                      "name": "_addStrategiesConsideredAndMultipliers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37336,
                      "src": "1333:38:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_struct$_StrategyAndWeightingMultiplier_$37355_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier memory[] memory)"
                      }
                    },
                    "id": 42093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:90:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42094,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:90:91"
                }
              ]
            },
            "functionSelector": "4698a394",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 42057,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42056,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23255,
                  "src": "749:11:91"
                },
                "nodeType": "ModifierInvocation",
                "src": "749:11:91"
              }
            ],
            "name": "initialize",
            "nameLocation": "492:10:91",
            "parameters": {
              "id": 42055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42046,
                  "mutability": "mutable",
                  "name": "_quorumBips",
                  "nameLocation": "529:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42096,
                  "src": "512:28:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42044,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "512:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 42045,
                    "nodeType": "ArrayTypeName",
                    "src": "512:9:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42050,
                  "mutability": "mutable",
                  "name": "_firstQuorumStrategiesConsideredAndMultipliers",
                  "nameLocation": "590:46:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42096,
                  "src": "550:86:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_StrategyAndWeightingMultiplier_$37355_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42048,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42047,
                        "name": "StrategyAndWeightingMultiplier",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 37355,
                        "src": "550:30:91"
                      },
                      "referencedDeclaration": 37355,
                      "src": "550:30:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyAndWeightingMultiplier_$37355_storage_ptr",
                        "typeString": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier"
                      }
                    },
                    "id": 42049,
                    "nodeType": "ArrayTypeName",
                    "src": "550:32:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_StrategyAndWeightingMultiplier_$37355_storage_$dyn_storage_ptr",
                      "typeString": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42054,
                  "mutability": "mutable",
                  "name": "_secondQuorumStrategiesConsideredAndMultipliers",
                  "nameLocation": "686:47:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42096,
                  "src": "646:87:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_StrategyAndWeightingMultiplier_$37355_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42052,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42051,
                        "name": "StrategyAndWeightingMultiplier",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 37355,
                        "src": "646:30:91"
                      },
                      "referencedDeclaration": 37355,
                      "src": "646:30:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StrategyAndWeightingMultiplier_$37355_storage_ptr",
                        "typeString": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier"
                      }
                    },
                    "id": 42053,
                    "nodeType": "ArrayTypeName",
                    "src": "646:32:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_StrategyAndWeightingMultiplier_$37355_storage_$dyn_storage_ptr",
                      "typeString": "struct VoteWeigherBaseStorage.StrategyAndWeightingMultiplier[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "502:237:91"
            },
            "returnParameters": {
              "id": 42058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:91"
            },
            "scope": 42121,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42104,
            "nodeType": "FunctionDefinition",
            "src": "1436:150:91",
            "nodes": [],
            "body": {
              "id": 42103,
              "nodeType": "Block",
              "src": "1506:80:91",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "58662162",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerOperator",
            "nameLocation": "1445:16:91",
            "parameters": {
              "id": 42101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42098,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1470:8:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42104,
                  "src": "1462:16:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1462:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42100,
                  "mutability": "mutable",
                  "name": "serveUntil",
                  "nameLocation": "1487:10:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42104,
                  "src": "1480:17:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 42099,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:6:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1461:37:91"
            },
            "returnParameters": {
              "id": 42102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1506:0:91"
            },
            "scope": 42121,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42110,
            "nodeType": "FunctionDefinition",
            "src": "1592:213:91",
            "nodes": [],
            "body": {
              "id": 42109,
              "nodeType": "Block",
              "src": "1645:160:91",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "d8cf98ca",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deregisterOperator",
            "nameLocation": "1601:18:91",
            "parameters": {
              "id": 42107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42106,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1628:8:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42110,
                  "src": "1620:16:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1620:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1619:18:91"
            },
            "returnParameters": {
              "id": 42108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1645:0:91"
            },
            "scope": 42121,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42120,
            "nodeType": "FunctionDefinition",
            "src": "1811:256:91",
            "nodes": [],
            "body": {
              "id": 42119,
              "nodeType": "Block",
              "src": "1909:158:91",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "c0bf897e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "propagateStakeUpdate",
            "nameLocation": "1820:20:91",
            "parameters": {
              "id": 42117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42112,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "1849:8:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42120,
                  "src": "1841:16:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1841:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42114,
                  "mutability": "mutable",
                  "name": "blockNumber",
                  "nameLocation": "1866:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42120,
                  "src": "1859:18:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 42113,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1859:6:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42116,
                  "mutability": "mutable",
                  "name": "prevElement",
                  "nameLocation": "1887:11:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 42120,
                  "src": "1879:19:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1879:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1840:59:91"
            },
            "returnParameters": {
              "id": 42118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1909:0:91"
            },
            "scope": 42121,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 42019,
              "name": "RegistryBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36538,
              "src": "187:12:91"
            },
            "id": 42020,
            "nodeType": "InheritanceSpecifier",
            "src": "187:12:91"
          },
          {
            "baseName": {
              "id": 42021,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1680,
              "src": "201:6:91"
            },
            "id": 42022,
            "nodeType": "InheritanceSpecifier",
            "src": "201:6:91"
          }
        ],
        "canonicalName": "MiddlewareVoteWeigherMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42121,
          1680,
          36538,
          31339,
          31351,
          37337,
          37435,
          31529,
          23335
        ],
        "name": "MiddlewareVoteWeigherMock",
        "nameLocation": "158:25:91",
        "scope": 42122,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 91
}