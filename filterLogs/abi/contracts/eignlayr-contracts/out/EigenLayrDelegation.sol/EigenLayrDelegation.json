{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "_investmentManager",
          "type": "address"
        },
        {
          "internalType": "contract IRegistryPermission",
          "name": "_permissionManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IInvestmentStrategy[]",
          "name": "strategies",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        }
      ],
      "name": "decreaseDelegatedShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "delegateTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "vs",
          "type": "bytes32"
        }
      ],
      "name": "delegateToBySignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegatedTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getOperatorRewardAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IInvestmentStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "increaseDelegatedShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentManager",
      "outputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "isDelegated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "isNotDelegated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operatorReceiverRewardAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IInvestmentStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operatorShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionManager",
      "outputs": [
        {
          "internalType": "contract IRegistryPermission",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "rewardReceiveAddress",
          "type": "address"
        }
      ],
      "name": "registerAsOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "undelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b50604051620021d9380380620021d9833981016040819052620000349162000134565b6001600160a01b03808316608052811660a0526200005162000059565b505062000173565b600054610100900460ff1615620000c65760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000119576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200013157600080fd5b50565b600080604083850312156200014857600080fd5b825162000155816200011b565b602084015190925062000168816200011b565b809150509250929050565b60805160a05161200f620001ca6000396000818161046401528181610b0201528181610bb80152610e360152600081816102b7015281816106c1015281816109a50152818161101f01526116b4015261200f6000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063778e55f3116100f9578063bd44e40311610097578063e7a324dc11610071578063e7a324dc14610499578063ee4ea66a146104c0578063f2fde38b146104ec578063fabc1cbc146104ff57600080fd5b8063bd44e4031461044c578063cc7a20491461045f578063da8be8641461048657600080fd5b80638b8209df116100d35780638b8209df146103ec5780638da5cb5b14610415578063ac637c7a14610426578063b41b394b1461043957600080fd5b8063778e55f31461038e5780637ecebe00146103b9578063886f1195146103d957600080fd5b80634b31bb10116101665780635c975abb116101405780635c975abb1461032757806365da12641461032f5780636d70f7ae14610358578063715018a61461038657600080fd5b80634b31bb10146102b25780635820491c146102f15780635ac86ab71461030457600080fd5b806328a573ae116101a257806328a573ae146102555780633644e515146102685780633e28391d14610271578063485cc9551461029f57600080fd5b8063136439dd146101c95780631d3696b7146101de57806320606b7014610220575b600080fd5b6101dc6101d7366004611a3f565b610512565b005b61020b6101ec366004611a6d565b6001600160a01b03908116600090815260686020526040902054161590565b60405190151581526020015b60405180910390f35b6102477f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b604051908152602001610217565b6101dc610263366004611a91565b6106b6565b61024760655481565b61020b61027f366004611a6d565b6001600160a01b0390811660009081526068602052604090205416151590565b6101dc6102ad366004611ad2565b610809565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610217565b6101dc6102ff366004611b57565b61099a565b61020b610312366004611bda565b606b54600160ff9092169190911b9081161490565b606b54610247565b6102d961033d366004611a6d565b6068602052600090815260409020546001600160a01b031681565b61020b610366366004611a6d565b6001600160a01b0390811660009081526067602052604090205416151590565b6101dc610ad9565b61024761039c366004611ad2565b606660209081526000928352604080842090915290825290205481565b6102476103c7366004611a6d565b60696020526000908152604090205481565b606a546102d9906001600160a01b031681565b6102d96103fa366004611a6d565b6067602052600090815260409020546001600160a01b031681565b6033546001600160a01b03166102d9565b6101dc610434366004611a6d565b610aed565b6101dc610447366004611bfd565b610ba3565b6101dc61045a366004611a6d565b610e21565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6101dc610494366004611a6d565b611014565b6102477fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c81565b6102d96104ce366004611a6d565b6001600160a01b039081166000908152606760205260409020541690565b6101dc6104fa366004611a6d565b611125565b6101dc61050d366004611a3f565b61119b565b606a60009054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190611c4e565b6001600160a01b0316336001600160a01b0316146105ff5760405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b60648201526084015b60405180910390fd5b606b54818116146106785760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106fe5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038084166000908152606860205260409020541615610804576001600160a01b0380841660009081526068602090815260408083205484168084526066835281842094871684529390915281208054849290610762908490611cb0565b909155505060408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050905084826000815181106107c0576107c0611cde565b60200260200101906001600160a01b031690816001600160a01b03168152505083816000815181106107f4576107f4611cde565b6020026020010181815250505050505b505050565b600054610100900460ff16158080156108295750600054600160ff909116105b806108435750303b158015610843575060005460ff166001145b6108a65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105f6565b6000805460ff1916600117905580156108c9576000805461ff0019166101001790555b6108d483600061133a565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666040518060400160405280600981526020016822b4b3b2b72630bcb960b91b815250463060405160200161092c9493929190611cf4565b60408051601f1981840301815291905280516020909101206065556109508261143a565b8015610804576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e25760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038086166000908152606860205260409020541615610ad2576001600160a01b038086166000908152606860205260408120549091169084905b81811015610ace57848482818110610a3d57610a3d611cde565b9050602002013560666000856001600160a01b03166001600160a01b031681526020019081526020016000206000898985818110610a7d57610a7d611cde565b9050602002016020810190610a929190611a6d565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610ac19190611d70565b9091555050600101610a23565b5050505b5050505050565b610ae161148c565b610aeb600061143a565b565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190611d87565b1515600114610b965760405162461bcd60e51b81526004016105f690611da9565b610ba033826114e6565b50565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b9190611d87565b1515600114610c4c5760405162461bcd60e51b81526004016105f690611da9565b821580610c595750428310155b610ca55760405162461bcd60e51b815260206004820152601c60248201527f64656c65676174696f6e207369676e617475726520657870697265640000000060448201526064016105f6565b6001600160a01b038516600090815260696020526040812080547fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c918891889185610cef83611e23565b909155506040805160208101959095526001600160a01b039384169085015291166060830152608082015260a0810185905260c001604051602081830303815290604052805190602001209050600060655482604051602001610d6992919061190160f01b81526002810192909252602282015260420190565b6040516020818303038152906040528051906020012090506000610d8e8286866117ce565b9050876001600160a01b0316816001600160a01b031614610e175760405162461bcd60e51b815260206004820152603e60248201527f456967656e4c61797244656c65676174696f6e2e64656c6567617465546f427960448201527f5369676e61747572653a20736967206e6f742066726f6d207374616b6572000060648201526084016105f6565b610ace88886114e6565b60405163bfd79e9960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bfd79e9990602401602060405180830381865afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190611d87565b1515600114610f465760405162461bcd60e51b815260206004820152605c60248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a204f70657261746f7220646f6573206e6f74207065726d697360648201527f73696f6e20746f207265676973746572206173206f70657261746f7200000000608482015260a4016105f6565b336000908152606760205260409020546001600160a01b031615610fe25760405162461bcd60e51b815260206004820152604760248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a206f70657261746f722068617320616c7265616479207265676064820152661a5cdd195c995960ca1b608482015260a4016105f6565b33600081815260676020526040902080546001600160a01b0319166001600160a01b038416179055610ba090806114e6565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461105c5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b0380821660009081526067602052604090205416156110fe5760405162461bcd60e51b815260206004820152604b60248201527f456967656e4c61797244656c65676174696f6e2e756e64656c65676174653a2060448201527f6f70657261746f72732063616e6e6f7420756e64656c65676174652066726f6d60648201526a207468656d73656c76657360a81b608482015260a4016105f6565b6001600160a01b0316600090815260686020526040902080546001600160a01b0319169055565b61112d61148c565b6001600160a01b0381166111925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f6565b610ba08161143a565b606a60009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112129190611c4e565b6001600160a01b0316336001600160a01b0316146112855760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b60648201526084016105f6565b606b54198119606b541916146113035760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020016106ab565b606a546001600160a01b031615801561135b57506001600160a01b03821615155b6113dd5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250606a80546001600160a01b0319166001600160a01b0392909216919091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6033546001600160a01b03163314610aeb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f6565b606b546000906001908116141561153f5760405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e646578206973207061757365640000000000000060448201526064016105f6565b6001600160a01b0380831660009081526067602052604090205416806115e25760405162461bcd60e51b815260206004820152604c60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a206f60448201527f70657261746f7220686173206e6f74207965742072656769737465726564206160648201526b7320612064656c656761746560a01b608482015260a4016105f6565b6001600160a01b0380851660009081526068602052604090205416156116705760405162461bcd60e51b815260206004820152603d60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a207360448201527f74616b657220686173206578697374696e672064656c65676174696f6e00000060648201526084016105f6565b6001600160a01b0384811660008181526068602052604080822080546001600160a01b031916888616179055516394f649dd60e01b815260048101929092529182917f0000000000000000000000000000000000000000000000000000000000000000909116906394f649dd90602401600060405180830381865afa1580156116fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117259190810190611efe565b8151919350915060005b81811015610ace5782818151811061174957611749611cde565b602002602001015160666000896001600160a01b03166001600160a01b03168152602001908152602001600020600086848151811061178a5761178a611cde565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546117c19190611cb0565b909155505060010161172f565b60008060006117de8686866117f4565b915091506117eb8161182d565b50949350505050565b6000806001600160ff1b0383168161181160ff86901c601b611cb0565b905061181f8782888561197b565b935093505050935093915050565b600081600481111561184157611841611fc3565b141561184a5750565b600181600481111561185e5761185e611fc3565b14156118ac5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f6565b60028160048111156118c0576118c0611fc3565b141561190e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f6565b600381600481111561192257611922611fc3565b1415610ba05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119b25750600090506003611a36565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a06573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a2f57600060019250925050611a36565b9150600090505b94509492505050565b600060208284031215611a5157600080fd5b5035919050565b6001600160a01b0381168114610ba057600080fd5b600060208284031215611a7f57600080fd5b8135611a8a81611a58565b9392505050565b600080600060608486031215611aa657600080fd5b8335611ab181611a58565b92506020840135611ac181611a58565b929592945050506040919091013590565b60008060408385031215611ae557600080fd5b8235611af081611a58565b91506020830135611b0081611a58565b809150509250929050565b60008083601f840112611b1d57600080fd5b50813567ffffffffffffffff811115611b3557600080fd5b6020830191508360208260051b8501011115611b5057600080fd5b9250929050565b600080600080600060608688031215611b6f57600080fd5b8535611b7a81611a58565b9450602086013567ffffffffffffffff80821115611b9757600080fd5b611ba389838a01611b0b565b90965094506040880135915080821115611bbc57600080fd5b50611bc988828901611b0b565b969995985093965092949392505050565b600060208284031215611bec57600080fd5b813560ff81168114611a8a57600080fd5b600080600080600060a08688031215611c1557600080fd5b8535611c2081611a58565b94506020860135611c3081611a58565b94979496505050506040830135926060810135926080909101359150565b600060208284031215611c6057600080fd5b8151611a8a81611a58565b60208082526015908201527437b7363ca4b73b32b9ba36b2b73a26b0b730b3b2b960591b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611cc357611cc3611c9a565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b84815260006020608081840152855180608085015260005b81811015611d285787810183015185820160a001528201611d0c565b81811115611d3a57600060a083870101525b5060408401869052601f01601f1916830160a0019150611d67905060608301846001600160a01b03169052565b95945050505050565b600082821015611d8257611d82611c9a565b500390565b600060208284031215611d9957600080fd5b81518015158114611a8a57600080fd5b60208082526054908201527f496e766573746d656e744d616e616765722e6465706f736974496e746f53747260408201527f61746567793a2064656c656761746f7220686173206e6f74207065726d697373606082015273696f6e20657865632064656c656761746520746f60601b608082015260a00190565b6000600019821415611e3757611e37611c9a565b5060010190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e6757611e67611cc8565b604052919050565b600067ffffffffffffffff821115611e8957611e89611cc8565b5060051b60200190565b600082601f830112611ea457600080fd5b81516020611eb9611eb483611e6f565b611e3e565b82815260059290921b84018101918181019086841115611ed857600080fd5b8286015b84811015611ef35780518352918301918301611edc565b509695505050505050565b60008060408385031215611f1157600080fd5b825167ffffffffffffffff80821115611f2957600080fd5b818501915085601f830112611f3d57600080fd5b81516020611f4d611eb483611e6f565b82815260059290921b84018101918181019089841115611f6c57600080fd5b948201945b83861015611f93578551611f8481611a58565b82529482019490820190611f71565b91880151919650909350505080821115611fac57600080fd5b50611fb985828601611e93565b9150509250929050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204e8f1278b01896ce58ccfea6bedce1dc01cf2930631b4a13f3ec5ec3bbe83c6264736f6c634300080c0033",
    "sourceMap": "1136:8667:44:-:0;;;1710:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1756:38:45;;;;;1871::44;::::1;;::::0;1919:22:::1;:20;:22::i;:::-;1710:238:::0;;1136:8667;;5388:279:8;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:8;;859:2:96;5447:66:8;;;841:21:96;898:2;878:18;;;871:30;937:34;917:18;;;910:62;-1:-1:-1;;;988:18:96;;;981:37;1035:19;;5447:66:8;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:8;5588:15;5573:30;;;;;;5622:28;;1207:36:96;;;5622:28:8;;1195:2:96;1180:18;5622:28:8;;;;;;;5523:138;5388:279::o;14:151:96:-;-1:-1:-1;;;;;109:31:96;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:482::-;306:6;314;367:2;355:9;346:7;342:23;338:32;335:52;;;383:1;380;373:12;335:52;415:9;409:16;434:51;479:5;434:51;:::i;:::-;554:2;539:18;;533:25;504:5;;-1:-1:-1;567:53:96;533:25;567:53;:::i;:::-;639:7;629:17;;;170:482;;;;;:::o;1065:184::-;1136:8667:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063778e55f3116100f9578063bd44e40311610097578063e7a324dc11610071578063e7a324dc14610499578063ee4ea66a146104c0578063f2fde38b146104ec578063fabc1cbc146104ff57600080fd5b8063bd44e4031461044c578063cc7a20491461045f578063da8be8641461048657600080fd5b80638b8209df116100d35780638b8209df146103ec5780638da5cb5b14610415578063ac637c7a14610426578063b41b394b1461043957600080fd5b8063778e55f31461038e5780637ecebe00146103b9578063886f1195146103d957600080fd5b80634b31bb10116101665780635c975abb116101405780635c975abb1461032757806365da12641461032f5780636d70f7ae14610358578063715018a61461038657600080fd5b80634b31bb10146102b25780635820491c146102f15780635ac86ab71461030457600080fd5b806328a573ae116101a257806328a573ae146102555780633644e515146102685780633e28391d14610271578063485cc9551461029f57600080fd5b8063136439dd146101c95780631d3696b7146101de57806320606b7014610220575b600080fd5b6101dc6101d7366004611a3f565b610512565b005b61020b6101ec366004611a6d565b6001600160a01b03908116600090815260686020526040902054161590565b60405190151581526020015b60405180910390f35b6102477f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b604051908152602001610217565b6101dc610263366004611a91565b6106b6565b61024760655481565b61020b61027f366004611a6d565b6001600160a01b0390811660009081526068602052604090205416151590565b6101dc6102ad366004611ad2565b610809565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610217565b6101dc6102ff366004611b57565b61099a565b61020b610312366004611bda565b606b54600160ff9092169190911b9081161490565b606b54610247565b6102d961033d366004611a6d565b6068602052600090815260409020546001600160a01b031681565b61020b610366366004611a6d565b6001600160a01b0390811660009081526067602052604090205416151590565b6101dc610ad9565b61024761039c366004611ad2565b606660209081526000928352604080842090915290825290205481565b6102476103c7366004611a6d565b60696020526000908152604090205481565b606a546102d9906001600160a01b031681565b6102d96103fa366004611a6d565b6067602052600090815260409020546001600160a01b031681565b6033546001600160a01b03166102d9565b6101dc610434366004611a6d565b610aed565b6101dc610447366004611bfd565b610ba3565b6101dc61045a366004611a6d565b610e21565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6101dc610494366004611a6d565b611014565b6102477fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c81565b6102d96104ce366004611a6d565b6001600160a01b039081166000908152606760205260409020541690565b6101dc6104fa366004611a6d565b611125565b6101dc61050d366004611a3f565b61119b565b606a60009054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190611c4e565b6001600160a01b0316336001600160a01b0316146105ff5760405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b60648201526084015b60405180910390fd5b606b54818116146106785760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106fe5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038084166000908152606860205260409020541615610804576001600160a01b0380841660009081526068602090815260408083205484168084526066835281842094871684529390915281208054849290610762908490611cb0565b909155505060408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050905084826000815181106107c0576107c0611cde565b60200260200101906001600160a01b031690816001600160a01b03168152505083816000815181106107f4576107f4611cde565b6020026020010181815250505050505b505050565b600054610100900460ff16158080156108295750600054600160ff909116105b806108435750303b158015610843575060005460ff166001145b6108a65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105f6565b6000805460ff1916600117905580156108c9576000805461ff0019166101001790555b6108d483600061133a565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666040518060400160405280600981526020016822b4b3b2b72630bcb960b91b815250463060405160200161092c9493929190611cf4565b60408051601f1981840301815291905280516020909101206065556109508261143a565b8015610804576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e25760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038086166000908152606860205260409020541615610ad2576001600160a01b038086166000908152606860205260408120549091169084905b81811015610ace57848482818110610a3d57610a3d611cde565b9050602002013560666000856001600160a01b03166001600160a01b031681526020019081526020016000206000898985818110610a7d57610a7d611cde565b9050602002016020810190610a929190611a6d565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610ac19190611d70565b9091555050600101610a23565b5050505b5050505050565b610ae161148c565b610aeb600061143a565b565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190611d87565b1515600114610b965760405162461bcd60e51b81526004016105f690611da9565b610ba033826114e6565b50565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b9190611d87565b1515600114610c4c5760405162461bcd60e51b81526004016105f690611da9565b821580610c595750428310155b610ca55760405162461bcd60e51b815260206004820152601c60248201527f64656c65676174696f6e207369676e617475726520657870697265640000000060448201526064016105f6565b6001600160a01b038516600090815260696020526040812080547fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c918891889185610cef83611e23565b909155506040805160208101959095526001600160a01b039384169085015291166060830152608082015260a0810185905260c001604051602081830303815290604052805190602001209050600060655482604051602001610d6992919061190160f01b81526002810192909252602282015260420190565b6040516020818303038152906040528051906020012090506000610d8e8286866117ce565b9050876001600160a01b0316816001600160a01b031614610e175760405162461bcd60e51b815260206004820152603e60248201527f456967656e4c61797244656c65676174696f6e2e64656c6567617465546f427960448201527f5369676e61747572653a20736967206e6f742066726f6d207374616b6572000060648201526084016105f6565b610ace88886114e6565b60405163bfd79e9960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bfd79e9990602401602060405180830381865afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190611d87565b1515600114610f465760405162461bcd60e51b815260206004820152605c60248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a204f70657261746f7220646f6573206e6f74207065726d697360648201527f73696f6e20746f207265676973746572206173206f70657261746f7200000000608482015260a4016105f6565b336000908152606760205260409020546001600160a01b031615610fe25760405162461bcd60e51b815260206004820152604760248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a206f70657261746f722068617320616c7265616479207265676064820152661a5cdd195c995960ca1b608482015260a4016105f6565b33600081815260676020526040902080546001600160a01b0319166001600160a01b038416179055610ba090806114e6565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461105c5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b0380821660009081526067602052604090205416156110fe5760405162461bcd60e51b815260206004820152604b60248201527f456967656e4c61797244656c65676174696f6e2e756e64656c65676174653a2060448201527f6f70657261746f72732063616e6e6f7420756e64656c65676174652066726f6d60648201526a207468656d73656c76657360a81b608482015260a4016105f6565b6001600160a01b0316600090815260686020526040902080546001600160a01b0319169055565b61112d61148c565b6001600160a01b0381166111925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f6565b610ba08161143a565b606a60009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112129190611c4e565b6001600160a01b0316336001600160a01b0316146112855760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b60648201526084016105f6565b606b54198119606b541916146113035760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020016106ab565b606a546001600160a01b031615801561135b57506001600160a01b03821615155b6113dd5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250606a80546001600160a01b0319166001600160a01b0392909216919091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6033546001600160a01b03163314610aeb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f6565b606b546000906001908116141561153f5760405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e646578206973207061757365640000000000000060448201526064016105f6565b6001600160a01b0380831660009081526067602052604090205416806115e25760405162461bcd60e51b815260206004820152604c60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a206f60448201527f70657261746f7220686173206e6f74207965742072656769737465726564206160648201526b7320612064656c656761746560a01b608482015260a4016105f6565b6001600160a01b0380851660009081526068602052604090205416156116705760405162461bcd60e51b815260206004820152603d60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a207360448201527f74616b657220686173206578697374696e672064656c65676174696f6e00000060648201526084016105f6565b6001600160a01b0384811660008181526068602052604080822080546001600160a01b031916888616179055516394f649dd60e01b815260048101929092529182917f0000000000000000000000000000000000000000000000000000000000000000909116906394f649dd90602401600060405180830381865afa1580156116fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117259190810190611efe565b8151919350915060005b81811015610ace5782818151811061174957611749611cde565b602002602001015160666000896001600160a01b03166001600160a01b03168152602001908152602001600020600086848151811061178a5761178a611cde565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546117c19190611cb0565b909155505060010161172f565b60008060006117de8686866117f4565b915091506117eb8161182d565b50949350505050565b6000806001600160ff1b0383168161181160ff86901c601b611cb0565b905061181f8782888561197b565b935093505050935093915050565b600081600481111561184157611841611fc3565b141561184a5750565b600181600481111561185e5761185e611fc3565b14156118ac5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f6565b60028160048111156118c0576118c0611fc3565b141561190e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f6565b600381600481111561192257611922611fc3565b1415610ba05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119b25750600090506003611a36565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a06573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a2f57600060019250925050611a36565b9150600090505b94509492505050565b600060208284031215611a5157600080fd5b5035919050565b6001600160a01b0381168114610ba057600080fd5b600060208284031215611a7f57600080fd5b8135611a8a81611a58565b9392505050565b600080600060608486031215611aa657600080fd5b8335611ab181611a58565b92506020840135611ac181611a58565b929592945050506040919091013590565b60008060408385031215611ae557600080fd5b8235611af081611a58565b91506020830135611b0081611a58565b809150509250929050565b60008083601f840112611b1d57600080fd5b50813567ffffffffffffffff811115611b3557600080fd5b6020830191508360208260051b8501011115611b5057600080fd5b9250929050565b600080600080600060608688031215611b6f57600080fd5b8535611b7a81611a58565b9450602086013567ffffffffffffffff80821115611b9757600080fd5b611ba389838a01611b0b565b90965094506040880135915080821115611bbc57600080fd5b50611bc988828901611b0b565b969995985093965092949392505050565b600060208284031215611bec57600080fd5b813560ff81168114611a8a57600080fd5b600080600080600060a08688031215611c1557600080fd5b8535611c2081611a58565b94506020860135611c3081611a58565b94979496505050506040830135926060810135926080909101359150565b600060208284031215611c6057600080fd5b8151611a8a81611a58565b60208082526015908201527437b7363ca4b73b32b9ba36b2b73a26b0b730b3b2b960591b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611cc357611cc3611c9a565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b84815260006020608081840152855180608085015260005b81811015611d285787810183015185820160a001528201611d0c565b81811115611d3a57600060a083870101525b5060408401869052601f01601f1916830160a0019150611d67905060608301846001600160a01b03169052565b95945050505050565b600082821015611d8257611d82611c9a565b500390565b600060208284031215611d9957600080fd5b81518015158114611a8a57600080fd5b60208082526054908201527f496e766573746d656e744d616e616765722e6465706f736974496e746f53747260408201527f61746567793a2064656c656761746f7220686173206e6f74207065726d697373606082015273696f6e20657865632064656c656761746520746f60601b608082015260a00190565b6000600019821415611e3757611e37611c9a565b5060010190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e6757611e67611cc8565b604052919050565b600067ffffffffffffffff821115611e8957611e89611cc8565b5060051b60200190565b600082601f830112611ea457600080fd5b81516020611eb9611eb483611e6f565b611e3e565b82815260059290921b84018101918181019086841115611ed857600080fd5b8286015b84811015611ef35780518352918301918301611edc565b509695505050505050565b60008060408385031215611f1157600080fd5b825167ffffffffffffffff80821115611f2957600080fd5b818501915085601f830112611f3d57600080fd5b81516020611f4d611eb483611e6f565b82815260059290921b84018101918181019089841115611f6c57600080fd5b948201945b83861015611f93578551611f8481611a58565b82529482019490820190611f71565b91880151919650909350505080821115611fac57600080fd5b50611fb985828601611e93565b9150509250929050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212204e8f1278b01896ce58ccfea6bedce1dc01cf2930631b4a13f3ec5ec3bbe83c6264736f6c634300080c0033",
    "sourceMap": "1136:8667:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:392:75;;;;;;:::i;:::-;;:::i;:::-;;9426:126:44;;;;;;:::i;:::-;-1:-1:-1;;;;;9511:19:44;;;9487:4;9511:19;;;:11;:19;;;;;;;:33;;9426:126;;;;752:14:96;;745:22;727:41;;715:2;700:18;9426:126:44;;;;;;;;628:130:45;;678:80;628:130;;;;;925:25:96;;;913:2;898:18;628:130:45;779:177:96;5894:649:44;;;;;;:::i;:::-;;:::i;1039:31:45:-;;;;;;9202:123:44;;;;;;:::i;:::-;-1:-1:-1;;;;;9284:19:44;;;9260:4;9284:19;;;:11;:19;;;;;;;:33;;;9202:123;1954:339;;;;;;:::i;:::-;;:::i;1138:53:45:-;;;;;;;;-1:-1:-1;;;;;2061:32:96;;;2043:51;;2031:2;2016:18;1138:53:45;1869:231:96;6792:629:44;;;;;;:::i;:::-;;:::i;4796:149:75:-;;;;;;:::i;:::-;4914:7;;4885:1;:10;;;;;;;;4914:14;;;4913:24;;4796:149;4608:87;4681:7;;4608:87;;1508:46:45;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1508:46:45;;;9659:142:44;;;;;;:::i;:::-;-1:-1:-1;;;;;9741:39:44;;;9718:4;9741:39;;;:29;:39;;;;;;;:53;;;9659:142;2056:101:7;;;:::i;1281:81:45:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1647:41;;;;;;:::i;:::-;;;;;;;;;;;;;;906:37:75;;;;;-1:-1:-1;;;;;906:37:75;;;1411:64:45;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1411:64:45;;;1426:85:7;1498:6;;-1:-1:-1;;;;;1498:6:7;1426:85;;3435:296:44;;;;;;:::i;:::-;;:::i;3924:964::-;;;;;;:::i;:::-;;:::i;2553:678::-;;;;;;:::i;:::-;;:::i;1372:54::-;;;;;5153:233;;;;;;:::i;:::-;;:::i;849:142:45:-;;903:88;849:142;;5523:146:44;;;;;;:::i;:::-;-1:-1:-1;;;;;5623:39:44;;;5598:7;5623:39;;;:29;:39;;;;;;;;5523:146;2306:198:7;;;;;;:::i;:::-;;:::i;4135:403:75:-;;;;;;:::i;:::-;;:::i;3259:392::-;1557:14;;;;;;;;;-1:-1:-1;;;;;1557:14:75;-1:-1:-1;;;;;1557:21:75;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1543:37:75;:10;-1:-1:-1;;;;;1543:37:75;;1535:90;;;;-1:-1:-1;;;1535:90:75;;6204:2:96;1535:90:75;;;6186:21:96;6243:2;6223:18;;;6216:30;6282:34;6262:18;;;6255:62;-1:-1:-1;;;6333:18:96;;;6326:38;6381:19;;1535:90:75;;;;;;;;;3491:7:::1;::::0;3461:25;;::::1;3460:38;3452:107;;;::::0;-1:-1:-1;;;3452:107:75;;6613:2:96;3452:107:75::1;::::0;::::1;6595:21:96::0;6652:2;6632:18;;;6625:30;6691:34;6671:18;;;6664:62;6762:26;6742:18;;;6735:54;6806:19;;3452:107:75::1;6411:420:96::0;3452:107:75::1;3569:7;:25:::0;;;3609:35:::1;::::0;925:25:96;;;3616:10:75::1;::::0;3609:35:::1;::::0;913:2:96;898:18;3609:35:75::1;;;;;;;;3259:392:::0;:::o;5894:649:44:-;1590:10;-1:-1:-1;;;;;1612:17:44;1590:40;;1582:74;;;;-1:-1:-1;;;1582:74:44;;;;;;;:::i;:::-;-1:-1:-1;;;;;9284:19:44;;;9260:4;9284:19;;;:11;:19;;;;;;;:33;6102:435:::1;;-1:-1:-1::0;;;;;6160:19:44;;::::1;6141:16;6160:19:::0;;;:11:::1;:19;::::0;;;;;;;;;::::1;6250:24:::0;;;:14:::1;:24:::0;;;;;:34;;::::1;::::0;;;;;;;;:44;;6288:6;;6141:16;6250:44:::1;::::0;6288:6;;6250:44:::1;:::i;:::-;::::0;;;-1:-1:-1;;6355:28:44::1;::::0;;6381:1:::1;6355:28:::0;;;;;::::1;::::0;;;6309:43:::1;::::0;6355:28:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;6431:13:44::1;::::0;;6442:1:::1;6431:13:::0;;;;;::::1;::::0;;;6309:74;;-1:-1:-1;6397:31:44::1;::::0;6431:13;-1:-1:-1;6431:13:44::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;6431:13:44::1;6397:47;;6478:8;6458:14;6473:1;6458:17;;;;;;;;:::i;:::-;;;;;;:28;-1:-1:-1::0;;;;;6458:28:44::1;;;-1:-1:-1::0;;;;;6458:28:44::1;;;::::0;::::1;6520:6;6500:14;6515:1;6500:17;;;;;;;;:::i;:::-;;;;;;:26;;;::::0;::::1;6127:410;;;6102:435;5894:649:::0;;;:::o;1954:339::-;3111:19:8;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:8;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:8;1476:19:10;:23;;;3219:66:8;;-1:-1:-1;3268:12:8;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:8;;7917:2:96;3157:201:8;;;7899:21:96;7956:2;7936:18;;;7929:30;7995:34;7975:18;;;7968:62;-1:-1:-1;;;8046:18:96;;;8039:44;8100:19;;3157:201:8;7715:410:96;3157:201:8;3368:12;:16;;-1:-1:-1;;3368:16:8;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:8;;;;;3394:65;2080:47:44::1;2098:15;1081:1:75;2080:17:44;:47::i;:::-;678:80:45;2194:18:44;;;;;;;;;;;;;-1:-1:-1::0;;;2194:18:44::1;;::::0;2214:13:::1;2237:4;2166:77;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;2166:77:44;;::::1;::::0;;;;;;2156:88;;2166:77:::1;2156:88:::0;;::::1;::::0;2137:16:::1;:107:::0;2254:32:::1;2273:12:::0;2254:18:::1;:32::i;:::-;3483:14:8::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:8;;;3553:14;;-1:-1:-1;9112:36:96;;3553:14:8;;9100:2:96;9085:18;3553:14:8;;;;;;;3101:483;1954:339:44;;:::o;6792:629::-;1590:10;-1:-1:-1;;;;;1612:17:44;1590:40;;1582:74;;;;-1:-1:-1;;;1582:74:44;;;;;;;:::i;:::-;-1:-1:-1;;;;;9284:19:44;;;9260:4;9284:19;;;:11;:19;;;;;;;:33;7002:413:::1;;-1:-1:-1::0;;;;;7060:19:44;;::::1;7041:16;7060:19:::0;;;:11:::1;:19;::::0;;;;;;;::::1;::::0;7179:10;;7210:195:::1;7234:12;7230:1;:16;7210:195;;;7310:6;;7317:1;7310:9;;;;;;;:::i;:::-;;;;;;;7267:14;:24;7282:8;-1:-1:-1::0;;;;;7267:24:44::1;-1:-1:-1::0;;;;;7267:24:44::1;;;;;;;;;;;;:39;7292:10;;7303:1;7292:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7267:39:44::1;-1:-1:-1::0;;;;;7267:39:44::1;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7369:3:44::1;;7210:195;;;;7027:388;;7002:413;6792:629:::0;;;;;:::o;2056:101:7:-;1319:13;:11;:13::i;:::-;2120:30:::1;2147:1;2120:18;:30::i;:::-;2056:101::o:0;3435:296:44:-;3513:52;;-1:-1:-1;;;3513:52:44;;3554:10;3513:52;;;2043:51:96;3513:17:44;-1:-1:-1;;;;;3513:40:44;;;;2016:18:96;;3513:52:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;3569:4;3513:60;3492:191;;;;-1:-1:-1;;;3492:191:44;;;;;;;:::i;:::-;3693:31;3703:10;3715:8;3693:9;:31::i;:::-;3435:296;:::o;3924:964::-;4080:52;;-1:-1:-1;;;4080:52:44;;4121:10;4080:52;;;2043:51:96;4080:17:44;-1:-1:-1;;;;;4080:40:44;;;;2016:18:96;;4080:52:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;4136:4;4080:60;4059:191;;;;-1:-1:-1;;;4059:191:44;;;;;;;:::i;:::-;4268:11;;;:40;;;4293:15;4283:6;:25;;4268:40;4260:81;;;;-1:-1:-1;;;4260:81:44;;10547:2:96;4260:81:44;;;10529:21:96;10586:2;10566:18;;;10559:30;10625;10605:18;;;10598:58;10673:18;;4260:81:44;10345:352:96;4260:81:44;-1:-1:-1;;;;;4498:14:44;;4417:18;4498:14;;;:6;:14;;;;;:16;;903:88:45;;4480:6:44;;4488:8;;4417:18;4498:16;;;:::i;:::-;;;;-1:-1:-1;4448:75:44;;;;;;11101:25:96;;;;-1:-1:-1;;;;;11200:15:96;;;11180:18;;;11173:43;11252:15;;11232:18;;;11225:43;11284:18;;;11277:34;11327:19;;;11320:35;;;11073:19;;4448:75:44;;;;;;;;;;;;4438:86;;;;;;4417:107;;4534:18;4594:16;;4612:10;4565:58;;;;;;;;-1:-1:-1;;;11624:27:96;;11676:1;11667:11;;11660:27;;;;11712:2;11703:12;;11696:28;11749:2;11740:12;;11366:392;4565:58:44;;;;;;;;;;;;;4555:69;;;;;;4534:90;;4673:24;4700:32;4714:10;4726:1;4729:2;4700:13;:32::i;:::-;4673:59;;4771:6;-1:-1:-1;;;;;4751:26:44;:16;-1:-1:-1;;;;;4751:26:44;;4743:101;;;;-1:-1:-1;;;4743:101:44;;11965:2:96;4743:101:44;;;11947:21:96;12004:2;11984:18;;;11977:30;12043:34;12023:18;;;12016:62;12114:32;12094:18;;;12087:60;12164:19;;4743:101:44;11763:426:96;4743:101:44;4854:27;4864:6;4872:8;4854:9;:27::i;2553:678::-;2651:59;;-1:-1:-1;;;2651:59:44;;2699:10;2651:59;;;2043:51:96;2651:17:44;-1:-1:-1;;;;;2651:47:44;;;;2016:18:96;;2651:59:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;2714:4;2651:67;2630:206;;;;-1:-1:-1;;;2630:206:44;;12396:2:96;2630:206:44;;;12378:21:96;12435:2;12415:18;;;12408:30;12474:34;12454:18;;;12447:62;12545:34;12525:18;;;12518:62;12617:30;12596:19;;;12589:59;12665:19;;2630:206:44;12194:496:96;2630:206:44;2897:10;2920:1;2867:41;;;:29;:41;;;;;;-1:-1:-1;;;;;2867:41:44;:55;2846:173;;;;-1:-1:-1;;;2846:173:44;;12897:2:96;2846:173:44;;;12879:21:96;12936:2;12916:18;;;12909:30;12975:34;12955:18;;;12948:62;13046:34;13026:18;;;13019:62;-1:-1:-1;;;13097:19:96;;;13090:38;13145:19;;2846:173:44;12695:475:96;2846:173:44;3147:10;3117:41;;;;:29;:41;;;;;:64;;-1:-1:-1;;;;;;3117:64:44;-1:-1:-1;;;;;3117:64:44;;;;;3191:33;;3147:10;3191:9;:33::i;5153:233::-;1590:10;-1:-1:-1;;;;;1612:17:44;1590:40;;1582:74;;;;-1:-1:-1;;;1582:74:44;;;;;;;:::i;:::-;-1:-1:-1;;;;;9741:39:44;;;9718:4;9741:39;;;:29;:39;;;;;;;:53;5230:107:::1;;;::::0;-1:-1:-1;;;5230:107:44;;13377:2:96;5230:107:44::1;::::0;::::1;13359:21:96::0;13416:2;13396:18;;;13389:30;13455:34;13435:18;;;13428:62;13526:34;13506:18;;;13499:62;-1:-1:-1;;;13577:19:96;;;13570:42;13629:19;;5230:107:44::1;13175:479:96::0;5230:107:44::1;-1:-1:-1::0;;;;;5347:19:44::1;5377:1;5347:19:::0;;;:11:::1;:19;::::0;;;;:32;;-1:-1:-1;;;;;;5347:32:44::1;::::0;;5153:233::o;2306:198:7:-;1319:13;:11;:13::i;:::-;-1:-1:-1;;;;;2394:22:7;::::1;2386:73;;;::::0;-1:-1:-1;;;2386:73:7;;13861:2:96;2386:73:7::1;::::0;::::1;13843:21:96::0;13900:2;13880:18;;;13873:30;13939:34;13919:18;;;13912:62;-1:-1:-1;;;13990:18:96;;;13983:36;14036:19;;2386:73:7::1;13659:402:96::0;2386:73:7::1;2469:28;2488:8;2469:18;:28::i;4135:403:75:-:0;1705:14;;;;;;;;;-1:-1:-1;;;;;1705:14:75;-1:-1:-1;;;;;1705:23:75;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1691:39:75;:10;-1:-1:-1;;;;;1691:39:75;;1683:94;;;;-1:-1:-1;;;1683:94:75;;14268:2:96;1683:94:75;;;14250:21:96;14307:2;14287:18;;;14280:30;14346:34;14326:18;;;14319:62;-1:-1:-1;;;14397:18:96;;;14390:40;14447:19;;1683:94:75;14066:406:96;1683:94:75;4375:7:::1;;4374:8;4352:15;4351:16;4339:7;;4338:8;4337:31;4336:47;4328:116;;;::::0;-1:-1:-1;;;4328:116:75;;14679:2:96;4328:116:75::1;::::0;::::1;14661:21:96::0;14718:2;14698:18;;;14691:30;14757:34;14737:18;;;14730:62;14828:26;14808:18;;;14801:54;14872:19;;4328:116:75::1;14477:420:96::0;4328:116:75::1;4454:7;:25:::0;;;4494:37:::1;::::0;925:25:96;;;4503:10:75::1;::::0;4494:37:::1;::::0;913:2:96;898:18;4494:37:75::1;779:177:96::0;2363:438:75;2497:14;;-1:-1:-1;;;;;2497:14:75;2489:37;:79;;;;-1:-1:-1;;;;;;2530:38:75;;;;2489:79;2468:197;;;;-1:-1:-1;;;2468:197:75;;15104:2:96;2468:197:75;;;15086:21:96;15143:2;15123:18;;;15116:30;15182:34;15162:18;;;15155:62;15253:34;15233:18;;;15226:62;-1:-1:-1;;;15304:19:96;;;15297:38;15352:19;;2468:197:75;14902:475:96;2468:197:75;2675:7;:26;;;2716:36;;925:25:96;;;2723:10:75;;2716:36;;913:2:96;898:18;2716:36:75;;;;;;;-1:-1:-1;2762:14:75;:32;;-1:-1:-1;;;;;;2762:32:75;-1:-1:-1;;;;;2762:32:75;;;;;;;;;;2363:438::o;2658:187:7:-;2750:6;;;-1:-1:-1;;;;;2766:17:7;;;-1:-1:-1;;;;;;2766:17:7;;;;;;;2798:40;;2750:6;;;2766:17;2750:6;;2798:40;;2731:16;;2798:40;2721:124;2658:187;:::o;1584:130::-;1498:6;;-1:-1:-1;;;;;1498:6:7;929:10:11;1647:23:7;1639:68;;;;-1:-1:-1;;;1639:68:7;;15584:2:96;1639:68:7;;;15566:21:96;;;15603:18;;;15596:30;15662:34;15642:18;;;15635:62;15714:18;;1639:68:7;15382:356:96;7972:1111:44;4914:7:75;;1294:1:44;;4885::75;4914:14;;;4913:24;2187:14;2179:52;;;;-1:-1:-1;;;2179:52:75;;15945:2:96;2179:52:75;;;15927:21:96;15984:2;15964:18;;;15957:30;16023:27;16003:18;;;15996:55;16068:18;;2179:52:75;15743:349:96;2179:52:75;-1:-1:-1;;;;;8109:39:44;;::::1;8085:21;8109:39:::0;;;:29:::1;:39;::::0;;;;;::::1;8179:27:::0;8158:138:::1;;;::::0;-1:-1:-1;;;8158:138:44;;16299:2:96;8158:138:44::1;::::0;::::1;16281:21:96::0;16338:2;16318:18;;;16311:30;16377:34;16357:18;;;16350:62;16448:34;16428:18;;;16421:62;-1:-1:-1;;;16499:19:96;;;16492:43;16552:19;;8158:138:44::1;16097:480:96::0;8158:138:44::1;-1:-1:-1::0;;;;;9511:19:44;;;9487:4;9511:19;;;:11;:19;;;;;;;:33;8307:96:::1;;;::::0;-1:-1:-1;;;8307:96:44;;16784:2:96;8307:96:44::1;::::0;::::1;16766:21:96::0;16823:2;16803:18;;;16796:30;16862:34;16842:18;;;16835:62;16933:31;16913:18;;;16906:59;16982:19;;8307:96:44::1;16582:425:96::0;8307:96:44::1;-1:-1:-1::0;;;;;8484:19:44;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;:30;;-1:-1:-1;;;;;;8484:30:44::1;::::0;;::::1;;::::0;;8674:37;-1:-1:-1;;;8674:37:44;;::::1;::::0;::::1;2043:51:96::0;;;;8484:19:44;;;8674:17:::1;:29:::0;;::::1;::::0;::::1;::::0;2016:18:96;;8674:37:44::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8674:37:44::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8797:17:::0;;8605:106;;-1:-1:-1;8605:106:44;-1:-1:-1;8774:20:44::1;8824:253;8848:12;8844:1;:16;8824:253;;;8998:6;9005:1;8998:9;;;;;;;;:::i;:::-;;;;;;;8955:14;:24;8970:8;-1:-1:-1::0;;;;;8955:24:44::1;-1:-1:-1::0;;;;;8955:24:44::1;;;;;;;;;;;;:39;8980:10;8991:1;8980:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;8955:39:44::1;-1:-1:-1::0;;;;;8955:39:44::1;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9049:3:44::1;;8824:253;;4643:252:33::0;4750:7;4770:17;4789:18;4811:23;4822:4;4828:1;4831:2;4811:10;:23::i;:::-;4769:65;;;;4844:18;4856:5;4844:11;:18::i;:::-;-1:-1:-1;4879:9:33;4643:252;-1:-1:-1;;;;4643:252:33:o;4142:336::-;4252:7;;-1:-1:-1;;;;;4297:80:33;;4252:7;4403:25;4419:3;4404:18;;;4426:2;4403:25;:::i;:::-;4387:42;;4446:25;4457:4;4463:1;4466;4469;4446:10;:25::i;:::-;4439:32;;;;;;4142:336;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;;788:34;;-1:-1:-1;;;788:34:33;;19784:2:96;788:34:33;;;19766:21:96;19823:2;19803:18;;;19796:30;19862:26;19842:18;;;19835:54;19906:18;;788:34:33;19582:348:96;730:345:33;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;;903:41;;-1:-1:-1;;;903:41:33;;20137:2:96;903:41:33;;;20119:21:96;20176:2;20156:18;;;20149:30;20215:33;20195:18;;;20188:61;20266:18;;903:41:33;19935:355:96;839:236:33;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;;1020:44;;-1:-1:-1;;;1020:44:33;;20497:2:96;1020:44:33;;;20479:21:96;20536:2;20516:18;;;20509:30;20575:34;20555:18;;;20548:62;-1:-1:-1;;;20626:18:96;;;20619:32;20668:19;;1020:44:33;20295:398:96;5069:1494:33;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:33;;-1:-1:-1;6221:30:33;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;20925:25:96;;;20998:4;20986:17;;20966:18;;;20959:45;;;;21020:18;;;21013:34;;;21063:18;;;21056:34;;;6374:24:33;;20897:19:96;;6374:24:33;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:33;;-1:-1:-1;;6374:24:33;;;-1:-1:-1;;;;;;;6412:20:33;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:33;;-1:-1:-1;5069:1494:33;;;;;;;;:::o;14:180:96:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:96;;14:180;-1:-1:-1;14:180:96:o;199:131::-;-1:-1:-1;;;;;274:31:96;;264:42;;254:70;;320:1;317;310:12;335:247;394:6;447:2;435:9;426:7;422:23;418:32;415:52;;;463:1;460;453:12;415:52;502:9;489:23;521:31;546:5;521:31;:::i;:::-;571:5;335:247;-1:-1:-1;;;335:247:96:o;961:485::-;1067:6;1075;1083;1136:2;1124:9;1115:7;1111:23;1107:32;1104:52;;;1152:1;1149;1142:12;1104:52;1191:9;1178:23;1210:31;1235:5;1210:31;:::i;:::-;1260:5;-1:-1:-1;1317:2:96;1302:18;;1289:32;1330:33;1289:32;1330:33;:::i;:::-;961:485;;1382:7;;-1:-1:-1;;;1436:2:96;1421:18;;;;1408:32;;961:485::o;1451:413::-;1544:6;1552;1605:2;1593:9;1584:7;1580:23;1576:32;1573:52;;;1621:1;1618;1611:12;1573:52;1660:9;1647:23;1679:31;1704:5;1679:31;:::i;:::-;1729:5;-1:-1:-1;1786:2:96;1771:18;;1758:32;1799:33;1758:32;1799:33;:::i;:::-;1851:7;1841:17;;;1451:413;;;;;:::o;2105:388::-;2189:8;2199:6;2253:3;2246:4;2238:6;2234:17;2230:27;2220:55;;2271:1;2268;2261:12;2220:55;-1:-1:-1;2294:20:96;;2337:18;2326:30;;2323:50;;;2369:1;2366;2359:12;2323:50;2406:4;2398:6;2394:17;2382:29;;2466:3;2459:4;2449:6;2446:1;2442:14;2434:6;2430:27;2426:38;2423:47;2420:67;;;2483:1;2480;2473:12;2420:67;2105:388;;;;;:::o;2498:979::-;2658:6;2666;2674;2682;2690;2743:2;2731:9;2722:7;2718:23;2714:32;2711:52;;;2759:1;2756;2749:12;2711:52;2798:9;2785:23;2817:31;2842:5;2817:31;:::i;:::-;2867:5;-1:-1:-1;2923:2:96;2908:18;;2895:32;2946:18;2976:14;;;2973:34;;;3003:1;3000;2993:12;2973:34;3042:91;3125:7;3116:6;3105:9;3101:22;3042:91;:::i;:::-;3152:8;;-1:-1:-1;3016:117:96;-1:-1:-1;3240:2:96;3225:18;;3212:32;;-1:-1:-1;3256:16:96;;;3253:36;;;3285:1;3282;3275:12;3253:36;;3324:93;3409:7;3398:8;3387:9;3383:24;3324:93;:::i;:::-;2498:979;;;;-1:-1:-1;2498:979:96;;-1:-1:-1;3436:8:96;;3298:119;2498:979;-1:-1:-1;;;2498:979:96:o;3482:269::-;3539:6;3592:2;3580:9;3571:7;3567:23;3563:32;3560:52;;;3608:1;3605;3598:12;3560:52;3647:9;3634:23;3697:4;3690:5;3686:16;3679:5;3676:27;3666:55;;3717:1;3714;3707:12;4910:594;5005:6;5013;5021;5029;5037;5090:3;5078:9;5069:7;5065:23;5061:33;5058:53;;;5107:1;5104;5097:12;5058:53;5146:9;5133:23;5165:31;5190:5;5165:31;:::i;:::-;5215:5;-1:-1:-1;5272:2:96;5257:18;;5244:32;5285:33;5244:32;5285:33;:::i;:::-;4910:594;;5337:7;;-1:-1:-1;;;;5391:2:96;5376:18;;5363:32;;5442:2;5427:18;;5414:32;;5493:3;5478:19;;;5465:33;;-1:-1:-1;4910:594:96:o;5746:251::-;5816:6;5869:2;5857:9;5848:7;5844:23;5840:32;5837:52;;;5885:1;5882;5875:12;5837:52;5917:9;5911:16;5936:31;5961:5;5936:31;:::i;6836:345::-;7038:2;7020:21;;;7077:2;7057:18;;;7050:30;-1:-1:-1;;;7111:2:96;7096:18;;7089:51;7172:2;7157:18;;6836:345::o;7186:127::-;7247:10;7242:3;7238:20;7235:1;7228:31;7278:4;7275:1;7268:15;7302:4;7299:1;7292:15;7318:128;7358:3;7389:1;7385:6;7382:1;7379:13;7376:39;;;7395:18;;:::i;:::-;-1:-1:-1;7431:9:96;;7318:128::o;7451:127::-;7512:10;7507:3;7503:20;7500:1;7493:31;7543:4;7540:1;7533:15;7567:4;7564:1;7557:15;7583:127;7644:10;7639:3;7635:20;7632:1;7625:31;7675:4;7672:1;7665:15;7699:4;7696:1;7689:15;8130:825;8361:6;8350:9;8343:25;8324:4;8387:2;8425:3;8420:2;8409:9;8405:18;8398:31;8458:6;8452:13;8502:6;8496:3;8485:9;8481:19;8474:35;8527:1;8537:141;8551:6;8548:1;8545:13;8537:141;;;8647:14;;;8643:23;;8637:30;8612:17;;;8631:3;8608:27;8601:67;8566:10;;8537:141;;;8696:6;8693:1;8690:13;8687:92;;;8767:1;8761:3;8752:6;8741:9;8737:22;8733:32;8726:43;8687:92;-1:-1:-1;8882:2:96;8867:18;;8860:34;;;8840:2;8819:15;-1:-1:-1;;8815:29:96;8800:45;;8847:3;8796:55;;-1:-1:-1;8903:46:96;;-1:-1:-1;8945:2:96;8930:18;;8922:6;-1:-1:-1;;;;;4004:31:96;3992:44;;3938:104;8903:46;8130:825;;;;;;;:::o;9440:125::-;9480:4;9508:1;9505;9502:8;9499:34;;;9513:18;;:::i;:::-;-1:-1:-1;9550:9:96;;9440:125::o;9570:277::-;9637:6;9690:2;9678:9;9669:7;9665:23;9661:32;9658:52;;;9706:1;9703;9696:12;9658:52;9738:9;9732:16;9791:5;9784:13;9777:21;9770:5;9767:32;9757:60;;9813:1;9810;9803:12;9852:488;10054:2;10036:21;;;10093:2;10073:18;;;10066:30;10132:34;10127:2;10112:18;;10105:62;10203:34;10198:2;10183:18;;10176:62;-1:-1:-1;;;10269:3:96;10254:19;;10247:51;10330:3;10315:19;;9852:488::o;10702:135::-;10741:3;-1:-1:-1;;10762:17:96;;10759:43;;;10782:18;;:::i;:::-;-1:-1:-1;10829:1:96;10818:13;;10702:135::o;17012:275::-;17083:2;17077:9;17148:2;17129:13;;-1:-1:-1;;17125:27:96;17113:40;;17183:18;17168:34;;17204:22;;;17165:62;17162:88;;;17230:18;;:::i;:::-;17266:2;17259:22;17012:275;;-1:-1:-1;17012:275:96:o;17292:204::-;17373:4;17406:18;17398:6;17395:30;17392:56;;;17428:18;;:::i;:::-;-1:-1:-1;17473:1:96;17469:14;17485:4;17465:25;;17292:204::o;17501:680::-;17566:5;17619:3;17612:4;17604:6;17600:17;17596:27;17586:55;;17637:1;17634;17627:12;17586:55;17666:6;17660:13;17692:4;17716:81;17732:64;17793:2;17732:64;:::i;:::-;17716:81;:::i;:::-;17831:15;;;17917:1;17913:10;;;;17901:23;;17897:32;;;17862:12;;;;17941:15;;;17938:35;;;17969:1;17966;17959:12;17938:35;18005:2;17997:6;17993:15;18017:135;18033:6;18028:3;18025:15;18017:135;;;18099:10;;18087:23;;18130:12;;;;18050;;18017:135;;;-1:-1:-1;18170:5:96;17501:680;-1:-1:-1;;;;;;17501:680:96:o;18186:1259::-;18344:6;18352;18405:2;18393:9;18384:7;18380:23;18376:32;18373:52;;;18421:1;18418;18411:12;18373:52;18454:9;18448:16;18483:18;18524:2;18516:6;18513:14;18510:34;;;18540:1;18537;18530:12;18510:34;18578:6;18567:9;18563:22;18553:32;;18623:7;18616:4;18612:2;18608:13;18604:27;18594:55;;18645:1;18642;18635:12;18594:55;18674:2;18668:9;18696:4;18720:81;18736:64;18797:2;18736:64;:::i;18720:81::-;18835:15;;;18917:1;18913:10;;;;18905:19;;18901:28;;;18866:12;;;;18941:19;;;18938:39;;;18973:1;18970;18963:12;18938:39;18997:11;;;;19017:210;19033:6;19028:3;19025:15;19017:210;;;19106:3;19100:10;19123:31;19148:5;19123:31;:::i;:::-;19167:18;;19050:12;;;;19205;;;;19017:210;;;19282:18;;;19276:25;19246:5;;-1:-1:-1;19276:25:96;;-1:-1:-1;;;19313:16:96;;;19310:36;;;19342:1;19339;19332:12;19310:36;;19365:74;19431:7;19420:8;19409:9;19405:24;19365:74;:::i;:::-;19355:84;;;18186:1259;;;;;:::o;19450:127::-;19511:10;19506:3;19502:20;19499:1;19492:31;19542:4;19539:1;19532:15;19566:4;19563:1;19556:15",
    "linkReferences": {},
    "immutableReferences": {
      "29201": [
        {
          "start": 1124,
          "length": 32
        },
        {
          "start": 2818,
          "length": 32
        },
        {
          "start": 3000,
          "length": 32
        },
        {
          "start": 3638,
          "length": 32
        }
      ],
      "29766": [
        {
          "start": 695,
          "length": 32
        },
        {
          "start": 1729,
          "length": 32
        },
        {
          "start": 2469,
          "length": 32
        },
        {
          "start": 4127,
          "length": 32
        },
        {
          "start": 5812,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DELEGATION_TYPEHASH()": "e7a324dc",
    "DOMAIN_SEPARATOR()": "3644e515",
    "DOMAIN_TYPEHASH()": "20606b70",
    "decreaseDelegatedShares(address,address[],uint256[])": "5820491c",
    "delegateTo(address)": "ac637c7a",
    "delegateToBySignature(address,address,uint256,bytes32,bytes32)": "b41b394b",
    "delegatedTo(address)": "65da1264",
    "getOperatorRewardAddress(address)": "ee4ea66a",
    "increaseDelegatedShares(address,address,uint256)": "28a573ae",
    "initialize(address,address)": "485cc955",
    "investmentManager()": "4b31bb10",
    "isDelegated(address)": "3e28391d",
    "isNotDelegated(address)": "1d3696b7",
    "isOperator(address)": "6d70f7ae",
    "nonces(address)": "7ecebe00",
    "operatorReceiverRewardAddress(address)": "8b8209df",
    "operatorShares(address,address)": "778e55f3",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "permissionManager()": "cc7a2049",
    "registerAsOperator(address)": "bd44e403",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "undelegate(address)": "da8be864",
    "unpause(uint256)": "fabc1cbc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"_investmentManager\",\"type\":\"address\"},{\"internalType\":\"contract IRegistryPermission\",\"name\":\"_permissionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IInvestmentStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"name\":\"delegateToBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentManager\",\"outputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isNotDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorReceiverRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionManager\",\"outputs\":[{\"internalType\":\"contract IRegistryPermission\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardReceiveAddress\",\"type\":\"address\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"decreaseDelegatedShares(address,address[],uint256[])\":{\"details\":\"Callable only by the InvestmentManager\"},\"delegateTo(address)\":{\"params\":{\"operator\":\"is the operator to whom staker (msg.sender) is delegating its assets\"}},\"delegateToBySignature(address,address,uint256,bytes32,bytes32)\":{\"details\":\"requires that r, vs are a valid ECSDA signature from `staker` indicating their intention for this action\"},\"increaseDelegatedShares(address,address,uint256)\":{\"details\":\"Callable only by the InvestmentManager\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerAsOperator(address)\":{\"params\":{\"rewardReceiveAddress\":\"another EOA address for receive from mantle network\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"undelegate(address)\":{\"details\":\"Should only ever be called in the event that the `staker` has no active deposits in EigenLayer.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}}},\"title\":\"The primary delegation contract for EigenLayr.\",\"version\":1},\"userdoc\":{\"events\":{\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_SEPARATOR()\":{\"notice\":\"EIP-712 Domain separator\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"decreaseDelegatedShares(address,address[],uint256[])\":{\"notice\":\"Decreases the `staker`'s delegated shares in each entry of `strategies` by its respective `shares[i]`, typically called when the staker withdraws from EigenLayr\"},\"delegateTo(address)\":{\"notice\":\"This will be called by a staker to delegate its assets to some operator.\"},\"delegateToBySignature(address,address,uint256,bytes32,bytes32)\":{\"notice\":\"Delegates from `staker` to `operator`.\"},\"delegatedTo(address)\":{\"notice\":\"returns the address of the operator that `staker` is delegated to.\"},\"getOperatorRewardAddress(address)\":{\"notice\":\"returns the eoa address of the `operator`, which may mediate their interactions with stakers who delegate to them.\"},\"increaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Increases the `staker`'s delegated shares in `strategy` by `shares, typically called when the staker has further deposits into EigenLayr\"},\"investmentManager()\":{\"notice\":\"The InvestmentManager contract for EigenLayr\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isNotDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` is *not* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns if an operator can be delegated to, i.e. it has called `registerAsOperator`.\"},\"operatorShares(address,address)\":{\"notice\":\"returns the total number of shares in `strategy` that are delegated to `operator`.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionManager()\":{\"notice\":\"contract used for manage operator register permission\"},\"registerAsOperator(address)\":{\"notice\":\"This will be called by an operator to register itself as an operator that stakers can choose to delegate to.\"},\"undelegate(address)\":{\"notice\":\"Undelegates `staker` from the operator who they are delegated to.Callable only by the InvestmentManager\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract.\"}},\"notice\":\"This is the contract for delegation in EigenLayr. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayr - allowing new operators to provide a another eoa address, which may mediate their interactions with stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice - enabling a staker to undelegate its assets from an operator (performed as part of the withdrawal process, initiated through the InvestmentManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/EigenLayrDelegation.sol\":\"EigenLayrDelegation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4e0b487da265a218cb3949e1363614362202c92fb68f95aea906e993d76c6278\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbd76a5b7e4503db1319d8bfb230e50787b5c993764442815bb1d6da94cd721e\",\"dweb:/ipfs/QmUpNH6vJ4a6a8YFYy5SR6va8KqT7mX2QCtT1haBQHYPA8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe758e38e94b1af29f4e8907124553bea067fdc19e76ba211ddba9b7ca75785ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b49649a6c9b123fc1948565ed6a03b44eebbf84631fce80901db05629c80107\",\"dweb:/ipfs/QmZ3GRymzdgTupEwtYyGANhVWeQ8H6sqVKi7xGP7HXkwEn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xbe41d06efd6f3de49ca2d31da1996e367ff8728f1a11d7255bcd29ff997c8698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3c94d0f4dddad6147aed4a0df9524f6be529f7815c1029cabf9c9245cb4adf4\",\"dweb:/ipfs/QmW8Dgv6y5D2ZiNU6G4i8qifDkPyYtF7e7PPi3j9oK8ygm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0\",\"dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x34d5fd3e73f17311fc4ae0ec192c59d5e46d585045017b41a78b8c75ab387d9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11224aad5e5e78cda2e0e8456e27121ece04e725a24d63568fa56f100dc47fb3\",\"dweb:/ipfs/QmWrpMpotNwYyWcZJUuRcwas9nuy7KYsFTQ1EELUdWQRww\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"src/contracts/core/EigenLayrDelegation.sol\":{\"keccak256\":\"0x978897da9872d064fca4e0d9a3dfb9ae45307398d579ddb529ddf422f9714657\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://269496038010d6b42f949206d388d177b79a5f1f711e460869d095ff074e60b6\",\"dweb:/ipfs/QmPytBkymcwqywFTJ3HsCHjJGdEAVfjihd3mXrzSZbhgX6\"]},\"src/contracts/core/EigenLayrDelegationStorage.sol\":{\"keccak256\":\"0xa465771a204d2226bedec6ba83ea7cafcb5851caf7b1fdf274070d411838a637\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://db4829529f094a305a5064a28aebc6936bfd997e82230aea990b4e7a2830642f\",\"dweb:/ipfs/QmW8hc8uNEUTWLZteUn88n2LGe6r6pQHELzBBB3M2hLoia\"]},\"src/contracts/interfaces/IEigenLayrDelegation.sol\":{\"keccak256\":\"0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21\",\"dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5\"]},\"src/contracts/interfaces/IInvestmentManager.sol\":{\"keccak256\":\"0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34\",\"dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw\"]},\"src/contracts/interfaces/IInvestmentStrategy.sol\":{\"keccak256\":\"0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52\",\"dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c\",\"dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3\"]},\"src/contracts/interfaces/IRegistryPermission.sol\":{\"keccak256\":\"0x5a19ffe942fa540af5b4989590e7378ebbdfec7234a8e64b70d15dd57b4beed3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbfd03c6d589513cdfcf11814461d28fc5af5c705b48ac7507073cd8f8eacc2b\",\"dweb:/ipfs/QmddUJh6nU7twBfYheBXX5rVHHHkgNJrrcEPW5QCKGZcyQ\"]},\"src/contracts/interfaces/IServiceManager.sol\":{\"keccak256\":\"0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2\",\"dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32\",\"dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "_investmentManager",
              "type": "address"
            },
            {
              "internalType": "contract IRegistryPermission",
              "name": "_permissionManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DELEGATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IInvestmentStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "vs",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateToBySignature"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegatedTo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorRewardAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "investmentManager",
          "outputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isNotDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorReceiverRewardAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionManager",
          "outputs": [
            {
              "internalType": "contract IRegistryPermission",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rewardReceiveAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "decreaseDelegatedShares(address,address[],uint256[])": {
            "details": "Callable only by the InvestmentManager"
          },
          "delegateTo(address)": {
            "params": {
              "operator": "is the operator to whom staker (msg.sender) is delegating its assets"
            }
          },
          "delegateToBySignature(address,address,uint256,bytes32,bytes32)": {
            "details": "requires that r, vs are a valid ECSDA signature from `staker` indicating their intention for this action"
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "details": "Callable only by the InvestmentManager"
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerAsOperator(address)": {
            "params": {
              "rewardReceiveAddress": "another EOA address for receive from mantle network"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "undelegate(address)": {
            "details": "Should only ever be called in the event that the `staker` has no active deposits in EigenLayer."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DELEGATION_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the delegation struct used by the contract"
          },
          "DOMAIN_SEPARATOR()": {
            "notice": "EIP-712 Domain separator"
          },
          "DOMAIN_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the contract's domain"
          },
          "decreaseDelegatedShares(address,address[],uint256[])": {
            "notice": "Decreases the `staker`'s delegated shares in each entry of `strategies` by its respective `shares[i]`, typically called when the staker withdraws from EigenLayr"
          },
          "delegateTo(address)": {
            "notice": "This will be called by a staker to delegate its assets to some operator."
          },
          "delegateToBySignature(address,address,uint256,bytes32,bytes32)": {
            "notice": "Delegates from `staker` to `operator`."
          },
          "delegatedTo(address)": {
            "notice": "returns the address of the operator that `staker` is delegated to."
          },
          "getOperatorRewardAddress(address)": {
            "notice": "returns the eoa address of the `operator`, which may mediate their interactions with stakers who delegate to them."
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "notice": "Increases the `staker`'s delegated shares in `strategy` by `shares, typically called when the staker has further deposits into EigenLayr"
          },
          "investmentManager()": {
            "notice": "The InvestmentManager contract for EigenLayr"
          },
          "isDelegated(address)": {
            "notice": "Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
          },
          "isNotDelegated(address)": {
            "notice": "Returns 'true' if `staker` is *not* actively delegated, and 'false' otherwise."
          },
          "isOperator(address)": {
            "notice": "Returns if an operator can be delegated to, i.e. it has called `registerAsOperator`."
          },
          "operatorShares(address,address)": {
            "notice": "returns the total number of shares in `strategy` that are delegated to `operator`."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionManager()": {
            "notice": "contract used for manage operator register permission"
          },
          "registerAsOperator(address)": {
            "notice": "This will be called by an operator to register itself as an operator that stakers can choose to delegate to."
          },
          "undelegate(address)": {
            "notice": "Undelegates `staker` from the operator who they are delegated to.Callable only by the InvestmentManager"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/EigenLayrDelegation.sol": "EigenLayrDelegation"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4e0b487da265a218cb3949e1363614362202c92fb68f95aea906e993d76c6278",
        "urls": [
          "bzz-raw://dbd76a5b7e4503db1319d8bfb230e50787b5c993764442815bb1d6da94cd721e",
          "dweb:/ipfs/QmUpNH6vJ4a6a8YFYy5SR6va8KqT7mX2QCtT1haBQHYPA8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe758e38e94b1af29f4e8907124553bea067fdc19e76ba211ddba9b7ca75785ce",
        "urls": [
          "bzz-raw://5b49649a6c9b123fc1948565ed6a03b44eebbf84631fce80901db05629c80107",
          "dweb:/ipfs/QmZ3GRymzdgTupEwtYyGANhVWeQ8H6sqVKi7xGP7HXkwEn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xbe41d06efd6f3de49ca2d31da1996e367ff8728f1a11d7255bcd29ff997c8698",
        "urls": [
          "bzz-raw://f3c94d0f4dddad6147aed4a0df9524f6be529f7815c1029cabf9c9245cb4adf4",
          "dweb:/ipfs/QmW8Dgv6y5D2ZiNU6G4i8qifDkPyYtF7e7PPi3j9oK8ygm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e",
        "urls": [
          "bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0",
          "dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x34d5fd3e73f17311fc4ae0ec192c59d5e46d585045017b41a78b8c75ab387d9d",
        "urls": [
          "bzz-raw://11224aad5e5e78cda2e0e8456e27121ece04e725a24d63568fa56f100dc47fb3",
          "dweb:/ipfs/QmWrpMpotNwYyWcZJUuRcwas9nuy7KYsFTQ1EELUdWQRww"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "src/contracts/core/EigenLayrDelegation.sol": {
        "keccak256": "0x978897da9872d064fca4e0d9a3dfb9ae45307398d579ddb529ddf422f9714657",
        "urls": [
          "bzz-raw://269496038010d6b42f949206d388d177b79a5f1f711e460869d095ff074e60b6",
          "dweb:/ipfs/QmPytBkymcwqywFTJ3HsCHjJGdEAVfjihd3mXrzSZbhgX6"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/core/EigenLayrDelegationStorage.sol": {
        "keccak256": "0xa465771a204d2226bedec6ba83ea7cafcb5851caf7b1fdf274070d411838a637",
        "urls": [
          "bzz-raw://db4829529f094a305a5064a28aebc6936bfd997e82230aea990b4e7a2830642f",
          "dweb:/ipfs/QmW8hc8uNEUTWLZteUn88n2LGe6r6pQHELzBBB3M2hLoia"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IEigenLayrDelegation.sol": {
        "keccak256": "0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e",
        "urls": [
          "bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21",
          "dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IInvestmentManager.sol": {
        "keccak256": "0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100",
        "urls": [
          "bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34",
          "dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IInvestmentStrategy.sol": {
        "keccak256": "0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb",
        "urls": [
          "bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52",
          "dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975",
        "urls": [
          "bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c",
          "dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IRegistryPermission.sol": {
        "keccak256": "0x5a19ffe942fa540af5b4989590e7378ebbdfec7234a8e64b70d15dd57b4beed3",
        "urls": [
          "bzz-raw://dbfd03c6d589513cdfcf11814461d28fc5af5c705b48ac7507073cd8f8eacc2b",
          "dweb:/ipfs/QmddUJh6nU7twBfYheBXX5rVHHHkgNJrrcEPW5QCKGZcyQ"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IServiceManager.sol": {
        "keccak256": "0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4",
        "urls": [
          "bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2",
          "dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04",
        "urls": [
          "bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32",
          "dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/core/EigenLayrDelegation.sol",
    "id": 29737,
    "exportedSymbols": {
      "AddressUpgradeable": [
        23638
      ],
      "Context": [
        26133
      ],
      "ContextUpgradeable": [
        23680
      ],
      "ECDSA": [
        26729
      ],
      "EigenLayrDelegation": [
        29736
      ],
      "EigenLayrDelegationStorage": [
        29797
      ],
      "IERC20": [
        25366
      ],
      "IEigenLayrDelegation": [
        30977
      ],
      "IInvestmentManager": [
        31085
      ],
      "IInvestmentStrategy": [
        31179
      ],
      "IPauserRegistry": [
        31195
      ],
      "IRegistryPermission": [
        31431
      ],
      "IServiceManager": [
        31461
      ],
      "Initializable": [
        23335
      ],
      "Math": [
        27606
      ],
      "Ownable": [
        23793
      ],
      "OwnableUpgradeable": [
        23184
      ],
      "Pausable": [
        37670
      ],
      "Strings": [
        26368
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9765:44",
    "nodes": [
      {
        "id": 29177,
        "nodeType": "PragmaDirective",
        "src": "39:23:44",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 29178,
        "nodeType": "ImportDirective",
        "src": "64:56:44",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29737,
        "sourceUnit": 25367,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29179,
        "nodeType": "ImportDirective",
        "src": "121:52:44",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29737,
        "sourceUnit": 23794,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29180,
        "nodeType": "ImportDirective",
        "src": "174:72:44",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29737,
        "sourceUnit": 23185,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29181,
        "nodeType": "ImportDirective",
        "src": "247:72:44",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29737,
        "sourceUnit": 23336,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29182,
        "nodeType": "ImportDirective",
        "src": "320:62:44",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29737,
        "sourceUnit": 26730,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29183,
        "nodeType": "ImportDirective",
        "src": "383:42:44",
        "nodes": [],
        "absolutePath": "src/contracts/core/EigenLayrDelegationStorage.sol",
        "file": "./EigenLayrDelegationStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29737,
        "sourceUnit": 29798,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29184,
        "nodeType": "ImportDirective",
        "src": "426:37:44",
        "nodes": [],
        "absolutePath": "src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29737,
        "sourceUnit": 37671,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29185,
        "nodeType": "ImportDirective",
        "src": "464:47:44",
        "nodes": [],
        "absolutePath": "src/contracts/interfaces/IRegistryPermission.sol",
        "file": "../interfaces/IRegistryPermission.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29737,
        "sourceUnit": 31432,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29736,
        "nodeType": "ContractDefinition",
        "src": "1136:8667:44",
        "nodes": [
          {
            "id": 29197,
            "nodeType": "VariableDeclaration",
            "src": "1246:49:44",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_NEW_DELEGATION",
            "nameLocation": "1270:21:44",
            "scope": 29736,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 29195,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1246:5:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 29196,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1294:1:44",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 29201,
            "nodeType": "VariableDeclaration",
            "src": "1372:54:44",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 29198,
              "nodeType": "StructuredDocumentation",
              "src": "1302:65:44",
              "text": "@notice contract used for manage operator register permission"
            },
            "functionSelector": "cc7a2049",
            "mutability": "immutable",
            "name": "permissionManager",
            "nameLocation": "1409:17:44",
            "scope": 29736,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
              "typeString": "contract IRegistryPermission"
            },
            "typeName": {
              "id": 29200,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29199,
                "name": "IRegistryPermission",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31431,
                "src": "1372:19:44"
              },
              "referencedDeclaration": 31431,
              "src": "1372:19:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                "typeString": "contract IRegistryPermission"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29217,
            "nodeType": "ModifierDefinition",
            "src": "1539:135:44",
            "nodes": [],
            "body": {
              "id": 29216,
              "nodeType": "Block",
              "src": "1572:102:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 29205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1590:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1590:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 29209,
                              "name": "investmentManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29766,
                              "src": "1612:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                                "typeString": "contract IInvestmentManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                                "typeString": "contract IInvestmentManager"
                              }
                            ],
                            "id": 29208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1604:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29207,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1604:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1604:26:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1590:40:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79496e766573746d656e744d616e61676572",
                        "id": 29212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1632:23:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cd7fb14ed625180fca63e29defc0cca46b08e783d2f359fd57c9e306d8e0878",
                          "typeString": "literal_string \"onlyInvestmentManager\""
                        },
                        "value": "onlyInvestmentManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cd7fb14ed625180fca63e29defc0cca46b08e783d2f359fd57c9e306d8e0878",
                          "typeString": "literal_string \"onlyInvestmentManager\""
                        }
                      ],
                      "id": 29204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1582:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1582:74:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29214,
                  "nodeType": "ExpressionStatement",
                  "src": "1582:74:44"
                },
                {
                  "id": 29215,
                  "nodeType": "PlaceholderStatement",
                  "src": "1666:1:44"
                }
              ]
            },
            "documentation": {
              "id": 29202,
              "nodeType": "StructuredDocumentation",
              "src": "1433:101:44",
              "text": "@notice Simple permission for functions that are only callable by the InvestmentManager contract."
            },
            "name": "onlyInvestmentManager",
            "nameLocation": "1548:21:44",
            "parameters": {
              "id": 29203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1569:2:44"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 29237,
            "nodeType": "FunctionDefinition",
            "src": "1710:238:44",
            "nodes": [],
            "body": {
              "id": 29236,
              "nodeType": "Block",
              "src": "1861:87:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 29231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29229,
                      "name": "permissionManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29201,
                      "src": "1871:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                        "typeString": "contract IRegistryPermission"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29230,
                      "name": "_permissionManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29223,
                      "src": "1891:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                        "typeString": "contract IRegistryPermission"
                      }
                    },
                    "src": "1871:38:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                      "typeString": "contract IRegistryPermission"
                    }
                  },
                  "id": 29232,
                  "nodeType": "ExpressionStatement",
                  "src": "1871:38:44"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 29233,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23334,
                      "src": "1919:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 29234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:22:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29235,
                  "nodeType": "ExpressionStatement",
                  "src": "1919:22:44"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 29226,
                    "name": "_investmentManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29220,
                    "src": "1837:18:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                      "typeString": "contract IInvestmentManager"
                    }
                  }
                ],
                "id": 29227,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 29225,
                  "name": "EigenLayrDelegationStorage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29797,
                  "src": "1810:26:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "1810:46:44"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29220,
                  "mutability": "mutable",
                  "name": "_investmentManager",
                  "nameLocation": "1741:18:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29237,
                  "src": "1722:37:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                    "typeString": "contract IInvestmentManager"
                  },
                  "typeName": {
                    "id": 29219,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29218,
                      "name": "IInvestmentManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31085,
                      "src": "1722:18:44"
                    },
                    "referencedDeclaration": 31085,
                    "src": "1722:18:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29223,
                  "mutability": "mutable",
                  "name": "_permissionManager",
                  "nameLocation": "1782:18:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29237,
                  "src": "1762:38:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                    "typeString": "contract IRegistryPermission"
                  },
                  "typeName": {
                    "id": 29222,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29221,
                      "name": "IRegistryPermission",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31431,
                      "src": "1762:19:44"
                    },
                    "referencedDeclaration": 31431,
                    "src": "1762:19:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                      "typeString": "contract IRegistryPermission"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:80:44"
            },
            "returnParameters": {
              "id": 29228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1861:0:44"
            },
            "scope": 29736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29276,
            "nodeType": "FunctionDefinition",
            "src": "1954:339:44",
            "nodes": [],
            "body": {
              "id": 29275,
              "nodeType": "Block",
              "src": "2070:223:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29248,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29240,
                        "src": "2098:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$31195",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 29249,
                        "name": "UNPAUSE_ALL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37449,
                        "src": "2115:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$31195",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 29247,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37573,
                      "src": "2080:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$31195_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 29250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:47:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29251,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:47:44"
                },
                {
                  "expression": {
                    "id": 29269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29252,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29762,
                      "src": "2137:16:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 29256,
                              "name": "DOMAIN_TYPEHASH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29753,
                              "src": "2177:15:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "456967656e4c617972",
                                  "id": 29259,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2200:11:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b07a8ec0e7c0f3d2ba4c3aecac5f9da67088461726d8a9c93842eda707acf41e",
                                    "typeString": "literal_string \"EigenLayr\""
                                  },
                                  "value": "EigenLayr"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_b07a8ec0e7c0f3d2ba4c3aecac5f9da67088461726d8a9c93842eda707acf41e",
                                    "typeString": "literal_string \"EigenLayr\""
                                  }
                                ],
                                "id": 29258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2194:5:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 29257,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2194:5:44",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2194:18:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 29261,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2214:5:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 29262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "chainid",
                              "nodeType": "MemberAccess",
                              "src": "2214:13:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 29265,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2237:4:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_EigenLayrDelegation_$29736",
                                    "typeString": "contract EigenLayrDelegation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_EigenLayrDelegation_$29736",
                                    "typeString": "contract EigenLayrDelegation"
                                  }
                                ],
                                "id": 29264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2229:7:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 29263,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2229:7:44",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2229:13:44",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 29254,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2166:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 29255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "2166:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 29267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2166:77:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 29253,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2156:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 29268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2156:88:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2137:107:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 29270,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:107:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29272,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29242,
                        "src": "2273:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29271,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23178,
                      "src": "2254:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 29273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:32:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29274,
                  "nodeType": "ExpressionStatement",
                  "src": "2254:32:44"
                }
              ]
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29245,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29244,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23255,
                  "src": "2054:11:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2054:11:44"
              }
            ],
            "name": "initialize",
            "nameLocation": "1963:10:44",
            "parameters": {
              "id": 29243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29240,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "1990:15:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29276,
                  "src": "1974:31:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$31195",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 29239,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29238,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31195,
                      "src": "1974:15:44"
                    },
                    "referencedDeclaration": 31195,
                    "src": "1974:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$31195",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29242,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "2015:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29276,
                  "src": "2007:20:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1973:55:44"
            },
            "returnParameters": {
              "id": 29246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:0:44"
            },
            "scope": 29736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29321,
            "nodeType": "FunctionDefinition",
            "src": "2553:678:44",
            "nodes": [],
            "body": {
              "id": 29320,
              "nodeType": "Block",
              "src": "2620:611:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 29289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 29285,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2699:3:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 29286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2699:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 29283,
                              "name": "permissionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29201,
                              "src": "2651:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 29284,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOperatorRegisterPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31409,
                            "src": "2651:47:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 29287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2651:59:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 29288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2714:4:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2651:67:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e726567697374657241734f70657261746f723a204f70657261746f7220646f6573206e6f74207065726d697373696f6e20746f207265676973746572206173206f70657261746f72",
                        "id": 29290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2732:94:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c857db208ecaf46d9e32739ce9eaf380d447a7d14d7f11aeac9c84a6e2494462",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: Operator does not permission to register as operator\""
                        },
                        "value": "EigenLayrDelegation.registerAsOperator: Operator does not permission to register as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c857db208ecaf46d9e32739ce9eaf380d447a7d14d7f11aeac9c84a6e2494462",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: Operator does not permission to register as operator\""
                        }
                      ],
                      "id": 29282,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2630:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2630:206:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29292,
                  "nodeType": "ExpressionStatement",
                  "src": "2630:206:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 29294,
                            "name": "operatorReceiverRewardAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29777,
                            "src": "2867:29:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 29297,
                          "indexExpression": {
                            "expression": {
                              "id": 29295,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2897:3:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 29296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2897:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2867:41:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 29300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2920:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 29299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2912:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29298,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2912:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2912:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2867:55:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e726567697374657241734f70657261746f723a206f70657261746f722068617320616c72656164792072656769737465726564",
                        "id": 29303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2936:73:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_707de6bdd662fd924936555586832cd7e1169328bee03a67ddede80803a5d4a7",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: operator has already registered\""
                        },
                        "value": "EigenLayrDelegation.registerAsOperator: operator has already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_707de6bdd662fd924936555586832cd7e1169328bee03a67ddede80803a5d4a7",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: operator has already registered\""
                        }
                      ],
                      "id": 29293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2846:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:173:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29305,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:173:44"
                },
                {
                  "expression": {
                    "id": 29311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29306,
                        "name": "operatorReceiverRewardAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29777,
                        "src": "3117:29:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 29309,
                      "indexExpression": {
                        "expression": {
                          "id": 29307,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3147:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3147:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3117:41:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29310,
                      "name": "rewardReceiveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29279,
                      "src": "3161:20:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3117:64:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29312,
                  "nodeType": "ExpressionStatement",
                  "src": "3117:64:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29314,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3201:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3201:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 29316,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3213:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3213:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29313,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29679,
                      "src": "3191:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 29318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3191:33:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29319,
                  "nodeType": "ExpressionStatement",
                  "src": "3191:33:44"
                }
              ]
            },
            "baseFunctions": [
              30875
            ],
            "documentation": {
              "id": 29277,
              "nodeType": "StructuredDocumentation",
              "src": "2325:223:44",
              "text": " @notice This will be called by an operator to register itself as an operator that stakers can choose to delegate to.\n @param  rewardReceiveAddress another EOA address for receive from mantle network"
            },
            "functionSelector": "bd44e403",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsOperator",
            "nameLocation": "2562:18:44",
            "parameters": {
              "id": 29280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29279,
                  "mutability": "mutable",
                  "name": "rewardReceiveAddress",
                  "nameLocation": "2589:20:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29321,
                  "src": "2581:28:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2580:30:44"
            },
            "returnParameters": {
              "id": 29281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2620:0:44"
            },
            "scope": 29736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29345,
            "nodeType": "FunctionDefinition",
            "src": "3435:296:44",
            "nodes": [],
            "body": {
              "id": 29344,
              "nodeType": "Block",
              "src": "3482:249:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 29334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 29330,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3554:3:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 29331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3554:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 29328,
                              "name": "permissionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29201,
                              "src": "3513:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 29329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getDelegatorPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31430,
                            "src": "3513:40:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 29332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3513:52:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 29333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3569:4:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3513:60:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e744d616e616765722e6465706f736974496e746f53747261746567793a2064656c656761746f7220686173206e6f74207065726d697373696f6e20657865632064656c656761746520746f",
                        "id": 29335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3587:86:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        },
                        "value": "InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        }
                      ],
                      "id": 29327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3492:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3492:191:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29337,
                  "nodeType": "ExpressionStatement",
                  "src": "3492:191:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29339,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3703:3:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3703:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29341,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29324,
                        "src": "3715:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29338,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29679,
                      "src": "3693:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 29342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:31:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29343,
                  "nodeType": "ExpressionStatement",
                  "src": "3693:31:44"
                }
              ]
            },
            "baseFunctions": [
              30881
            ],
            "documentation": {
              "id": 29322,
              "nodeType": "StructuredDocumentation",
              "src": "3237:193:44",
              "text": "  @notice This will be called by a staker to delegate its assets to some operator.\n  @param operator is the operator to whom staker (msg.sender) is delegating its assets"
            },
            "functionSelector": "ac637c7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateTo",
            "nameLocation": "3444:10:44",
            "parameters": {
              "id": 29325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29324,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3463:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29345,
                  "src": "3455:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3454:18:44"
            },
            "returnParameters": {
              "id": 29326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3482:0:44"
            },
            "scope": 29736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29431,
            "nodeType": "FunctionDefinition",
            "src": "3924:964:44",
            "nodes": [],
            "body": {
              "id": 29430,
              "nodeType": "Block",
              "src": "4049:839:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 29366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 29362,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4121:3:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 29363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4121:10:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 29360,
                              "name": "permissionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29201,
                              "src": "4080:17:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 29361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getDelegatorPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31430,
                            "src": "4080:40:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 29364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4080:52:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 29365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4136:4:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4080:60:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e744d616e616765722e6465706f736974496e746f53747261746567793a2064656c656761746f7220686173206e6f74207065726d697373696f6e20657865632064656c656761746520746f",
                        "id": 29367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4154:86:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        },
                        "value": "InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        }
                      ],
                      "id": 29359,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4059:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:191:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29369,
                  "nodeType": "ExpressionStatement",
                  "src": "4059:191:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 29378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 29373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 29371,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29352,
                            "src": "4268:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 29372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4278:1:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4268:11:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 29377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 29374,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29352,
                            "src": "4283:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 29375,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4293:5:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 29376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4293:15:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4283:25:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4268:40:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "64656c65676174696f6e207369676e61747572652065787069726564",
                        "id": 29379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4310:30:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5723ff926e7a17485b1ef32885df3f570581df71cfe67ad788f26084f37a3ff9",
                          "typeString": "literal_string \"delegation signature expired\""
                        },
                        "value": "delegation signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5723ff926e7a17485b1ef32885df3f570581df71cfe67ad788f26084f37a3ff9",
                          "typeString": "literal_string \"delegation signature expired\""
                        }
                      ],
                      "id": 29370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4260:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4260:81:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29381,
                  "nodeType": "ExpressionStatement",
                  "src": "4260:81:44"
                },
                {
                  "assignments": [
                    29383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29383,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "4425:10:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 29430,
                      "src": "4417:18:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 29382,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4417:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29397,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29387,
                            "name": "DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29759,
                            "src": "4459:19:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 29388,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29348,
                            "src": "4480:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 29389,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29350,
                            "src": "4488:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 29393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4498:16:44",
                            "subExpression": {
                              "baseExpression": {
                                "id": 29390,
                                "name": "nonces",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29785,
                                "src": "4498:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 29392,
                              "indexExpression": {
                                "id": 29391,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29348,
                                "src": "4505:6:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "4498:14:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 29394,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29352,
                            "src": "4516:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 29385,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4448:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 29386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4448:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 29395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4448:75:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 29384,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4438:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 29396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4438:86:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4417:107:44"
                },
                {
                  "assignments": [
                    29399
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29399,
                      "mutability": "mutable",
                      "name": "digestHash",
                      "nameLocation": "4542:10:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 29430,
                      "src": "4534:18:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 29398,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4534:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29408,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 29403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4582:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 29404,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29762,
                            "src": "4594:16:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 29405,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29383,
                            "src": "4612:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 29401,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4565:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 29402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4565:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 29406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4565:58:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 29400,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4555:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 29407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4555:69:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4534:90:44"
                },
                {
                  "assignments": [
                    29410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29410,
                      "mutability": "mutable",
                      "name": "recoveredAddress",
                      "nameLocation": "4681:16:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 29430,
                      "src": "4673:24:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29409,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4673:7:44",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29417,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29413,
                        "name": "digestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29399,
                        "src": "4714:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 29414,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29354,
                        "src": "4726:1:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 29415,
                        "name": "vs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29356,
                        "src": "4729:2:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 29411,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26729,
                        "src": "4700:5:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$26729_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 29412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26572,
                      "src": "4700:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 29416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4700:32:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4673:59:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29419,
                          "name": "recoveredAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29410,
                          "src": "4751:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 29420,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29348,
                          "src": "4771:6:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4751:26:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e64656c6567617465546f42795369676e61747572653a20736967206e6f742066726f6d207374616b6572",
                        "id": 29422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4779:64:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdbf1f36a92f7f27a6882acd331e2541d7c7e084418a282ad266d51ce1c3ccf2",
                          "typeString": "literal_string \"EigenLayrDelegation.delegateToBySignature: sig not from staker\""
                        },
                        "value": "EigenLayrDelegation.delegateToBySignature: sig not from staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdbf1f36a92f7f27a6882acd331e2541d7c7e084418a282ad266d51ce1c3ccf2",
                          "typeString": "literal_string \"EigenLayrDelegation.delegateToBySignature: sig not from staker\""
                        }
                      ],
                      "id": 29418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4743:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4743:101:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29424,
                  "nodeType": "ExpressionStatement",
                  "src": "4743:101:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29426,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29348,
                        "src": "4864:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29427,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29350,
                        "src": "4872:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29425,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29679,
                      "src": "4854:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 29428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4854:27:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29429,
                  "nodeType": "ExpressionStatement",
                  "src": "4854:27:44"
                }
              ]
            },
            "baseFunctions": [
              30895
            ],
            "documentation": {
              "id": 29346,
              "nodeType": "StructuredDocumentation",
              "src": "3737:182:44",
              "text": " @notice Delegates from `staker` to `operator`.\n @dev requires that r, vs are a valid ECSDA signature from `staker` indicating their intention for this action"
            },
            "functionSelector": "b41b394b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateToBySignature",
            "nameLocation": "3933:21:44",
            "parameters": {
              "id": 29357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29348,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "3963:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29431,
                  "src": "3955:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3955:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29350,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3979:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29431,
                  "src": "3971:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3971:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29352,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "3997:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29431,
                  "src": "3989:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29354,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "4013:1:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29431,
                  "src": "4005:9:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29353,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4005:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29356,
                  "mutability": "mutable",
                  "name": "vs",
                  "nameLocation": "4024:2:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29431,
                  "src": "4016:10:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29355,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4016:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3954:73:44"
            },
            "returnParameters": {
              "id": 29358,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4049:0:44"
            },
            "scope": 29736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29457,
            "nodeType": "FunctionDefinition",
            "src": "5153:233:44",
            "nodes": [],
            "body": {
              "id": 29456,
              "nodeType": "Block",
              "src": "5220:166:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5238:19:44",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 29441,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29434,
                              "src": "5250:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 29440,
                            "name": "isOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29735,
                            "src": "5239:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 29442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5239:18:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e756e64656c65676174653a206f70657261746f72732063616e6e6f7420756e64656c65676174652066726f6d207468656d73656c766573",
                        "id": 29444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5259:77:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f680da10f74b9eb5c16c35bd020ea3f2f0d1c05c7dc0fd53612d7993ca300be8",
                          "typeString": "literal_string \"EigenLayrDelegation.undelegate: operators cannot undelegate from themselves\""
                        },
                        "value": "EigenLayrDelegation.undelegate: operators cannot undelegate from themselves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f680da10f74b9eb5c16c35bd020ea3f2f0d1c05c7dc0fd53612d7993ca300be8",
                          "typeString": "literal_string \"EigenLayrDelegation.undelegate: operators cannot undelegate from themselves\""
                        }
                      ],
                      "id": 29439,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5230:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5230:107:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29446,
                  "nodeType": "ExpressionStatement",
                  "src": "5230:107:44"
                },
                {
                  "expression": {
                    "id": 29454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29447,
                        "name": "delegatedTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29781,
                        "src": "5347:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 29449,
                      "indexExpression": {
                        "id": 29448,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29434,
                        "src": "5359:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5347:19:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 29452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5377:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 29451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5369:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 29450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5369:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 29453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5369:10:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5347:32:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29455,
                  "nodeType": "ExpressionStatement",
                  "src": "5347:32:44"
                }
              ]
            },
            "baseFunctions": [
              30901
            ],
            "documentation": {
              "id": 29432,
              "nodeType": "StructuredDocumentation",
              "src": "4894:254:44",
              "text": " @notice Undelegates `staker` from the operator who they are delegated to.\n @notice Callable only by the InvestmentManager\n @dev Should only ever be called in the event that the `staker` has no active deposits in EigenLayer."
            },
            "functionSelector": "da8be864",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29437,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29436,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29217,
                  "src": "5198:21:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "5198:21:44"
              }
            ],
            "name": "undelegate",
            "nameLocation": "5162:10:44",
            "parameters": {
              "id": 29435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29434,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "5181:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29457,
                  "src": "5173:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5173:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5172:16:44"
            },
            "returnParameters": {
              "id": 29438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5220:0:44"
            },
            "scope": 29736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29470,
            "nodeType": "FunctionDefinition",
            "src": "5523:146:44",
            "nodes": [],
            "body": {
              "id": 29469,
              "nodeType": "Block",
              "src": "5606:63:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 29465,
                      "name": "operatorReceiverRewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29777,
                      "src": "5623:29:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 29467,
                    "indexExpression": {
                      "id": 29466,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29460,
                      "src": "5653:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5623:39:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 29464,
                  "id": 29468,
                  "nodeType": "Return",
                  "src": "5616:46:44"
                }
              ]
            },
            "baseFunctions": [
              30917
            ],
            "documentation": {
              "id": 29458,
              "nodeType": "StructuredDocumentation",
              "src": "5392:126:44",
              "text": "@notice returns the eoa address of the `operator`, which may mediate their interactions with stakers who delegate to them."
            },
            "functionSelector": "ee4ea66a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOperatorRewardAddress",
            "nameLocation": "5532:24:44",
            "parameters": {
              "id": 29461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29460,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5565:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29470,
                  "src": "5557:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29459,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5557:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5556:18:44"
            },
            "returnParameters": {
              "id": 29464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29470,
                  "src": "5598:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5598:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5597:9:44"
            },
            "scope": 29736,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29538,
            "nodeType": "FunctionDefinition",
            "src": "5894:649:44",
            "nodes": [],
            "body": {
              "id": 29537,
              "nodeType": "Block",
              "src": "6040:503:44",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 29484,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29473,
                        "src": "6118:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29483,
                      "name": "isDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29698,
                      "src": "6106:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 29485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6106:19:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29536,
                  "nodeType": "IfStatement",
                  "src": "6102:435:44",
                  "trueBody": {
                    "id": 29535,
                    "nodeType": "Block",
                    "src": "6127:410:44",
                    "statements": [
                      {
                        "assignments": [
                          29487
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29487,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "6149:8:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 29535,
                            "src": "6141:16:44",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 29486,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6141:7:44",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 29491,
                        "initialValue": {
                          "baseExpression": {
                            "id": 29488,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29781,
                            "src": "6160:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 29490,
                          "indexExpression": {
                            "id": 29489,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29473,
                            "src": "6172:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6160:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6141:38:44"
                      },
                      {
                        "expression": {
                          "id": 29498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 29492,
                                "name": "operatorShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29773,
                                "src": "6250:14:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IInvestmentStrategy_$31179_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IInvestmentStrategy => uint256))"
                                }
                              },
                              "id": 29495,
                              "indexExpression": {
                                "id": 29493,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29487,
                                "src": "6265:8:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6250:24:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IInvestmentStrategy_$31179_$_t_uint256_$",
                                "typeString": "mapping(contract IInvestmentStrategy => uint256)"
                              }
                            },
                            "id": 29496,
                            "indexExpression": {
                              "id": 29494,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29476,
                              "src": "6275:8:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                                "typeString": "contract IInvestmentStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6250:34:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 29497,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29478,
                            "src": "6288:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6250:44:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 29499,
                        "nodeType": "ExpressionStatement",
                        "src": "6250:44:44"
                      },
                      {
                        "assignments": [
                          29504
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29504,
                            "mutability": "mutable",
                            "name": "investorStrats",
                            "nameLocation": "6338:14:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 29535,
                            "src": "6309:43:44",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_memory_ptr",
                              "typeString": "contract IInvestmentStrategy[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 29502,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 29501,
                                  "name": "IInvestmentStrategy",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 31179,
                                  "src": "6309:19:44"
                                },
                                "referencedDeclaration": 31179,
                                "src": "6309:19:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                                  "typeString": "contract IInvestmentStrategy"
                                }
                              },
                              "id": 29503,
                              "nodeType": "ArrayTypeName",
                              "src": "6309:21:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_storage_ptr",
                                "typeString": "contract IInvestmentStrategy[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 29511,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 29509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6381:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 29508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6355:25:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (contract IInvestmentStrategy[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 29506,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 29505,
                                  "name": "IInvestmentStrategy",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 31179,
                                  "src": "6359:19:44"
                                },
                                "referencedDeclaration": 31179,
                                "src": "6359:19:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                                  "typeString": "contract IInvestmentStrategy"
                                }
                              },
                              "id": 29507,
                              "nodeType": "ArrayTypeName",
                              "src": "6359:21:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_storage_ptr",
                                "typeString": "contract IInvestmentStrategy[]"
                              }
                            }
                          },
                          "id": 29510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6355:28:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_memory_ptr",
                            "typeString": "contract IInvestmentStrategy[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6309:74:44"
                      },
                      {
                        "assignments": [
                          29516
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29516,
                            "mutability": "mutable",
                            "name": "investorShares",
                            "nameLocation": "6414:14:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 29535,
                            "src": "6397:31:44",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 29514,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6397:7:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 29515,
                              "nodeType": "ArrayTypeName",
                              "src": "6397:9:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 29522,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 29520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6442:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 29519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6431:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 29517,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6435:4:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 29518,
                              "nodeType": "ArrayTypeName",
                              "src": "6435:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 29521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6431:13:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6397:47:44"
                      },
                      {
                        "expression": {
                          "id": 29527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 29523,
                              "name": "investorStrats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29504,
                              "src": "6458:14:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_memory_ptr",
                                "typeString": "contract IInvestmentStrategy[] memory"
                              }
                            },
                            "id": 29525,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 29524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6473:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6458:17:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                              "typeString": "contract IInvestmentStrategy"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 29526,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29476,
                            "src": "6478:8:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                              "typeString": "contract IInvestmentStrategy"
                            }
                          },
                          "src": "6458:28:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                            "typeString": "contract IInvestmentStrategy"
                          }
                        },
                        "id": 29528,
                        "nodeType": "ExpressionStatement",
                        "src": "6458:28:44"
                      },
                      {
                        "expression": {
                          "id": 29533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 29529,
                              "name": "investorShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29516,
                              "src": "6500:14:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 29531,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 29530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6515:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6500:17:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 29532,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29478,
                            "src": "6520:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6500:26:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 29534,
                        "nodeType": "ExpressionStatement",
                        "src": "6500:26:44"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              30939
            ],
            "documentation": {
              "id": 29471,
              "nodeType": "StructuredDocumentation",
              "src": "5675:214:44",
              "text": " @notice Increases the `staker`'s delegated shares in `strategy` by `shares, typically called when the staker has further deposits into EigenLayr\n @dev Callable only by the InvestmentManager"
            },
            "functionSelector": "28a573ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29481,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29480,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29217,
                  "src": "6014:21:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "6014:21:44"
              }
            ],
            "name": "increaseDelegatedShares",
            "nameLocation": "5903:23:44",
            "parameters": {
              "id": 29479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29473,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "5935:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29538,
                  "src": "5927:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5927:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29476,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "5963:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29538,
                  "src": "5943:28:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                    "typeString": "contract IInvestmentStrategy"
                  },
                  "typeName": {
                    "id": 29475,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29474,
                      "name": "IInvestmentStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31179,
                      "src": "5943:19:44"
                    },
                    "referencedDeclaration": 31179,
                    "src": "5943:19:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                      "typeString": "contract IInvestmentStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29478,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "5981:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29538,
                  "src": "5973:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29477,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5973:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5926:62:44"
            },
            "returnParameters": {
              "id": 29482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6040:0:44"
            },
            "scope": 29736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29595,
            "nodeType": "FunctionDefinition",
            "src": "6792:629:44",
            "nodes": [],
            "body": {
              "id": 29594,
              "nodeType": "Block",
              "src": "6992:429:44",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 29554,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29541,
                        "src": "7018:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 29553,
                      "name": "isDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29698,
                      "src": "7006:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 29555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7006:19:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29593,
                  "nodeType": "IfStatement",
                  "src": "7002:413:44",
                  "trueBody": {
                    "id": 29592,
                    "nodeType": "Block",
                    "src": "7027:388:44",
                    "statements": [
                      {
                        "assignments": [
                          29557
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29557,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "7049:8:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 29592,
                            "src": "7041:16:44",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 29556,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7041:7:44",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 29561,
                        "initialValue": {
                          "baseExpression": {
                            "id": 29558,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29781,
                            "src": "7060:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 29560,
                          "indexExpression": {
                            "id": 29559,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29541,
                            "src": "7072:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7060:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7041:38:44"
                      },
                      {
                        "assignments": [
                          29563
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 29563,
                            "mutability": "mutable",
                            "name": "stratsLength",
                            "nameLocation": "7164:12:44",
                            "nodeType": "VariableDeclaration",
                            "scope": 29592,
                            "src": "7156:20:44",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 29562,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7156:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 29566,
                        "initialValue": {
                          "expression": {
                            "id": 29564,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29545,
                            "src": "7179:10:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_calldata_ptr",
                              "typeString": "contract IInvestmentStrategy[] calldata"
                            }
                          },
                          "id": 29565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7179:17:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7156:40:44"
                      },
                      {
                        "body": {
                          "id": 29590,
                          "nodeType": "Block",
                          "src": "7249:156:44",
                          "statements": [
                            {
                              "expression": {
                                "id": 29584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 29574,
                                      "name": "operatorShares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29773,
                                      "src": "7267:14:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IInvestmentStrategy_$31179_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(contract IInvestmentStrategy => uint256))"
                                      }
                                    },
                                    "id": 29579,
                                    "indexExpression": {
                                      "id": 29575,
                                      "name": "operator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29557,
                                      "src": "7282:8:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7267:24:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IInvestmentStrategy_$31179_$_t_uint256_$",
                                      "typeString": "mapping(contract IInvestmentStrategy => uint256)"
                                    }
                                  },
                                  "id": 29580,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 29576,
                                      "name": "strategies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29545,
                                      "src": "7292:10:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_calldata_ptr",
                                        "typeString": "contract IInvestmentStrategy[] calldata"
                                      }
                                    },
                                    "id": 29578,
                                    "indexExpression": {
                                      "id": 29577,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29568,
                                      "src": "7303:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7292:13:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                                      "typeString": "contract IInvestmentStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7267:39:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 29581,
                                    "name": "shares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29548,
                                    "src": "7310:6:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 29583,
                                  "indexExpression": {
                                    "id": 29582,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29568,
                                    "src": "7317:1:44",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7310:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7267:52:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 29585,
                              "nodeType": "ExpressionStatement",
                              "src": "7267:52:44"
                            },
                            {
                              "id": 29589,
                              "nodeType": "UncheckedBlock",
                              "src": "7337:54:44",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 29587,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7369:3:44",
                                    "subExpression": {
                                      "id": 29586,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29568,
                                      "src": "7371:1:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 29588,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7369:3:44"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 29573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 29571,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29568,
                            "src": "7230:1:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 29572,
                            "name": "stratsLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29563,
                            "src": "7234:12:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7230:16:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29591,
                        "initializationExpression": {
                          "assignments": [
                            29568
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 29568,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7223:1:44",
                              "nodeType": "VariableDeclaration",
                              "scope": 29591,
                              "src": "7215:9:44",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 29567,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7215:7:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 29570,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 29569,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7227:1:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7215:13:44"
                        },
                        "nodeType": "ForStatement",
                        "src": "7210:195:44"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              30952
            ],
            "documentation": {
              "id": 29539,
              "nodeType": "StructuredDocumentation",
              "src": "6549:238:44",
              "text": " @notice Decreases the `staker`'s delegated shares in each entry of `strategies` by its respective `shares[i]`, typically called when the staker withdraws from EigenLayr\n @dev Callable only by the InvestmentManager"
            },
            "functionSelector": "5820491c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 29551,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29550,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29217,
                  "src": "6966:21:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "6966:21:44"
              }
            ],
            "name": "decreaseDelegatedShares",
            "nameLocation": "6801:23:44",
            "parameters": {
              "id": 29549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29541,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "6842:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29595,
                  "src": "6834:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6834:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29545,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "6889:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29595,
                  "src": "6858:41:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_calldata_ptr",
                    "typeString": "contract IInvestmentStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 29543,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 29542,
                        "name": "IInvestmentStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31179,
                        "src": "6858:19:44"
                      },
                      "referencedDeclaration": 31179,
                      "src": "6858:19:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                        "typeString": "contract IInvestmentStrategy"
                      }
                    },
                    "id": 29544,
                    "nodeType": "ArrayTypeName",
                    "src": "6858:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_storage_ptr",
                      "typeString": "contract IInvestmentStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29548,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "6928:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29595,
                  "src": "6909:25:44",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 29546,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6909:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 29547,
                    "nodeType": "ArrayTypeName",
                    "src": "6909:9:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6824:116:44"
            },
            "returnParameters": {
              "id": 29552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6992:0:44"
            },
            "scope": 29736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29679,
            "nodeType": "FunctionDefinition",
            "src": "7972:1111:44",
            "nodes": [],
            "body": {
              "id": 29678,
              "nodeType": "Block",
              "src": "8075:1008:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    29607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29607,
                      "mutability": "mutable",
                      "name": "rewardAddress",
                      "nameLocation": "8093:13:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 29678,
                      "src": "8085:21:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29606,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8085:7:44",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29611,
                  "initialValue": {
                    "baseExpression": {
                      "id": 29608,
                      "name": "operatorReceiverRewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29777,
                      "src": "8109:29:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 29610,
                    "indexExpression": {
                      "id": 29609,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29600,
                      "src": "8139:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8109:39:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8085:63:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 29613,
                          "name": "rewardAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29607,
                          "src": "8179:13:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 29616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8204:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 29615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8196:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29614,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8196:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8196:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8179:27:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a206f70657261746f7220686173206e6f7420796574207265676973746572656420617320612064656c6567617465",
                        "id": 29619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8208:78:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076b77285ae9dd8b0c14123f78d158756024dca0c7de99dc9436071e6c0dc729",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: operator has not yet registered as a delegate\""
                        },
                        "value": "EigenLayrDelegation._delegate: operator has not yet registered as a delegate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076b77285ae9dd8b0c14123f78d158756024dca0c7de99dc9436071e6c0dc729",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: operator has not yet registered as a delegate\""
                        }
                      ],
                      "id": 29612,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8158:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8158:138:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29621,
                  "nodeType": "ExpressionStatement",
                  "src": "8158:138:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 29624,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29598,
                            "src": "8330:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 29623,
                          "name": "isNotDelegated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29717,
                          "src": "8315:14:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 29625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8315:22:44",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a207374616b657220686173206578697374696e672064656c65676174696f6e",
                        "id": 29626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8339:63:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1022491f5cd71f1822fc6bb0f89913349e9ef8529a8261768e2e541f03c88ff",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: staker has existing delegation\""
                        },
                        "value": "EigenLayrDelegation._delegate: staker has existing delegation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1022491f5cd71f1822fc6bb0f89913349e9ef8529a8261768e2e541f03c88ff",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: staker has existing delegation\""
                        }
                      ],
                      "id": 29622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8307:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8307:96:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29628,
                  "nodeType": "ExpressionStatement",
                  "src": "8307:96:44"
                },
                {
                  "expression": {
                    "id": 29633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 29629,
                        "name": "delegatedTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29781,
                        "src": "8484:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 29631,
                      "indexExpression": {
                        "id": 29630,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29598,
                        "src": "8496:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8484:19:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 29632,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29600,
                      "src": "8506:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8484:30:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 29634,
                  "nodeType": "ExpressionStatement",
                  "src": "8484:30:44"
                },
                {
                  "assignments": [
                    29639,
                    29642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29639,
                      "mutability": "mutable",
                      "name": "strategies",
                      "nameLocation": "8635:10:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 29678,
                      "src": "8606:39:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_memory_ptr",
                        "typeString": "contract IInvestmentStrategy[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 29637,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 29636,
                            "name": "IInvestmentStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31179,
                            "src": "8606:19:44"
                          },
                          "referencedDeclaration": 31179,
                          "src": "8606:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                            "typeString": "contract IInvestmentStrategy"
                          }
                        },
                        "id": 29638,
                        "nodeType": "ArrayTypeName",
                        "src": "8606:21:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_storage_ptr",
                          "typeString": "contract IInvestmentStrategy[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 29642,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "8664:6:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 29678,
                      "src": "8647:23:44",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 29640,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8647:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 29641,
                        "nodeType": "ArrayTypeName",
                        "src": "8647:9:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29647,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29645,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29598,
                        "src": "8704:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29643,
                        "name": "investmentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29766,
                        "src": "8674:17:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                          "typeString": "contract IInvestmentManager"
                        }
                      },
                      "id": 29644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31069,
                      "src": "8674:29:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (contract IInvestmentStrategy[] memory,uint256[] memory)"
                      }
                    },
                    "id": 29646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8674:37:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(contract IInvestmentStrategy[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8605:106:44"
                },
                {
                  "assignments": [
                    29649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29649,
                      "mutability": "mutable",
                      "name": "stratsLength",
                      "nameLocation": "8782:12:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 29678,
                      "src": "8774:20:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 29648,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8774:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29652,
                  "initialValue": {
                    "expression": {
                      "id": 29650,
                      "name": "strategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29639,
                      "src": "8797:10:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_memory_ptr",
                        "typeString": "contract IInvestmentStrategy[] memory"
                      }
                    },
                    "id": 29651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8797:17:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8774:40:44"
                },
                {
                  "body": {
                    "id": 29676,
                    "nodeType": "Block",
                    "src": "8863:214:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 29670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 29660,
                                "name": "operatorShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29773,
                                "src": "8955:14:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IInvestmentStrategy_$31179_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IInvestmentStrategy => uint256))"
                                }
                              },
                              "id": 29665,
                              "indexExpression": {
                                "id": 29661,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29600,
                                "src": "8970:8:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8955:24:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IInvestmentStrategy_$31179_$_t_uint256_$",
                                "typeString": "mapping(contract IInvestmentStrategy => uint256)"
                              }
                            },
                            "id": 29666,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 29662,
                                "name": "strategies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29639,
                                "src": "8980:10:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$31179_$dyn_memory_ptr",
                                  "typeString": "contract IInvestmentStrategy[] memory"
                                }
                              },
                              "id": 29664,
                              "indexExpression": {
                                "id": 29663,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29654,
                                "src": "8991:1:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8980:13:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                                "typeString": "contract IInvestmentStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8955:39:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 29667,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29642,
                              "src": "8998:6:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 29669,
                            "indexExpression": {
                              "id": 29668,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29654,
                              "src": "9005:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8998:9:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8955:52:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 29671,
                        "nodeType": "ExpressionStatement",
                        "src": "8955:52:44"
                      },
                      {
                        "id": 29675,
                        "nodeType": "UncheckedBlock",
                        "src": "9021:46:44",
                        "statements": [
                          {
                            "expression": {
                              "id": 29673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9049:3:44",
                              "subExpression": {
                                "id": 29672,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29654,
                                "src": "9051:1:44",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 29674,
                            "nodeType": "ExpressionStatement",
                            "src": "9049:3:44"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 29659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29657,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29654,
                      "src": "8844:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 29658,
                      "name": "stratsLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29649,
                      "src": "8848:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8844:16:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29677,
                  "initializationExpression": {
                    "assignments": [
                      29654
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 29654,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8837:1:44",
                        "nodeType": "VariableDeclaration",
                        "scope": 29677,
                        "src": "8829:9:44",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 29653,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8829:7:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 29656,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 29655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8841:1:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8829:13:44"
                  },
                  "nodeType": "ForStatement",
                  "src": "8824:253:44"
                }
              ]
            },
            "documentation": {
              "id": 29596,
              "nodeType": "StructuredDocumentation",
              "src": "7427:540:44",
              "text": " @notice Internal function implementing the delegation *from* `staker` *to* `operator`.\n @param staker The address to delegate *from* -- this address is delegating control of its own assets.\n @param operator The address to delegate *to* -- this address is being given power to place the `staker`'s assets at risk on services\n @dev Ensures that the operator has registered as a delegate (`address(dt) != address(0)`), verifies that `staker` is not already\n delegated, and records the new delegation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 29603,
                    "name": "PAUSED_NEW_DELEGATION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29197,
                    "src": "8052:21:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 29604,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 29602,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37526,
                  "src": "8034:17:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "8034:40:44"
              }
            ],
            "name": "_delegate",
            "nameLocation": "7981:9:44",
            "parameters": {
              "id": 29601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29598,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "7999:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29679,
                  "src": "7991:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7991:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29600,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "8015:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29679,
                  "src": "8007:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8007:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7990:34:44"
            },
            "returnParameters": {
              "id": 29605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8075:0:44"
            },
            "scope": 29736,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 29698,
            "nodeType": "FunctionDefinition",
            "src": "9202:123:44",
            "nodes": [],
            "body": {
              "id": 29697,
              "nodeType": "Block",
              "src": "9266:59:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 29687,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29781,
                            "src": "9284:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 29689,
                          "indexExpression": {
                            "id": 29688,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29682,
                            "src": "9296:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9284:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 29692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9315:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 29691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9307:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29690,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9307:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9307:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9284:33:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 29695,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9283:35:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 29686,
                  "id": 29696,
                  "nodeType": "Return",
                  "src": "9276:42:44"
                }
              ]
            },
            "baseFunctions": [
              30960
            ],
            "documentation": {
              "id": 29680,
              "nodeType": "StructuredDocumentation",
              "src": "9111:86:44",
              "text": "@notice Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
            },
            "functionSelector": "3e28391d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDelegated",
            "nameLocation": "9211:11:44",
            "parameters": {
              "id": 29683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29682,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "9231:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29698,
                  "src": "9223:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9223:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9222:16:44"
            },
            "returnParameters": {
              "id": 29686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29685,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29698,
                  "src": "9260:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29684,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9260:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9259:6:44"
            },
            "scope": 29736,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29717,
            "nodeType": "FunctionDefinition",
            "src": "9426:126:44",
            "nodes": [],
            "body": {
              "id": 29716,
              "nodeType": "Block",
              "src": "9493:59:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 29706,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29781,
                            "src": "9511:11:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 29708,
                          "indexExpression": {
                            "id": 29707,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29701,
                            "src": "9523:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9511:19:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 29711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9542:1:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 29710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9534:7:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 29709,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9534:7:44",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 29712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9534:10:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9511:33:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 29714,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9510:35:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 29705,
                  "id": 29715,
                  "nodeType": "Return",
                  "src": "9503:42:44"
                }
              ]
            },
            "baseFunctions": [
              30968
            ],
            "documentation": {
              "id": 29699,
              "nodeType": "StructuredDocumentation",
              "src": "9331:90:44",
              "text": "@notice Returns 'true' if `staker` is *not* actively delegated, and 'false' otherwise."
            },
            "functionSelector": "1d3696b7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isNotDelegated",
            "nameLocation": "9435:14:44",
            "parameters": {
              "id": 29702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29701,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "9458:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29717,
                  "src": "9450:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9450:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9449:16:44"
            },
            "returnParameters": {
              "id": 29705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29704,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29717,
                  "src": "9487:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29703,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9487:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9486:6:44"
            },
            "scope": 29736,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 29735,
            "nodeType": "FunctionDefinition",
            "src": "9659:142:44",
            "nodes": [],
            "body": {
              "id": 29734,
              "nodeType": "Block",
              "src": "9724:77:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 29732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 29725,
                        "name": "operatorReceiverRewardAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29777,
                        "src": "9741:29:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 29727,
                      "indexExpression": {
                        "id": 29726,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29720,
                        "src": "9771:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9741:39:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 29730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9792:1:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 29729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9784:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 29728,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9784:7:44",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 29731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9784:10:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9741:53:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 29724,
                  "id": 29733,
                  "nodeType": "Return",
                  "src": "9734:60:44"
                }
              ]
            },
            "baseFunctions": [
              30976
            ],
            "documentation": {
              "id": 29718,
              "nodeType": "StructuredDocumentation",
              "src": "9558:96:44",
              "text": "@notice Returns if an operator can be delegated to, i.e. it has called `registerAsOperator`."
            },
            "functionSelector": "6d70f7ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperator",
            "nameLocation": "9668:10:44",
            "parameters": {
              "id": 29721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29720,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9687:8:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 29735,
                  "src": "9679:16:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9679:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9678:18:44"
            },
            "returnParameters": {
              "id": 29724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29723,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29735,
                  "src": "9718:4:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29722,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9718:4:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9717:6:44"
            },
            "scope": 29736,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29187,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23335,
              "src": "1168:13:44"
            },
            "id": 29188,
            "nodeType": "InheritanceSpecifier",
            "src": "1168:13:44"
          },
          {
            "baseName": {
              "id": 29189,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23184,
              "src": "1183:18:44"
            },
            "id": 29190,
            "nodeType": "InheritanceSpecifier",
            "src": "1183:18:44"
          },
          {
            "baseName": {
              "id": 29191,
              "name": "EigenLayrDelegationStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29797,
              "src": "1203:26:44"
            },
            "id": 29192,
            "nodeType": "InheritanceSpecifier",
            "src": "1203:26:44"
          },
          {
            "baseName": {
              "id": 29193,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37670,
              "src": "1231:8:44"
            },
            "id": 29194,
            "nodeType": "InheritanceSpecifier",
            "src": "1231:8:44"
          }
        ],
        "canonicalName": "EigenLayrDelegation",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 29186,
          "nodeType": "StructuredDocumentation",
          "src": "513:622:44",
          "text": " @title The primary delegation contract for EigenLayr.\n @author Layr Labs, Inc.\n @notice  This is the contract for delegation in EigenLayr. The main functionalities of this contract are\n - enabling anyone to register as an operator in EigenLayr\n - allowing new operators to provide a another eoa address, which may mediate their interactions with stakers who delegate to them\n - enabling any staker to delegate its stake to the operator of its choice\n - enabling a staker to undelegate its assets from an operator (performed as part of the withdrawal process, initiated through the InvestmentManager)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29736,
          37670,
          29797,
          30977,
          23184,
          23680,
          23335
        ],
        "name": "EigenLayrDelegation",
        "nameLocation": "1145:19:44",
        "scope": 29737,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 44
}