{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract EigenLayrDelegation",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eigenTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentManager",
      "outputs": [
        {
          "internalType": "contract InvestmentManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mantle",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mantleFirstStrat",
      "outputs": [
        {
          "internalType": "contract InvestmentStrategyBase",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mantleSencodStrat",
      "outputs": [
        {
          "internalType": "contract InvestmentStrategyBase",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rgPermission",
      "outputs": [
        {
          "internalType": "contract IRegistryPermission",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "run",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff0001600160b81b031916767109709ecfa91a80626ff3989d68f67f5b1dd12d00010117905534801561003b57600080fd5b506113668061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100b35760003560e01c8063ba414fa611610071578063ba414fa61461015a578063c0389b231461017d578063c040622614610190578063df5cf7231461019a578063f8ccbf47146101ad578063fa7626d4146101ba57600080fd5b80627a6d21146100b857806312c22622146100e85780633a768463146101065780634b31bb101461012157806384b009fd14610134578063aaa6aad614610147575b600080fd5b6007546100cb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f8683635c9adc5dea0000081565b6040519081526020016100df565b6100cb737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6006546100cb906001600160a01b031681565b6008546100cb906001600160a01b031681565b6009546100cb906001600160a01b031681565b60005461016d9062010000900460ff1681565b60405190151581526020016100df565b600a546100cb906001600160a01b031681565b6101986101cc565b005b6005546100cb906001600160a01b031681565b60005461016d9060ff1681565b60005461016d90610100900460ff1681565b6101d4610607565b60408051637fb5297f60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d91637fb5297f91600480830192600092919082900301818387803b15801561022057600080fd5b505af1158015610234573d6000803e3d6000fd5b5050505060005b6002548110156105a0576000610391600b80546102579061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546102839061109f565b80156102d05780601f106102a5576101008083540402835291602001916102d0565b820191906000526020600020905b8154815290600101906020018083116102b357829003601f168201915b505060405163348051d760e11b815260048101889052737109709ecfa91a80626ff3989d68f67f5b1dd12d9350636900a3ae925060240190506000604051808303816000875af1158015610328573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103509190810190611190565b60405160200161036091906111e1565b60408051601f198184030181529082905261037d9160200161120e565b604051602081830303815290604052610ed3565b905060006104cb600b80546103a59061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546103d19061109f565b801561041e5780601f106103f35761010080835404028352916020019161041e565b820191906000526020600020905b81548152906001019060200180831161040157829003601f168201915b505060405163348051d760e11b815260048101899052737109709ecfa91a80626ff3989d68f67f5b1dd12d9350636900a3ae925060240190506000604051808303816000875af1158015610476573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261049e9190810190611190565b6040516020016104ae91906111e1565b60408051601f198184030181529082905261037d9160200161123b565b600a54604051634b7e91ed60e01b81526001600160a01b038581166004830152929350911690634b7e91ed90602401600060405180830381600087803b15801561051457600080fd5b505af1158015610528573d6000803e3d6000fd5b5050600a54604051631d55645b60e21b81526001600160a01b0385811660048301529091169250637555916c9150602401600060405180830381600087803b15801561057357600080fd5b505af1158015610587573d6000803e3d6000fd5b50505050505080806105989061126b565b91505061023b565b5060408051633b756e9b60e11b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916376eadd3691600480830192600092919082900301818387803b1580156105ed57600080fd5b505af1158015610601573d6000803e3d6000fd5b50505050565b6040516360f9bb1160e01b81526020600482015260166024820152753230ba3097b830b93a34b1b4b830b73a39973539b7b760511b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb11906064016000604051808303816000875af115801561067f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106a79190810190611190565b80516106bb91600b91602090910190611006565b5061076f600b80546106cc9061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546106f89061109f565b80156107455780601f1061071a57610100808354040283529160200191610745565b820191906000526020600020905b81548152906001019060200180831161072857829003601f168201915b5050505050604051806040016040528060078152602001662e6e756d44697360c81b815250610f70565b600155600b805461082791906107849061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546107b09061109f565b80156107fd5780601f106107d2576101008083540402835291602001916107fd565b820191906000526020600020905b8154815290600101906020018083116107e057829003601f168201915b50505050506040518060400160405280600781526020016617373ab6a2363760c91b815250610f70565b600255600b80546108e2919061083c9061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546108689061109f565b80156108b55780601f1061088a576101008083540402835291602001916108b5565b820191906000526020600020905b81548152906001019060200180831161089857829003601f168201915b50505050506040518060400160405280600a81526020016917373ab6a9ba30b5b2b960b11b815250610f70565b6003556040516360f9bb1160e01b81526020600482015260136024820152723230ba3097b0b2323932b9b9b2b9973539b7b760691b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb11906064016000604051808303816000875af115801561095a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109829190810190611190565b805161099691600c91602090910190611006565b50610a4e600c80546109a79061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546109d39061109f565b8015610a205780601f106109f557610100808354040283529160200191610a20565b820191906000526020600020905b815481529060010190602001808311610a0357829003601f168201915b50505050506040518060400160405280600b81526020016a173232b632b3b0ba34b7b760a91b815250610ed3565b600560006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610b32600c8054610a849061109f565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab09061109f565b8015610afd5780601f10610ad257610100808354040283529160200191610afd565b820191906000526020600020905b815481529060010190602001808311610ae057829003601f168201915b5050505050604051806040016040528060128152602001711734b73b32b9ba36b2b73a26b0b730b3b2b960711b815250610ed3565b600660006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610c0b600c8054610b689061109f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b949061109f565b8015610be15780601f10610bb657610100808354040283529160200191610be1565b820191906000526020600020905b815481529060010190602001808311610bc457829003601f168201915b5050505050604051806040016040528060078152602001662e6d616e746c6560c81b815250610ed3565b600860006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610cee600c8054610c419061109f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6d9061109f565b8015610cba5780601f10610c8f57610100808354040283529160200191610cba565b820191906000526020600020905b815481529060010190602001808311610c9d57829003601f168201915b5050505050604051806040016040528060118152602001700b9b585b9d1b19519a5c9cdd14dd1c985d607a1b815250610ed3565b600760006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610dd2600c8054610d249061109f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d509061109f565b8015610d9d5780601f10610d7257610100808354040283529160200191610d9d565b820191906000526020600020905b815481529060010190602001808311610d8057829003601f168201915b5050505050604051806040016040528060128152602001710b9b585b9d1b1954d95b98dbd914dd1c985d60721b815250610ed3565b600960006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610eb1600c8054610e089061109f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e349061109f565b8015610e815780601f10610e5657610100808354040283529160200191610e81565b820191906000526020600020905b815481529060010190602001808311610e6457829003601f168201915b50505050506040518060400160405280600d81526020016c173933a832b936b4b9b9b4b7b760991b815250610ed3565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6040516385940ef160e01b8152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906385940ef190610f0f90869086906004016112c0565b6000604051808303816000875af1158015610f2e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f569190810190611190565b806020019051810190610f6991906112ee565b9392505050565b6040516385940ef160e01b8152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906385940ef190610fac90869086906004016112c0565b6000604051808303816000875af1158015610fcb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ff39190810190611190565b806020019051810190610f699190611317565b8280546110129061109f565b90600052602060002090601f016020900481019282611034576000855561107a565b82601f1061104d57805160ff191683800117855561107a565b8280016001018555821561107a579182015b8281111561107a57825182559160200191906001019061105f565b5061108692915061108a565b5090565b5b80821115611086576000815560010161108b565b600181811c908216806110b357607f821691505b602082108114156110d457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561110b5781810151838201526020016110f3565b838111156106015750506000910152565b600067ffffffffffffffff80841115611137576111376110da565b604051601f8501601f19908116603f0116810190828211818310171561115f5761115f6110da565b8160405280935085815286868601111561117857600080fd5b6111868660208301876110f0565b5050509392505050565b6000602082840312156111a257600080fd5b815167ffffffffffffffff8111156111b957600080fd5b8201601f810184136111ca57600080fd5b6111d98482516020840161111c565b949350505050565b600082516111f38184602087016110f0565b685d2e6164647265737360b81b920191825250600901919050565b642e646c6e5b60d81b81526000825161122e8160058501602087016110f0565b9190910160050192915050565b672e7374616b65725b60c01b81526000825161125e8160088501602087016110f0565b9190910160080192915050565b600060001982141561128d57634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526112ac8160208601602086016110f0565b601f01601f19169290920160200192915050565b6040815260006112d36040830185611294565b82810360208401526112e58185611294565b95945050505050565b60006020828403121561130057600080fd5b81516001600160a01b0381168114610f6957600080fd5b60006020828403121561132957600080fd5b505191905056fea26469706673582212204a1a8d81db227714d5628a30c8830a1b682b2c737bb7db2941c88e47199d34fb64736f6c634300080c0033",
    "sourceMap": "289:726:41:-:0;;;170:28:1;;;-1:-1:-1;;;;;;511:28:40;;;;;289:726:41;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b35760003560e01c8063ba414fa611610071578063ba414fa61461015a578063c0389b231461017d578063c040622614610190578063df5cf7231461019a578063f8ccbf47146101ad578063fa7626d4146101ba57600080fd5b80627a6d21146100b857806312c22622146100e85780633a768463146101065780634b31bb101461012157806384b009fd14610134578063aaa6aad614610147575b600080fd5b6007546100cb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f8683635c9adc5dea0000081565b6040519081526020016100df565b6100cb737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6006546100cb906001600160a01b031681565b6008546100cb906001600160a01b031681565b6009546100cb906001600160a01b031681565b60005461016d9062010000900460ff1681565b60405190151581526020016100df565b600a546100cb906001600160a01b031681565b6101986101cc565b005b6005546100cb906001600160a01b031681565b60005461016d9060ff1681565b60005461016d90610100900460ff1681565b6101d4610607565b60408051637fb5297f60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d91637fb5297f91600480830192600092919082900301818387803b15801561022057600080fd5b505af1158015610234573d6000803e3d6000fd5b5050505060005b6002548110156105a0576000610391600b80546102579061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546102839061109f565b80156102d05780601f106102a5576101008083540402835291602001916102d0565b820191906000526020600020905b8154815290600101906020018083116102b357829003601f168201915b505060405163348051d760e11b815260048101889052737109709ecfa91a80626ff3989d68f67f5b1dd12d9350636900a3ae925060240190506000604051808303816000875af1158015610328573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103509190810190611190565b60405160200161036091906111e1565b60408051601f198184030181529082905261037d9160200161120e565b604051602081830303815290604052610ed3565b905060006104cb600b80546103a59061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546103d19061109f565b801561041e5780601f106103f35761010080835404028352916020019161041e565b820191906000526020600020905b81548152906001019060200180831161040157829003601f168201915b505060405163348051d760e11b815260048101899052737109709ecfa91a80626ff3989d68f67f5b1dd12d9350636900a3ae925060240190506000604051808303816000875af1158015610476573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261049e9190810190611190565b6040516020016104ae91906111e1565b60408051601f198184030181529082905261037d9160200161123b565b600a54604051634b7e91ed60e01b81526001600160a01b038581166004830152929350911690634b7e91ed90602401600060405180830381600087803b15801561051457600080fd5b505af1158015610528573d6000803e3d6000fd5b5050600a54604051631d55645b60e21b81526001600160a01b0385811660048301529091169250637555916c9150602401600060405180830381600087803b15801561057357600080fd5b505af1158015610587573d6000803e3d6000fd5b50505050505080806105989061126b565b91505061023b565b5060408051633b756e9b60e11b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916376eadd3691600480830192600092919082900301818387803b1580156105ed57600080fd5b505af1158015610601573d6000803e3d6000fd5b50505050565b6040516360f9bb1160e01b81526020600482015260166024820152753230ba3097b830b93a34b1b4b830b73a39973539b7b760511b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb11906064016000604051808303816000875af115801561067f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106a79190810190611190565b80516106bb91600b91602090910190611006565b5061076f600b80546106cc9061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546106f89061109f565b80156107455780601f1061071a57610100808354040283529160200191610745565b820191906000526020600020905b81548152906001019060200180831161072857829003601f168201915b5050505050604051806040016040528060078152602001662e6e756d44697360c81b815250610f70565b600155600b805461082791906107849061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546107b09061109f565b80156107fd5780601f106107d2576101008083540402835291602001916107fd565b820191906000526020600020905b8154815290600101906020018083116107e057829003601f168201915b50505050506040518060400160405280600781526020016617373ab6a2363760c91b815250610f70565b600255600b80546108e2919061083c9061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546108689061109f565b80156108b55780601f1061088a576101008083540402835291602001916108b5565b820191906000526020600020905b81548152906001019060200180831161089857829003601f168201915b50505050506040518060400160405280600a81526020016917373ab6a9ba30b5b2b960b11b815250610f70565b6003556040516360f9bb1160e01b81526020600482015260136024820152723230ba3097b0b2323932b9b9b2b9973539b7b760691b6044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906360f9bb11906064016000604051808303816000875af115801561095a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109829190810190611190565b805161099691600c91602090910190611006565b50610a4e600c80546109a79061109f565b80601f01602080910402602001604051908101604052809291908181526020018280546109d39061109f565b8015610a205780601f106109f557610100808354040283529160200191610a20565b820191906000526020600020905b815481529060010190602001808311610a0357829003601f168201915b50505050506040518060400160405280600b81526020016a173232b632b3b0ba34b7b760a91b815250610ed3565b600560006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610b32600c8054610a849061109f565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab09061109f565b8015610afd5780601f10610ad257610100808354040283529160200191610afd565b820191906000526020600020905b815481529060010190602001808311610ae057829003601f168201915b5050505050604051806040016040528060128152602001711734b73b32b9ba36b2b73a26b0b730b3b2b960711b815250610ed3565b600660006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610c0b600c8054610b689061109f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b949061109f565b8015610be15780601f10610bb657610100808354040283529160200191610be1565b820191906000526020600020905b815481529060010190602001808311610bc457829003601f168201915b5050505050604051806040016040528060078152602001662e6d616e746c6560c81b815250610ed3565b600860006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610cee600c8054610c419061109f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6d9061109f565b8015610cba5780601f10610c8f57610100808354040283529160200191610cba565b820191906000526020600020905b815481529060010190602001808311610c9d57829003601f168201915b5050505050604051806040016040528060118152602001700b9b585b9d1b19519a5c9cdd14dd1c985d607a1b815250610ed3565b600760006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610dd2600c8054610d249061109f565b80601f0160208091040260200160405190810160405280929190818152602001828054610d509061109f565b8015610d9d5780601f10610d7257610100808354040283529160200191610d9d565b820191906000526020600020905b815481529060010190602001808311610d8057829003601f168201915b5050505050604051806040016040528060128152602001710b9b585b9d1b1954d95b98dbd914dd1c985d60721b815250610ed3565b600960006101000a8154816001600160a01b0302191690836001600160a01b03160217905550610eb1600c8054610e089061109f565b80601f0160208091040260200160405190810160405280929190818152602001828054610e349061109f565b8015610e815780601f10610e5657610100808354040283529160200191610e81565b820191906000526020600020905b815481529060010190602001808311610e6457829003601f168201915b50505050506040518060400160405280600d81526020016c173933a832b936b4b9b9b4b7b760991b815250610ed3565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6040516385940ef160e01b8152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906385940ef190610f0f90869086906004016112c0565b6000604051808303816000875af1158015610f2e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f569190810190611190565b806020019051810190610f6991906112ee565b9392505050565b6040516385940ef160e01b8152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906385940ef190610fac90869086906004016112c0565b6000604051808303816000875af1158015610fcb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ff39190810190611190565b806020019051810190610f699190611317565b8280546110129061109f565b90600052602060002090601f016020900481019282611034576000855561107a565b82601f1061104d57805160ff191683800117855561107a565b8280016001018555821561107a579182015b8281111561107a57825182559160200191906001019061105f565b5061108692915061108a565b5090565b5b80821115611086576000815560010161108b565b600181811c908216806110b357607f821691505b602082108114156110d457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561110b5781810151838201526020016110f3565b838111156106015750506000910152565b600067ffffffffffffffff80841115611137576111376110da565b604051601f8501601f19908116603f0116810190828211818310171561115f5761115f6110da565b8160405280935085815286868601111561117857600080fd5b6111868660208301876110f0565b5050509392505050565b6000602082840312156111a257600080fd5b815167ffffffffffffffff8111156111b957600080fd5b8201601f810184136111ca57600080fd5b6111d98482516020840161111c565b949350505050565b600082516111f38184602087016110f0565b685d2e6164647265737360b81b920191825250600901919050565b642e646c6e5b60d81b81526000825161122e8160058501602087016110f0565b9190910160050192915050565b672e7374616b65725b60c01b81526000825161125e8160088501602087016110f0565b9190910160080192915050565b600060001982141561128d57634e487b7160e01b600052601160045260246000fd5b5060010190565b600081518084526112ac8160208601602086016110f0565b601f01601f19169290920160200192915050565b6040815260006112d36040830185611294565b82810360208401526112e58185611294565b95945050505050565b60006020828403121561130057600080fd5b81516001600160a01b0381168114610f6957600080fd5b60006020828403121561132957600080fd5b505191905056fea26469706673582212204a1a8d81db227714d5628a30c8830a1b682b2c737bb7db2941c88e47199d34fb64736f6c634300080c0033",
    "sourceMap": "289:726:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;777:46:40;;;;;-1:-1:-1;;;;;777:46:40;;;;;;-1:-1:-1;;;;;210:32:96;;;192:51;;180:2;165:18;777:46:40;;;;;;;;630:50;;673:7;630:50;;;;;400:25:96;;;388:2;373:18;630:50:40;254:177:96;321:38:1;;250:64;321:38;;729:42:40;;;;;-1:-1:-1;;;;;729:42:40;;;829:20;;;;;-1:-1:-1;;;;;829:20:40;;;855:47;;;;;-1:-1:-1;;;;;855:47:40;;;1605:18:0;;;;;;;;;;;;;;;1279:14:96;;1272:22;1254:41;;1242:2;1227:18;1605::0;1114:187:96;908:39:40;;;;;-1:-1:-1;;;;;908:39:40;;;356:657:41;;;:::i;:::-;;686:37:40;;;;;-1:-1:-1;;;;;686:37:40;;;170:28:1;;;;;;;;;1573:26:0;;;;;;;;;;;;356:657:41;390:23;:21;:23::i;:::-;423:19;;;-1:-1:-1;;;423:19:41;;;;250:64:1;;423:17:41;;:19;;;;;274:37:1;;423:19:41;;;;;;;274:37:1;250:64;423:19:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;457:9;452:527;476:6;;472:1;:10;452:527;;;503:20;526:99;546:10;526:99;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;595:14:41;;-1:-1:-1;;;595:14:41;;;;;400:25:96;;;250:64:1;;-1:-1:-1;595:11:41;;-1:-1:-1;373:18:96;;;-1:-1:-1;595:14:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;595:14:41;;;;;;;;;;;;:::i;:::-;581:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;581:42:41;;;;;;;;;;558:66;;581:42;558:66;;:::i;:::-;;;;;;;;;;;;;526:19;:99::i;:::-;503:122;;639:18;660:102;680:10;660:102;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:14:41;;-1:-1:-1;;;732:14:41;;;;;400:25:96;;;250:64:1;;-1:-1:-1;732:11:41;;-1:-1:-1;373:18:96;;;-1:-1:-1;732:14:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;732:14:41;;;;;;;;;;;;:::i;:::-;718:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;718:42:41;;;;;;;;;;692:69;;718:42;692:69;;:::i;660:102::-;776:12;;:56;;-1:-1:-1;;;776:56:41;;-1:-1:-1;;;;;210:32:96;;;776:56:41;;;192:51:96;639:123:41;;-1:-1:-1;776:12:41;;;:42;;165:18:96;;776:56:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;921:12:41;;:47;;-1:-1:-1;;;921:47:41;;-1:-1:-1;;;;;210:32:96;;;921:47:41;;;192:51:96;921:12:41;;;;-1:-1:-1;921:35:41;;-1:-1:-1;165:18:96;;921:47:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:490;;484:3;;;;;:::i;:::-;;;;452:527;;;-1:-1:-1;988:18:41;;;-1:-1:-1;;;988:18:41;;;;250:64:1;;988:16:41;;:18;;;;;274:37:1;;988:18:41;;;;;;;274:37:1;250:64;988:18:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;356:657::o;1020:921:40:-;1085:37;;-1:-1:-1;;;1085:37:40;;5554:2:96;1085:37:40;;;5536:21:96;5593:2;5573:18;;;5566:30;-1:-1:-1;;;5612:18:96;;;5605:52;250:64:1;;1085:11:40;;5674:18:96;;1085:37:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1085:37:40;;;;;;;;;;;;:::i;:::-;1072:50;;;;:10;;:50;;;;;;:::i;:::-;;1141:39;1158:10;1141:39;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1141:39:40;;;:16;:39::i;:::-;1132:6;:48;1216:10;1199:39;;;;1216:10;1199:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1199:39:40;;;:16;:39::i;:::-;1190:6;:48;1277:10;1260:42;;;;1277:10;1260:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1260:42:40;;;:16;:42::i;:::-;1248:9;:54;1327:34;;-1:-1:-1;;;1327:34:40;;5905:2:96;1327:34:40;;;5887:21:96;5944:2;5924:18;;;5917:30;-1:-1:-1;;;5963:18:96;;;5956:49;250:64:1;;1327:11:40;;6022:18:96;;1327:34:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1327:34:40;;;;;;;;;;;;:::i;:::-;1313:48;;;;:11;;:48;;;;;;:::i;:::-;;1404:47;1424:11;1404:47;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1404:47:40;;;:19;:47::i;:::-;1371:10;;:81;;;;;-1:-1:-1;;;;;1371:81:40;;;;;-1:-1:-1;;;;;1371:81:40;;;;;;1500:54;1520:11;1500:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1500:54:40;;;:19;:54::i;:::-;1462:17;;:93;;;;;-1:-1:-1;;;;;1462:93:40;;;;;-1:-1:-1;;;;;1462:93:40;;;;;;1581:43;1601:11;1581:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1581:43:40;;;:19;:43::i;:::-;1565:6;;:60;;;;;-1:-1:-1;;;;;1565:60:40;;;;;-1:-1:-1;;;;;1565:60:40;;;;;;1677:53;1697:11;1677:53;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1677:53:40;;;:19;:53::i;:::-;1635:16;;:96;;;;;-1:-1:-1;;;;;1635:96:40;;;;;-1:-1:-1;;;;;1635:96:40;;;;;;1784:54;1804:11;1784:54;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1784:54:40;;;:19;:54::i;:::-;1741:17;;:98;;;;;-1:-1:-1;;;;;1741:98:40;;;;;-1:-1:-1;;;;;1741:98:40;;;;;;1884:49;1904:11;1884:49;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1884:49:40;;;:19;:49::i;:::-;1849:12;:85;;-1:-1:-1;;;;;;1849:85:40;-1:-1:-1;;;;;1849:85:40;;;;;;;;;;1020:921::o;1946:177:2:-;2081:23;;-1:-1:-1;;;2081:23:2;;2040:7;;2081:12;;;;:23;;2094:4;;2100:3;;2081:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2081:23:2;;;;;;;;;;;;:::i;:::-;2070:46;;;;;;;;;;;;:::i;:::-;2063:53;1946:177;-1:-1:-1;;;1946:177:2:o;435:174::-;567:23;;-1:-1:-1;;;567:23:2;;526:7;;567:12;;;;:23;;580:4;;586:3;;567:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;567:23:2;;;;;;;;;;;;:::i;:::-;556:46;;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;1780:380:96;1859:1;1855:12;;;;1902;;;1923:61;;1977:4;1969:6;1965:17;1955:27;;1923:61;2030:2;2022:6;2019:14;1999:18;1996:38;1993:161;;;2076:10;2071:3;2067:20;2064:1;2057:31;2111:4;2108:1;2101:15;2139:4;2136:1;2129:15;1993:161;;1780:380;;;:::o;2165:127::-;2226:10;2221:3;2217:20;2214:1;2207:31;2257:4;2254:1;2247:15;2281:4;2278:1;2271:15;2297:258;2369:1;2379:113;2393:6;2390:1;2387:13;2379:113;;;2469:11;;;2463:18;2450:11;;;2443:39;2415:2;2408:10;2379:113;;;2510:6;2507:1;2504:13;2501:48;;;-1:-1:-1;;2545:1:96;2527:16;;2520:27;2297:258::o;2560:602::-;2636:5;2666:18;2707:2;2699:6;2696:14;2693:40;;;2713:18;;:::i;:::-;2788:2;2782:9;2756:2;2842:15;;-1:-1:-1;;2838:24:96;;;2864:2;2834:33;2830:42;2818:55;;;2888:18;;;2908:22;;;2885:46;2882:72;;;2934:18;;:::i;:::-;2974:10;2970:2;2963:22;3003:6;2994:15;;3033:6;3025;3018:22;3073:3;3064:6;3059:3;3055:16;3052:25;3049:45;;;3090:1;3087;3080:12;3049:45;3103:53;3149:6;3142:4;3134:6;3130:17;3125:3;3103:53;:::i;:::-;;;;2560:602;;;;;:::o;3167:459::-;3247:6;3300:2;3288:9;3279:7;3275:23;3271:32;3268:52;;;3316:1;3313;3306:12;3268:52;3349:9;3343:16;3382:18;3374:6;3371:30;3368:50;;;3414:1;3411;3404:12;3368:50;3437:22;;3490:4;3482:13;;3478:27;-1:-1:-1;3468:55:96;;3519:1;3516;3509:12;3468:55;3542:78;3612:7;3607:2;3601:9;3596:2;3592;3588:11;3542:78;:::i;:::-;3532:88;3167:459;-1:-1:-1;;;;3167:459:96:o;3631:436::-;3852:3;3890:6;3884:13;3906:53;3952:6;3947:3;3940:4;3932:6;3928:17;3906:53;:::i;:::-;-1:-1:-1;;;3981:16:96;;4006:26;;;-1:-1:-1;4059:1:96;4048:13;;3631:436;-1:-1:-1;3631:436:96:o;4072:411::-;-1:-1:-1;;;4318:3:96;4311:20;4293:3;4360:6;4354:13;4376:61;4430:6;4426:1;4421:3;4417:11;4410:4;4402:6;4398:17;4376:61;:::i;:::-;4457:16;;;;4475:1;4453:24;;4072:411;-1:-1:-1;;4072:411:96:o;4488:414::-;-1:-1:-1;;;4734:3:96;4727:23;4709:3;4779:6;4773:13;4795:61;4849:6;4845:1;4840:3;4836:11;4829:4;4821:6;4817:17;4795:61;:::i;:::-;4876:16;;;;4894:1;4872:24;;4488:414;-1:-1:-1;;4488:414:96:o;5115:232::-;5154:3;-1:-1:-1;;5175:17:96;;5172:140;;;5234:10;5229:3;5225:20;5222:1;5215:31;5269:4;5266:1;5259:15;5297:4;5294:1;5287:15;5172:140;-1:-1:-1;5339:1:96;5328:13;;5115:232::o;6051:258::-;6093:3;6131:5;6125:12;6158:6;6153:3;6146:19;6174:63;6230:6;6223:4;6218:3;6214:14;6207:4;6200:5;6196:16;6174:63;:::i;:::-;6291:2;6270:15;-1:-1:-1;;6266:29:96;6257:39;;;;6298:4;6253:50;;6051:258;-1:-1:-1;;6051:258:96:o;6314:383::-;6511:2;6500:9;6493:21;6474:4;6537:45;6578:2;6567:9;6563:18;6555:6;6537:45;:::i;:::-;6630:9;6622:6;6618:22;6613:2;6602:9;6598:18;6591:50;6658:33;6684:6;6676;6658:33;:::i;:::-;6650:41;6314:383;-1:-1:-1;;;;;6314:383:96:o;7165:298::-;7243:6;7296:2;7284:9;7275:7;7271:23;7267:32;7264:52;;;7312:1;7309;7302:12;7264:52;7338:16;;-1:-1:-1;;;;;7383:31:96;;7373:42;;7363:70;;7429:1;7426;7419:12;7468:184;7538:6;7591:2;7579:9;7570:7;7566:23;7562:32;7559:52;;;7607:1;7604;7597:12;7559:52;-1:-1:-1;7630:16:96;;7468:184;-1:-1:-1;7468:184:96:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "delegation()": "df5cf723",
    "eigenTotalSupply()": "12c22622",
    "failed()": "ba414fa6",
    "investmentManager()": "4b31bb10",
    "mantle()": "84b009fd",
    "mantleFirstStrat()": "007a6d21",
    "mantleSencodStrat()": "aaa6aad6",
    "rgPermission()": "c0389b23",
    "run()": "c0406226",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract EigenLayrDelegation\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentManager\",\"outputs\":[{\"internalType\":\"contract InvestmentManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mantle\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mantleFirstStrat\",\"outputs\":[{\"internalType\":\"contract InvestmentStrategyBase\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mantleSencodStrat\",\"outputs\":[{\"internalType\":\"contract InvestmentStrategyBase\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rgPermission\",\"outputs\":[{\"internalType\":\"contract IRegistryPermission\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/GrantPermission.s.sol\":\"GrantPermission\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0xff9d5f742cefc0bb0d4b13b006c4d032bb24a5c1f7ce7031823230d0267dc0cd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://ace1c4590fabf3063db1662746726d3d2c7d39a0df03267f3a9bd1e12100594f\",\"dweb:/ipfs/QmduV224JB2TXqrFcJbjyy4bsH5PY3jFHzYV8bSJSUzceL\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4\",\"dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4e0b487da265a218cb3949e1363614362202c92fb68f95aea906e993d76c6278\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbd76a5b7e4503db1319d8bfb230e50787b5c993764442815bb1d6da94cd721e\",\"dweb:/ipfs/QmUpNH6vJ4a6a8YFYy5SR6va8KqT7mX2QCtT1haBQHYPA8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe758e38e94b1af29f4e8907124553bea067fdc19e76ba211ddba9b7ca75785ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b49649a6c9b123fc1948565ed6a03b44eebbf84631fce80901db05629c80107\",\"dweb:/ipfs/QmZ3GRymzdgTupEwtYyGANhVWeQ8H6sqVKi7xGP7HXkwEn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xbe41d06efd6f3de49ca2d31da1996e367ff8728f1a11d7255bcd29ff997c8698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3c94d0f4dddad6147aed4a0df9524f6be529f7815c1029cabf9c9245cb4adf4\",\"dweb:/ipfs/QmW8Dgv6y5D2ZiNU6G4i8qifDkPyYtF7e7PPi3j9oK8ygm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0\",\"dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x34d5fd3e73f17311fc4ae0ec192c59d5e46d585045017b41a78b8c75ab387d9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11224aad5e5e78cda2e0e8456e27121ece04e725a24d63568fa56f100dc47fb3\",\"dweb:/ipfs/QmWrpMpotNwYyWcZJUuRcwas9nuy7KYsFTQ1EELUdWQRww\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf\",\"dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP\"]},\"script/EigenLayerParser.sol\":{\"keccak256\":\"0x787c096e5b2d4e3d1a97ca2892867e4f85195edb36e034cb6b6762d18a360240\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ae3fa00b5b2a3a3485d89eb47bccc1c783c9643ee34e5056776dbdee630bbe50\",\"dweb:/ipfs/QmdBvQSFty6Ww6zP66kpw2aTXGfNDeQSg2nmaTmpSsVgtp\"]},\"script/GrantPermission.s.sol\":{\"keccak256\":\"0x0a5febeefdccba9a2f8773e6ee5b132e41600c914e59052d7548ed1bd14534c7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a64b71a3e9a519e9e5059c9b9358bf179c6c9338eab086ef5a515b7ba6625cbf\",\"dweb:/ipfs/QmQKJXMG2HV9CbJJ9YLxg4oko8XKA6hSnBntTp9oTDBgds\"]},\"src/contracts/core/EigenLayrDelegation.sol\":{\"keccak256\":\"0x978897da9872d064fca4e0d9a3dfb9ae45307398d579ddb529ddf422f9714657\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://269496038010d6b42f949206d388d177b79a5f1f711e460869d095ff074e60b6\",\"dweb:/ipfs/QmPytBkymcwqywFTJ3HsCHjJGdEAVfjihd3mXrzSZbhgX6\"]},\"src/contracts/core/EigenLayrDelegationStorage.sol\":{\"keccak256\":\"0xa465771a204d2226bedec6ba83ea7cafcb5851caf7b1fdf274070d411838a637\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://db4829529f094a305a5064a28aebc6936bfd997e82230aea990b4e7a2830642f\",\"dweb:/ipfs/QmW8hc8uNEUTWLZteUn88n2LGe6r6pQHELzBBB3M2hLoia\"]},\"src/contracts/core/InvestmentManager.sol\":{\"keccak256\":\"0xd0a5022b143389b33d0c7ea13e384c4f849217f24b415d714e380e053b2bad4c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://50d7e10399f72d3cdc489b4c3e0fcfb4d7e4178c9ed3491549a3a5cf59d384d1\",\"dweb:/ipfs/QmYRNdoBpWGbjjD2JwMDiUPWJXVjhnRGQCnY4gbwGaGRCG\"]},\"src/contracts/core/InvestmentManagerStorage.sol\":{\"keccak256\":\"0x70d9b59280ed75693f9ed31f66cd2ad9e6caee82cf2b22be0b8d1d2b54fab461\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e5e8f2342ab8daf8d69f7612597330230f26f01933dcfd14c8faaee0bc70497b\",\"dweb:/ipfs/QmUfAjADZULFbNma48pSaCWik3UNB9p4aCMGt3mNGybLLW\"]},\"src/contracts/interfaces/IEigenLayrDelegation.sol\":{\"keccak256\":\"0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21\",\"dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5\"]},\"src/contracts/interfaces/IInvestmentManager.sol\":{\"keccak256\":\"0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34\",\"dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw\"]},\"src/contracts/interfaces/IInvestmentStrategy.sol\":{\"keccak256\":\"0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52\",\"dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c\",\"dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3\"]},\"src/contracts/interfaces/IRegistryPermission.sol\":{\"keccak256\":\"0x5a19ffe942fa540af5b4989590e7378ebbdfec7234a8e64b70d15dd57b4beed3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbfd03c6d589513cdfcf11814461d28fc5af5c705b48ac7507073cd8f8eacc2b\",\"dweb:/ipfs/QmddUJh6nU7twBfYheBXX5rVHHHkgNJrrcEPW5QCKGZcyQ\"]},\"src/contracts/interfaces/IServiceManager.sol\":{\"keccak256\":\"0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2\",\"dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32\",\"dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr\"]},\"src/contracts/strategies/InvestmentStrategyBase.sol\":{\"keccak256\":\"0x12588adda1d1f38acc67e9ea4f20daa144a20e44c4f596e432cd335a837776e8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6a2707c597834660d841b49b4e74fd5a492dbd61fe98308389fc4034f569569c\",\"dweb:/ipfs/QmU8miWd1mr5UWrDwhzHoXYmxjnR7shwuJiPgxMhtMd35H\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract EigenLayrDelegation",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenTotalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "investmentManager",
          "outputs": [
            {
              "internalType": "contract InvestmentManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mantle",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mantleFirstStrat",
          "outputs": [
            {
              "internalType": "contract InvestmentStrategyBase",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mantleSencodStrat",
          "outputs": [
            {
              "internalType": "contract InvestmentStrategyBase",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rgPermission",
          "outputs": [
            {
              "internalType": "contract IRegistryPermission",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "run"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "script/GrantPermission.s.sol": "GrantPermission"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0xff9d5f742cefc0bb0d4b13b006c4d032bb24a5c1f7ce7031823230d0267dc0cd",
        "urls": [
          "bzz-raw://ace1c4590fabf3063db1662746726d3d2c7d39a0df03267f3a9bd1e12100594f",
          "dweb:/ipfs/QmduV224JB2TXqrFcJbjyy4bsH5PY3jFHzYV8bSJSUzceL"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x405c85da2b6a01ca3377cea271ad23ff43d9df86883c48ed7fada4533637509e",
        "urls": [
          "bzz-raw://4931d09716433bc7115554de6504b3aeb675490cfe525295e438c0e7bab810c4",
          "dweb:/ipfs/QmfLV7CuKtumh6R2mTz4duuGE2kffi5STzq2NahLxGfuWM"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4e0b487da265a218cb3949e1363614362202c92fb68f95aea906e993d76c6278",
        "urls": [
          "bzz-raw://dbd76a5b7e4503db1319d8bfb230e50787b5c993764442815bb1d6da94cd721e",
          "dweb:/ipfs/QmUpNH6vJ4a6a8YFYy5SR6va8KqT7mX2QCtT1haBQHYPA8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe758e38e94b1af29f4e8907124553bea067fdc19e76ba211ddba9b7ca75785ce",
        "urls": [
          "bzz-raw://5b49649a6c9b123fc1948565ed6a03b44eebbf84631fce80901db05629c80107",
          "dweb:/ipfs/QmZ3GRymzdgTupEwtYyGANhVWeQ8H6sqVKi7xGP7HXkwEn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xbe41d06efd6f3de49ca2d31da1996e367ff8728f1a11d7255bcd29ff997c8698",
        "urls": [
          "bzz-raw://f3c94d0f4dddad6147aed4a0df9524f6be529f7815c1029cabf9c9245cb4adf4",
          "dweb:/ipfs/QmW8Dgv6y5D2ZiNU6G4i8qifDkPyYtF7e7PPi3j9oK8ygm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xbaa90c891304799f6aa4039eae4b59afc0b59ce3bcc647f3fc2bbf5a04b17f1e",
        "urls": [
          "bzz-raw://1cc3f5b077759f92f28ba4182d9410aa8fd586d7efc5f76bdd22228bf2d227f0",
          "dweb:/ipfs/QmbLPLb31LxAyB7GWir5AssC1TYVHqhBsN6R7APj2UV9fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x34d5fd3e73f17311fc4ae0ec192c59d5e46d585045017b41a78b8c75ab387d9d",
        "urls": [
          "bzz-raw://11224aad5e5e78cda2e0e8456e27121ece04e725a24d63568fa56f100dc47fb3",
          "dweb:/ipfs/QmWrpMpotNwYyWcZJUuRcwas9nuy7KYsFTQ1EELUdWQRww"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x768fcac57789d8edb0b4c8e02bad17b15faeebbc3c8b2c8ec473b485cc0b59fe",
        "urls": [
          "bzz-raw://422e724988089c9f08fab930fe24ae9fd593cd069d488a36084ba5a3d46fcfcf",
          "dweb:/ipfs/QmQ64LQm7jCherXKciXHZmy1Xcd6oub1Lx96WVbfZaxATP"
        ],
        "license": "MIT"
      },
      "script/EigenLayerParser.sol": {
        "keccak256": "0x787c096e5b2d4e3d1a97ca2892867e4f85195edb36e034cb6b6762d18a360240",
        "urls": [
          "bzz-raw://ae3fa00b5b2a3a3485d89eb47bccc1c783c9643ee34e5056776dbdee630bbe50",
          "dweb:/ipfs/QmdBvQSFty6Ww6zP66kpw2aTXGfNDeQSg2nmaTmpSsVgtp"
        ],
        "license": "UNLICENSED"
      },
      "script/GrantPermission.s.sol": {
        "keccak256": "0x0a5febeefdccba9a2f8773e6ee5b132e41600c914e59052d7548ed1bd14534c7",
        "urls": [
          "bzz-raw://a64b71a3e9a519e9e5059c9b9358bf179c6c9338eab086ef5a515b7ba6625cbf",
          "dweb:/ipfs/QmQKJXMG2HV9CbJJ9YLxg4oko8XKA6hSnBntTp9oTDBgds"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/core/EigenLayrDelegation.sol": {
        "keccak256": "0x978897da9872d064fca4e0d9a3dfb9ae45307398d579ddb529ddf422f9714657",
        "urls": [
          "bzz-raw://269496038010d6b42f949206d388d177b79a5f1f711e460869d095ff074e60b6",
          "dweb:/ipfs/QmPytBkymcwqywFTJ3HsCHjJGdEAVfjihd3mXrzSZbhgX6"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/core/EigenLayrDelegationStorage.sol": {
        "keccak256": "0xa465771a204d2226bedec6ba83ea7cafcb5851caf7b1fdf274070d411838a637",
        "urls": [
          "bzz-raw://db4829529f094a305a5064a28aebc6936bfd997e82230aea990b4e7a2830642f",
          "dweb:/ipfs/QmW8hc8uNEUTWLZteUn88n2LGe6r6pQHELzBBB3M2hLoia"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/core/InvestmentManager.sol": {
        "keccak256": "0xd0a5022b143389b33d0c7ea13e384c4f849217f24b415d714e380e053b2bad4c",
        "urls": [
          "bzz-raw://50d7e10399f72d3cdc489b4c3e0fcfb4d7e4178c9ed3491549a3a5cf59d384d1",
          "dweb:/ipfs/QmYRNdoBpWGbjjD2JwMDiUPWJXVjhnRGQCnY4gbwGaGRCG"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/core/InvestmentManagerStorage.sol": {
        "keccak256": "0x70d9b59280ed75693f9ed31f66cd2ad9e6caee82cf2b22be0b8d1d2b54fab461",
        "urls": [
          "bzz-raw://e5e8f2342ab8daf8d69f7612597330230f26f01933dcfd14c8faaee0bc70497b",
          "dweb:/ipfs/QmUfAjADZULFbNma48pSaCWik3UNB9p4aCMGt3mNGybLLW"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IEigenLayrDelegation.sol": {
        "keccak256": "0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e",
        "urls": [
          "bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21",
          "dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IInvestmentManager.sol": {
        "keccak256": "0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100",
        "urls": [
          "bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34",
          "dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IInvestmentStrategy.sol": {
        "keccak256": "0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb",
        "urls": [
          "bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52",
          "dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975",
        "urls": [
          "bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c",
          "dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IRegistryPermission.sol": {
        "keccak256": "0x5a19ffe942fa540af5b4989590e7378ebbdfec7234a8e64b70d15dd57b4beed3",
        "urls": [
          "bzz-raw://dbfd03c6d589513cdfcf11814461d28fc5af5c705b48ac7507073cd8f8eacc2b",
          "dweb:/ipfs/QmddUJh6nU7twBfYheBXX5rVHHHkgNJrrcEPW5QCKGZcyQ"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IServiceManager.sol": {
        "keccak256": "0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4",
        "urls": [
          "bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2",
          "dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04",
        "urls": [
          "bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32",
          "dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/strategies/InvestmentStrategyBase.sol": {
        "keccak256": "0x12588adda1d1f38acc67e9ea4f20daa144a20e44c4f596e432cd335a837776e8",
        "urls": [
          "bzz-raw://6a2707c597834660d841b49b4e74fd5a492dbd61fe98308389fc4034f569569c",
          "dweb:/ipfs/QmU8miWd1mr5UWrDwhzHoXYmxjnR7shwuJiPgxMhtMd35H"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "script/GrantPermission.s.sol",
    "id": 28989,
    "exportedSymbols": {
      "Address": [
        26111
      ],
      "AddressUpgradeable": [
        23638
      ],
      "Context": [
        26133
      ],
      "ContextUpgradeable": [
        23680
      ],
      "DSTest": [
        1680
      ],
      "ECDSA": [
        26729
      ],
      "EigenLayerParser": [
        28895
      ],
      "EigenLayrDelegation": [
        29736
      ],
      "EigenLayrDelegationStorage": [
        29797
      ],
      "GrantPermission": [
        28988
      ],
      "IERC1155": [
        24701
      ],
      "IERC165": [
        26741
      ],
      "IERC20": [
        25366
      ],
      "IERC20Permit": [
        25471
      ],
      "IEigenLayrDelegation": [
        30977
      ],
      "IInvestmentManager": [
        31085
      ],
      "IInvestmentStrategy": [
        31179
      ],
      "IPauserRegistry": [
        31195
      ],
      "IRegistryPermission": [
        31431
      ],
      "IServiceManager": [
        31461
      ],
      "Initializable": [
        23335
      ],
      "InvestmentManager": [
        30584
      ],
      "InvestmentManagerStorage": [
        30647
      ],
      "InvestmentStrategyBase": [
        38198
      ],
      "Math": [
        27606
      ],
      "Ownable": [
        23793
      ],
      "OwnableUpgradeable": [
        23184
      ],
      "Pausable": [
        37670
      ],
      "ReentrancyGuardUpgradeable": [
        23394
      ],
      "SafeERC20": [
        25781
      ],
      "Script": [
        1943
      ],
      "StdStorage": [
        4971
      ],
      "Strings": [
        26368
      ],
      "Test": [
        4873
      ],
      "Vm": [
        6924
      ],
      "console": [
        14988
      ],
      "console2": [
        23052
      ],
      "stdError": [
        4943
      ],
      "stdJson": [
        2303
      ],
      "stdMath": [
        6212
      ],
      "stdStorage": [
        6073
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:977:41",
    "nodes": [
      {
        "id": 28897,
        "nodeType": "PragmaDirective",
        "src": "39:23:41",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 28898,
        "nodeType": "ImportDirective",
        "src": "64:32:41",
        "nodes": [],
        "absolutePath": "script/EigenLayerParser.sol",
        "file": "./EigenLayerParser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28989,
        "sourceUnit": 28896,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28988,
        "nodeType": "ContractDefinition",
        "src": "289:726:41",
        "nodes": [
          {
            "id": 28987,
            "nodeType": "FunctionDefinition",
            "src": "356:657:41",
            "nodes": [],
            "body": {
              "id": 28986,
              "nodeType": "Block",
              "src": "380:633:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28907,
                      "name": "parseEigenLayerParams",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28894,
                      "src": "390:21:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 28908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "390:23:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28909,
                  "nodeType": "ExpressionStatement",
                  "src": "390:23:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 28910,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "423:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$6924",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 28912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startBroadcast",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6603,
                      "src": "423:17:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 28913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:19:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28914,
                  "nodeType": "ExpressionStatement",
                  "src": "423:19:41"
                },
                {
                  "body": {
                    "id": 28979,
                    "nodeType": "Block",
                    "src": "489:490:41",
                    "statements": [
                      {
                        "assignments": [
                          28926
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 28926,
                            "mutability": "mutable",
                            "name": "operatorAddr",
                            "nameLocation": "511:12:41",
                            "nodeType": "VariableDeclaration",
                            "scope": 28979,
                            "src": "503:20:41",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 28925,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "503:7:41",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 28945,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 28929,
                              "name": "configJson",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28790,
                              "src": "546:10:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "2e646c6e5b",
                                  "id": 28933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "572:7:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_9611b85dbcc2f77d388a2283c5862aa6e97d44e661f4eb6b21839a0536c71fdf",
                                    "typeString": "literal_string \".dln[\""
                                  },
                                  "value": ".dln["
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 28939,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 28916,
                                          "src": "607:1:41",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 28937,
                                          "name": "vm",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1711,
                                          "src": "595:2:41",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Vm_$6924",
                                            "typeString": "contract Vm"
                                          }
                                        },
                                        "id": 28938,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "toString",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 6694,
                                        "src": "595:11:41",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (uint256) external returns (string memory)"
                                        }
                                      },
                                      "id": 28940,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "595:14:41",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    {
                                      "hexValue": "5d2e61646472657373",
                                      "id": 28941,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "611:11:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_ff64e5fae853011074c71c72906bd9198a3ecf9dd11ac61428c78fa28c9f06b5",
                                        "typeString": "literal_string \"].address\""
                                      },
                                      "value": "].address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_ff64e5fae853011074c71c72906bd9198a3ecf9dd11ac61428c78fa28c9f06b5",
                                        "typeString": "literal_string \"].address\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 28935,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "581:6:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                        "typeString": "type(string storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 28934,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "581:6:41",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 28936,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "concat",
                                    "nodeType": "MemberAccess",
                                    "src": "581:13:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () pure returns (string memory)"
                                    }
                                  },
                                  "id": 28942,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "581:42:41",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_9611b85dbcc2f77d388a2283c5862aa6e97d44e661f4eb6b21839a0536c71fdf",
                                    "typeString": "literal_string \".dln[\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 28931,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "558:6:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 28930,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "558:6:41",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 28932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "558:13:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 28943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "558:66:41",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 28927,
                              "name": "stdJson",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2303,
                              "src": "526:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_stdJson_$2303_$",
                                "typeString": "type(library stdJson)"
                              }
                            },
                            "id": 28928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "readAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2186,
                            "src": "526:19:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory,string memory) returns (address)"
                            }
                          },
                          "id": 28944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "526:99:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "503:122:41"
                      },
                      {
                        "assignments": [
                          28947
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 28947,
                            "mutability": "mutable",
                            "name": "stakerAddr",
                            "nameLocation": "647:10:41",
                            "nodeType": "VariableDeclaration",
                            "scope": 28979,
                            "src": "639:18:41",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 28946,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "639:7:41",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 28966,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 28950,
                              "name": "configJson",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28790,
                              "src": "680:10:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "2e7374616b65725b",
                                  "id": 28954,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "706:10:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8ce6aada85bd2710af9faa032d5f794cd14f514f21416eeeabe2908fa9ecd394",
                                    "typeString": "literal_string \".staker[\""
                                  },
                                  "value": ".staker["
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 28960,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 28916,
                                          "src": "744:1:41",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 28958,
                                          "name": "vm",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1711,
                                          "src": "732:2:41",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Vm_$6924",
                                            "typeString": "contract Vm"
                                          }
                                        },
                                        "id": 28959,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "toString",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 6694,
                                        "src": "732:11:41",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_string_memory_ptr_$",
                                          "typeString": "function (uint256) external returns (string memory)"
                                        }
                                      },
                                      "id": 28961,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "732:14:41",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    },
                                    {
                                      "hexValue": "5d2e61646472657373",
                                      "id": 28962,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "748:11:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_ff64e5fae853011074c71c72906bd9198a3ecf9dd11ac61428c78fa28c9f06b5",
                                        "typeString": "literal_string \"].address\""
                                      },
                                      "value": "].address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_ff64e5fae853011074c71c72906bd9198a3ecf9dd11ac61428c78fa28c9f06b5",
                                        "typeString": "literal_string \"].address\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 28956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "718:6:41",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                        "typeString": "type(string storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 28955,
                                        "name": "string",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "718:6:41",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 28957,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "concat",
                                    "nodeType": "MemberAccess",
                                    "src": "718:13:41",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                      "typeString": "function () pure returns (string memory)"
                                    }
                                  },
                                  "id": 28963,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "718:42:41",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_8ce6aada85bd2710af9faa032d5f794cd14f514f21416eeeabe2908fa9ecd394",
                                    "typeString": "literal_string \".staker[\""
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 28952,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "692:6:41",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                    "typeString": "type(string storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 28951,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "692:6:41",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 28953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "concat",
                                "nodeType": "MemberAccess",
                                "src": "692:13:41",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () pure returns (string memory)"
                                }
                              },
                              "id": 28964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "692:69:41",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 28948,
                              "name": "stdJson",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2303,
                              "src": "660:7:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_stdJson_$2303_$",
                                "typeString": "type(library stdJson)"
                              }
                            },
                            "id": 28949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "readAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2186,
                            "src": "660:19:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory,string memory) returns (address)"
                            }
                          },
                          "id": 28965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "660:102:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "639:123:41"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28970,
                              "name": "operatorAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28926,
                              "src": "819:12:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 28967,
                              "name": "rgPermission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28788,
                              "src": "776:12:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 28969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addOperatorRegisterPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31359,
                            "src": "776:42:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 28971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "776:56:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 28972,
                        "nodeType": "ExpressionStatement",
                        "src": "776:56:41"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28976,
                              "name": "stakerAddr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28947,
                              "src": "957:10:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 28973,
                              "name": "rgPermission",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28788,
                              "src": "921:12:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$31431",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 28975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "addDelegatorPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31374,
                            "src": "921:35:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 28977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "921:47:41",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 28978,
                        "nodeType": "ExpressionStatement",
                        "src": "921:47:41"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28919,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28916,
                      "src": "472:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 28920,
                      "name": "numDln",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28763,
                      "src": "476:6:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "472:10:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28980,
                  "initializationExpression": {
                    "assignments": [
                      28916
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 28916,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "465:1:41",
                        "nodeType": "VariableDeclaration",
                        "scope": 28980,
                        "src": "457:9:41",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 28915,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "457:7:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 28918,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 28917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "469:1:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "457:13:41"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 28923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "484:3:41",
                      "subExpression": {
                        "id": 28922,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28916,
                        "src": "484:1:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 28924,
                    "nodeType": "ExpressionStatement",
                    "src": "484:3:41"
                  },
                  "nodeType": "ForStatement",
                  "src": "452:527:41"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 28981,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "988:2:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$6924",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 28983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopBroadcast",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6616,
                      "src": "988:16:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 28984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "988:18:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28985,
                  "nodeType": "ExpressionStatement",
                  "src": "988:18:41"
                }
              ]
            },
            "functionSelector": "c0406226",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "run",
            "nameLocation": "365:3:41",
            "parameters": {
              "id": 28905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "368:2:41"
            },
            "returnParameters": {
              "id": 28906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:41"
            },
            "scope": 28988,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28899,
              "name": "Script",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1943,
              "src": "317:6:41"
            },
            "id": 28900,
            "nodeType": "InheritanceSpecifier",
            "src": "317:6:41"
          },
          {
            "baseName": {
              "id": 28901,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1680,
              "src": "325:6:41"
            },
            "id": 28902,
            "nodeType": "InheritanceSpecifier",
            "src": "325:6:41"
          },
          {
            "baseName": {
              "id": 28903,
              "name": "EigenLayerParser",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28895,
              "src": "333:16:41"
            },
            "id": 28904,
            "nodeType": "InheritanceSpecifier",
            "src": "333:16:41"
          }
        ],
        "canonicalName": "GrantPermission",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28988,
          28895,
          1680,
          1943
        ],
        "name": "GrantPermission",
        "nameLocation": "298:15:41",
        "scope": 28989,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 41
}