{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "_investmentManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newShares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "explanation",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_underlyingToken",
          "type": "address"
        },
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentManager",
      "outputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "sharesToUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "sharesToUnderlyingView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "underlyingToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "underlyingToSharesView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userUnderlyingView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161154338038061154383398101604081905261002f9161010a565b6001600160a01b03811660805261004461004a565b5061013a565b600054610100900460ff16156100b65760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015610108576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60006020828403121561011c57600080fd5b81516001600160a01b038116811461013357600080fd5b9392505050565b6080516113d961016a600039600081816101ad015281816104e3015281816107e801526108b301526113d96000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637a8b2637116100ad578063ce7c2ac211610071578063ce7c2ac214610280578063d9caed1214610293578063e3dae51c146102a6578063f3e73875146102b9578063fabc1cbc146102cc57600080fd5b80637a8b263714610219578063886f11951461022c5780638c871019146102455780638f6a624014610258578063ab5921e11461026b57600080fd5b8063485cc955116100f4578063485cc955146101955780634b31bb10146101a8578063553ca5f8146101cf5780635ac86ab7146101e25780635c975abb1461021157600080fd5b8063136439dd146101265780632495a5991461013b5780633a98ef391461016b57806347e7ef2414610182575b600080fd5b61013961013436600461108c565b6102df565b005b60025461014e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61017460035481565b604051908152602001610162565b6101746101903660046110bd565b610483565b6101396101a33660046110e9565b610611565b61014e7f000000000000000000000000000000000000000000000000000000000000000081565b6101746101dd366004611122565b610742565b6102016101f036600461113f565b6001805460ff9092161b9081161490565b6040519015158152602001610162565b600154610174565b61017461022736600461108c565b610756565b60005461014e906201000090046001600160a01b031681565b61017461025336600461108c565b610787565b610174610266366004611122565b610792565b6102736107a0565b6040516101629190611192565b61017461028e366004611122565b6107c0565b6101396102a13660046111c5565b610855565b6101746102b436600461108c565b610a82565b6101746102c736600461108c565b610ac8565b6101396102da36600461108c565b610ad3565b600060029054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190611206565b6001600160a01b0316336001600160a01b0316146103cc5760405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b60648201526084015b60405180910390fd5b600154818116146104455760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016103c3565b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b600180546000918291811614156104d85760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016103c3565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105205760405162461bcd60e51b81526004016103c390611223565b6002546001600160a01b038581169116146105a5576040805162461bcd60e51b81526020600482015260248101919091527f496e766573746d656e745374726174656779426173652e6465706f7369743a2060448201527f43616e206f6e6c79206465706f73697420756e6465726c79696e67546f6b656e60648201526084016103c3565b6000836105b0610c72565b6105ba9190611285565b90508015806105c95750600354155b156105d6578392506105f2565b80600354856105e5919061129c565b6105ef91906112bb565b92505b826003600082825461060491906112dd565b9091555050505092915050565b600054610100900460ff16158080156106315750600054600160ff909116105b8061064b5750303b15801561064b575060005460ff166001145b6106ae5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103c3565b6000805460ff1916600117905580156106d1576000805461ff0019166101001790555b600280546001600160a01b0319166001600160a01b0385161790556106f7826000610ce4565b801561073d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6000610750610227836107c0565b92915050565b600060035460001415610767575090565b60035482610773610c72565b61077d919061129c565b61075091906112bb565b600061075082610a82565b60006107506102c7836107c0565b606060405180608001604052806057815260200161134d60579139905090565b604051636be2343f60e01b81526001600160a01b0382811660048301523060248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690636be2343f90604401602060405180830381865afa158015610831573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075091906112f5565b60018054600290811614156108a85760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016103c3565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108f05760405162461bcd60e51b81526004016103c390611223565b6002546001600160a01b038481169116146109815760405162461bcd60e51b815260206004820152604560248201527f496e766573746d656e745374726174656779426173652e77697468647261773a60448201527f2043616e206f6e6c7920776974686472617720746865207374726174656779206064820152643a37b5b2b760d91b608482015260a4016103c3565b600354821115610a1f5760405162461bcd60e51b815260206004820152605760248201527f496e766573746d656e745374726174656779426173652e77697468647261773a60448201527f20616d6f756e74536861726573206d757374206265206c657373207468616e2060648201527f6f7220657175616c20746f20746f74616c536861726573000000000000000000608482015260a4016103c3565b60038054838103909155600083821415610a4257610a3b610c72565b9050610a63565b8184610a4c610c72565b610a56919061129c565b610a6091906112bb565b90505b600254610a7a906001600160a01b03168783610df2565b505050505050565b600080610a8d610c72565b9050801580610a9c5750600354155b15610aa8575090919050565b8060035484610ab7919061129c565b610ac191906112bb565b9392505050565b600061075082610756565b600060029054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a9190611206565b6001600160a01b0316336001600160a01b031614610bbd5760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b60648201526084016103c3565b600154198119600154191614610c3b5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016103c3565b600181905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610478565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf91906112f5565b905090565b6000546201000090046001600160a01b0316158015610d0b57506001600160a01b03821615155b610d8d5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016103c3565b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261073d92869291600091610e82918516908490610eff565b80519091501561073d5780806020019051810190610ea0919061130e565b61073d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103c3565b6060610f0e8484600085610f16565b949350505050565b606082471015610f775760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103c3565b600080866001600160a01b03168587604051610f939190611330565b60006040518083038185875af1925050503d8060008114610fd0576040519150601f19603f3d011682016040523d82523d6000602084013e610fd5565b606091505b5091509150610fe687838387610ff1565b979650505050505050565b6060831561105d578251611056576001600160a01b0385163b6110565760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c3565b5081610f0e565b610f0e83838151156110725781518083602001fd5b8060405162461bcd60e51b81526004016103c39190611192565b60006020828403121561109e57600080fd5b5035919050565b6001600160a01b03811681146110ba57600080fd5b50565b600080604083850312156110d057600080fd5b82356110db816110a5565b946020939093013593505050565b600080604083850312156110fc57600080fd5b8235611107816110a5565b91506020830135611117816110a5565b809150509250929050565b60006020828403121561113457600080fd5b8135610ac1816110a5565b60006020828403121561115157600080fd5b813560ff81168114610ac157600080fd5b60005b8381101561117d578181015183820152602001611165565b8381111561118c576000848401525b50505050565b60208152600082518060208401526111b1816040850160208701611162565b601f01601f19169190910160400192915050565b6000806000606084860312156111da57600080fd5b83356111e5816110a5565b925060208401356111f5816110a5565b929592945050506040919091013590565b60006020828403121561121857600080fd5b8151610ac1816110a5565b6020808252602c908201527f496e766573746d656e745374726174656779426173652e6f6e6c79496e76657360408201526b3a36b2b73a26b0b730b3b2b960a11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156112975761129761126f565b500390565b60008160001904831182151516156112b6576112b661126f565b500290565b6000826112d857634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156112f0576112f061126f565b500190565b60006020828403121561130757600080fd5b5051919050565b60006020828403121561132057600080fd5b81518015158114610ac157600080fd5b60008251611342818460208701611162565b919091019291505056fe4261736520496e766573746d656e74537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73a2646970667358221220cc28d9232cbd66b2909e7690411b1c27a1dbcc7d18d6279767567a5e68681bc364736f6c634300080c0033",
    "sourceMap": "836:9194:77:-:0;;;1839:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1900:38:77;;;;1948:22;:20;:22::i;:::-;1839:138;836:9194;;5388:279:8;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:8;;539:2:96;5447:66:8;;;521:21:96;578:2;558:18;;;551:30;617:34;597:18;;;590:62;-1:-1:-1;;;668:18:96;;;661:37;715:19;;5447:66:8;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:8;5588:15;5573:30;;;;;;5622:28;;887:36:96;;;5622:28:8;;875:2:96;860:18;5622:28:8;;;;;;;5523:138;5388:279::o;14:318:96:-;112:6;165:2;153:9;144:7;140:23;136:32;133:52;;;181:1;178;171:12;133:52;207:16;;-1:-1:-1;;;;;252:31:96;;242:42;;232:70;;298:1;295;288:12;232:70;321:5;14:318;-1:-1:-1;;;14:318:96:o;745:184::-;836:9194:77;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "836:9194:77:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:392:75;;;;;;:::i;:::-;;:::i;:::-;;1248:29:77;;;;;-1:-1:-1;;;;;1248:29:77;;;;;;-1:-1:-1;;;;;379:32:96;;;361:51;;349:2;334:18;1248:29:77;;;;;;;;1361:26;;;;;;;;;569:25:96;;;557:2;542:18;1361:26:77;423:177:96;2807:938:77;;;;;;:::i;:::-;;:::i;2065:205::-;;;;;;:::i;:::-;;:::i;1113:53::-;;;;;8871:142;;;;;;:::i;:::-;;:::i;4796:149:75:-;;;;;;:::i;:::-;4885:1;4914:7;;4885:10;;;;;4914:14;;;4913:24;;4796:149;;;;2478:14:96;;2471:22;2453:41;;2441:2;2426:18;4796:149:75;2313:187:96;4608:87:75;4681:7;;4608:87;;6341:267:77;;;;;;:::i;:::-;;:::i;906:37:75:-;;;;;;;;-1:-1:-1;;;;;906:37:75;;;8477:158:77;;;;;;:::i;:::-;;:::i;9252:129::-;;;;;;:::i;:::-;;:::i;5700:191::-;;;:::i;:::-;;;;;;;:::i;9557:::-;;;;;;:::i;:::-;;:::i;4220:1272::-;;;;;;:::i;:::-;;:::i;7678:336::-;;;;;;:::i;:::-;;:::i;7061:157::-;;;;;;:::i;:::-;;:::i;4135:403:75:-;;;;;;:::i;:::-;;:::i;3259:392::-;1557:14;;;;;;;;;-1:-1:-1;;;;;1557:14:75;-1:-1:-1;;;;;1557:21:75;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1543:37:75;:10;-1:-1:-1;;;;;1543:37:75;;1535:90;;;;-1:-1:-1;;;1535:90:75;;4348:2:96;1535:90:75;;;4330:21:96;4387:2;4367:18;;;4360:30;4426:34;4406:18;;;4399:62;-1:-1:-1;;;4477:18:96;;;4470:38;4525:19;;1535:90:75;;;;;;;;;3491:7:::1;::::0;3461:25;;::::1;3460:38;3452:107;;;::::0;-1:-1:-1;;;3452:107:75;;4757:2:96;3452:107:75::1;::::0;::::1;4739:21:96::0;4796:2;4776:18;;;4769:30;4835:34;4815:18;;;4808:62;4906:26;4886:18;;;4879:54;4950:19;;3452:107:75::1;4555:420:96::0;3452:107:75::1;3569:7;:25:::0;;;3609:35:::1;::::0;569:25:96;;;3616:10:75::1;::::0;3609:35:::1;::::0;557:2:96;542:18;3609:35:75::1;;;;;;;;3259:392:::0;:::o;2807:938:77:-;4885:1:75;4914:7;;2994:17:77;;;;4914:14:75;;4913:24;2187:14;2179:52;;;;-1:-1:-1;;;2179:52:75;;5182:2:96;2179:52:75;;;5164:21:96;5221:2;5201:18;;;5194:30;-1:-1:-1;;;5240:18:96;;;5233:55;5305:18;;2179:52:75;4980:349:96;2179:52:75;1579:10:77::1;-1:-1:-1::0;;;;;1601:17:77::1;1579:40;;1571:97;;;;-1:-1:-1::0;;;1571:97:77::1;;;;;;;:::i;:::-;3044:15:::2;::::0;-1:-1:-1;;;;;3035:24:77;;::::2;3044:15:::0;::::2;3035:24;3027:101;;;::::0;;-1:-1:-1;;;3027:101:77;;5949:2:96;3027:101:77::2;::::0;::::2;5931:21:96::0;5968:18;;;5961:30;;;;6027:34;6007:18;;;6000:62;6098:34;6078:18;;;6071:62;6150:19;;3027:101:77::2;5747:428:96::0;3027:101:77::2;3440:25;3486:6;3468:15;:13;:15::i;:::-;:24;;;;:::i;:::-;3440:52:::0;-1:-1:-1;3506:22:77;;;:42:::2;;-1:-1:-1::0;3532:11:77::2;::::0;:16;3506:42:::2;3502:176;;;3576:6;3564:18;;3502:176;;;3650:17;3635:11;;3626:6;:20;;;;:::i;:::-;3625:42;;;;:::i;:::-;3613:54;;3502:176;3703:9;3688:11;;:24;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;2807:938:77;;;;;:::o;2065:205::-;3111:19:8;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:8;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:8;1476:19:10;:23;;;3219:66:8;;-1:-1:-1;3268:12:8;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:8;;7172:2:96;3157:201:8;;;7154:21:96;7211:2;7191:18;;;7184:30;7250:34;7230:18;;;7223:62;-1:-1:-1;;;7301:18:96;;;7294:44;7355:19;;3157:201:8;6970:410:96;3157:201:8;3368:12;:16;;-1:-1:-1;;3368:16:8;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:8;;;;;3394:65;2172:15:77::1;:34:::0;;-1:-1:-1;;;;;;2172:34:77::1;-1:-1:-1::0;;;;;2172:34:77;::::1;;::::0;;2216:47:::1;2234:15:::0;-1:-1:-1;2216:17:77::1;:47::i;:::-;3483:14:8::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:8;;;3553:14;;-1:-1:-1;7537:36:96;;3553:14:8;;7525:2:96;7510:18;3553:14:8;;;;;;;3479:99;3101:483;2065:205:77;;:::o;8871:142::-;8944:7;8970:36;8993:12;9000:4;8993:6;:12::i;8970:36::-;8963:43;8871:142;-1:-1:-1;;8871:142:77:o;6341:267::-;6433:7;6456:11;;6471:1;6456:16;6452:150;;;-1:-1:-1;6495:12:77;6341:267::o;6452:150::-;6580:11;;6564:12;6546:15;:13;:15::i;:::-;:30;;;;:::i;:::-;6545:46;;;;:::i;8477:158::-;8562:7;8588:40;8611:16;8588:22;:40::i;9252:129::-;9316:7;9342:32;9361:12;9368:4;9361:6;:12::i;5700:191::-;5763:13;5788:96;;;;;;;;;;;;;;;;;;;5700:191;:::o;9557:::-;9642:99;;-1:-1:-1;;;9642:99:77;;-1:-1:-1;;;;;7843:15:96;;;9642:99:77;;;7825:34:96;9734:4:77;7875:18:96;;;7868:43;9616:7:77;;9661:17;9642:57;;;;;;7760:18:96;;9642:99:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4220:1272::-;1049:1;4914:7:75;;4885:10;4914:14;;;4913:24;2187:14;2179:52;;;;-1:-1:-1;;;2179:52:75;;5182:2:96;2179:52:75;;;5164:21:96;5221:2;5201:18;;;5194:30;-1:-1:-1;;;5240:18:96;;;5233:55;5305:18;;2179:52:75;4980:349:96;2179:52:75;1579:10:77::1;-1:-1:-1::0;;;;;1601:17:77::1;1579:40;;1571:97;;;;-1:-1:-1::0;;;1571:97:77::1;;;;;;;:::i;:::-;4450:15:::2;::::0;-1:-1:-1;;;;;4441:24:77;;::::2;4450:15:::0;::::2;4441:24;4433:106;;;::::0;-1:-1:-1;;;4433:106:77;;8313:2:96;4433:106:77::2;::::0;::::2;8295:21:96::0;8352:2;8332:18;;;8325:30;8391:34;8371:18;;;8364:62;8462:34;8442:18;;;8435:62;-1:-1:-1;;;8513:19:96;;;8506:36;8559:19;;4433:106:77::2;8111:473:96::0;4433:106:77::2;4586:11;;4570:12;:27;;4549:161;;;::::0;-1:-1:-1;;;4549:161:77;;8791:2:96;4549:161:77::2;::::0;::::2;8773:21:96::0;8830:2;8810:18;;;8803:30;8869:34;8849:18;;;8842:62;8940:34;8920:18;;;8913:62;9012:25;8991:19;;;8984:54;9055:19;;4549:161:77::2;8589:491:96::0;4549:161:77::2;4801:11;::::0;;4958:27;;::::2;::::0;;;4774:24:::2;5237:32:::0;;::::2;5233:190;;;5300:15;:13;:15::i;:::-;5285:30;;5233:190;;;5396:16;5380:12;5362:15;:13;:15::i;:::-;:30;;;;:::i;:::-;5361:51;;;;:::i;:::-;5346:66;;5233:190;5432:15;::::0;:53:::2;::::0;-1:-1:-1;;;;;5432:15:77::2;5461:9:::0;5472:12;5432:28:::2;:53::i;:::-;4423:1069;;4220:1272:::0;;;;:::o;7678:336::-;7765:7;7784:20;7807:15;:13;:15::i;:::-;7784:38;-1:-1:-1;7836:17:77;;;:37;;-1:-1:-1;7857:11:77;;:16;7836:37;7832:176;;;-1:-1:-1;7896:16:77;;7678:336;-1:-1:-1;7678:336:77:o;7832:176::-;7985:12;7970:11;;7951:16;:30;;;;:::i;:::-;7950:47;;;;:::i;:::-;7943:54;7678:336;-1:-1:-1;;;7678:336:77:o;7061:157::-;7149:7;7175:36;7198:12;7175:22;:36::i;4135:403:75:-;1705:14;;;;;;;;;-1:-1:-1;;;;;1705:14:75;-1:-1:-1;;;;;1705:23:75;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1691:39:75;:10;-1:-1:-1;;;;;1691:39:75;;1683:94;;;;-1:-1:-1;;;1683:94:75;;9287:2:96;1683:94:75;;;9269:21:96;9326:2;9306:18;;;9299:30;9365:34;9345:18;;;9338:62;-1:-1:-1;;;9416:18:96;;;9409:40;9466:19;;1683:94:75;9085:406:96;1683:94:75;4375:7:::1;;4374:8;4352:15;4351:16;4339:7;;4338:8;4337:31;4336:47;4328:116;;;::::0;-1:-1:-1;;;4328:116:75;;9698:2:96;4328:116:75::1;::::0;::::1;9680:21:96::0;9737:2;9717:18;;;9710:30;9776:34;9756:18;;;9749:62;9847:26;9827:18;;;9820:54;9891:19;;4328:116:75::1;9496:420:96::0;4328:116:75::1;4454:7;:25:::0;;;4494:37:::1;::::0;569:25:96;;;4503:10:75::1;::::0;4494:37:::1;::::0;557:2:96;542:18;4494:37:75::1;423:177:96::0;9899:129:77;9981:15;;:40;;-1:-1:-1;;;9981:40:77;;10015:4;9981:40;;;361:51:96;9955:7:77;;-1:-1:-1;;;;;9981:15:77;;:25;;334:18:96;;9981:40:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9974:47;;9899:129;:::o;2363:438:75:-;2524:1;2497:14;;;;-1:-1:-1;;;;;2497:14:75;2489:37;:79;;;;-1:-1:-1;;;;;;2530:38:75;;;;2489:79;2468:197;;;;-1:-1:-1;;;2468:197:75;;10331:2:96;2468:197:75;;;10313:21:96;10370:2;10350:18;;;10343:30;10409:34;10389:18;;;10382:62;10480:34;10460:18;;;10453:62;-1:-1:-1;;;10531:19:96;;;10524:38;10579:19;;2468:197:75;10129:475:96;2468:197:75;2675:7;:26;;;2716:36;;569:25:96;;;2723:10:75;;2716:36;;557:2:96;542:18;2716:36:75;;;;;;;-1:-1:-1;2762:14:75;:32;;-1:-1:-1;;;;;2762:32:75;;;;;-1:-1:-1;;;;;;2762:32:75;;;;;;;;;2363:438::o;763:205:28:-;902:58;;;-1:-1:-1;;;;;10801:32:96;;;902:58:28;;;10783:51:96;10850:18;;;;10843:34;;;902:58:28;;;;;;;;;;10756:18:96;;;;902:58:28;;;;;;;;-1:-1:-1;;;;;902:58:28;-1:-1:-1;;;902:58:28;;;4192:69;;;;;;;;;;;;;;;;875:86;;895:5;;902:58;-1:-1:-1;;4192:69:28;;:27;;;902:58;;4192:27;:69::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:28;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:28;;11372:2:96;4351:85:28;;;11354:21:96;11411:2;11391:18;;;11384:30;11450:34;11430:18;;;11423:62;-1:-1:-1;;;11501:18:96;;;11494:40;11551:19;;4351:85:28;11170:406:96;3872:223:29;4005:12;4036:52;4058:6;4066:4;4072:1;4075:12;4036:21;:52::i;:::-;4029:59;3872:223;-1:-1:-1;;;;3872:223:29:o;4959:446::-;5124:12;5181:5;5156:21;:30;;5148:81;;;;-1:-1:-1;;;5148:81:29;;11783:2:96;5148:81:29;;;11765:21:96;11822:2;11802:18;;;11795:30;11861:34;11841:18;;;11834:62;-1:-1:-1;;;11912:18:96;;;11905:36;11958:19;;5148:81:29;11581:402:96;5148:81:29;5240:12;5254:23;5281:6;-1:-1:-1;;;;;5281:11:29;5300:5;5307:4;5281:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5239:73;;;;5329:69;5356:6;5364:7;5373:10;5385:12;5329:26;:69::i;:::-;5322:76;4959:446;-1:-1:-1;;;;;;;4959:446:29:o;7465:628::-;7645:12;7673:7;7669:418;;;7700:17;;7696:286;;-1:-1:-1;;;;;1476:19:10;;;7907:60:29;;;;-1:-1:-1;;;7907:60:29;;12469:2:96;7907:60:29;;;12451:21:96;12508:2;12488:18;;;12481:30;12547:31;12527:18;;;12520:59;12596:18;;7907:60:29;12267:353:96;7907:60:29;-1:-1:-1;8002:10:29;7995:17;;7669:418;8043:33;8051:10;8063:12;8774:17;;:21;8770:379;;9002:10;8996:17;9058:15;9045:10;9041:2;9037:19;9030:44;8770:379;9125:12;9118:20;;-1:-1:-1;;;9118:20:29;;;;;;;;:::i;14:180:96:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:96;;14:180;-1:-1:-1;14:180:96:o;605:139::-;-1:-1:-1;;;;;688:31:96;;678:42;;668:70;;734:1;731;724:12;668:70;605:139;:::o;749:339::-;833:6;841;894:2;882:9;873:7;869:23;865:32;862:52;;;910:1;907;900:12;862:52;949:9;936:23;968:39;1001:5;968:39;:::i;:::-;1026:5;1078:2;1063:18;;;;1050:32;;-1:-1:-1;;;749:339:96:o;1093:445::-;1202:6;1210;1263:2;1251:9;1242:7;1238:23;1234:32;1231:52;;;1279:1;1276;1269:12;1231:52;1318:9;1305:23;1337:39;1370:5;1337:39;:::i;:::-;1395:5;-1:-1:-1;1452:2:96;1437:18;;1424:32;1465:41;1424:32;1465:41;:::i;:::-;1525:7;1515:17;;;1093:445;;;;;:::o;1779:255::-;1838:6;1891:2;1879:9;1870:7;1866:23;1862:32;1859:52;;;1907:1;1904;1897:12;1859:52;1946:9;1933:23;1965:39;1998:5;1965:39;:::i;2039:269::-;2096:6;2149:2;2137:9;2128:7;2124:23;2120:32;2117:52;;;2165:1;2162;2155:12;2117:52;2204:9;2191:23;2254:4;2247:5;2243:16;2236:5;2233:27;2223:55;;2274:1;2271;2264:12;2738:258;2810:1;2820:113;2834:6;2831:1;2828:13;2820:113;;;2910:11;;;2904:18;2891:11;;;2884:39;2856:2;2849:10;2820:113;;;2951:6;2948:1;2945:13;2942:48;;;2986:1;2977:6;2972:3;2968:16;2961:27;2942:48;;2738:258;;;:::o;3001:383::-;3150:2;3139:9;3132:21;3113:4;3182:6;3176:13;3225:6;3220:2;3209:9;3205:18;3198:34;3241:66;3300:6;3295:2;3284:9;3280:18;3275:2;3267:6;3263:15;3241:66;:::i;:::-;3368:2;3347:15;-1:-1:-1;;3343:29:96;3328:45;;;;3375:2;3324:54;;3001:383;-1:-1:-1;;3001:383:96:o;3389:488::-;3482:6;3490;3498;3551:2;3539:9;3530:7;3526:23;3522:32;3519:52;;;3567:1;3564;3557:12;3519:52;3606:9;3593:23;3625:39;3658:5;3625:39;:::i;:::-;3683:5;-1:-1:-1;3740:2:96;3725:18;;3712:32;3753:41;3712:32;3753:41;:::i;:::-;3389:488;;3813:7;;-1:-1:-1;;;3867:2:96;3852:18;;;;3839:32;;3389:488::o;3882:259::-;3952:6;4005:2;3993:9;3984:7;3980:23;3976:32;3973:52;;;4021:1;4018;4011:12;3973:52;4053:9;4047:16;4072:39;4105:5;4072:39;:::i;5334:408::-;5536:2;5518:21;;;5575:2;5555:18;;;5548:30;5614:34;5609:2;5594:18;;5587:62;-1:-1:-1;;;5680:2:96;5665:18;;5658:42;5732:3;5717:19;;5334:408::o;6180:127::-;6241:10;6236:3;6232:20;6229:1;6222:31;6272:4;6269:1;6262:15;6296:4;6293:1;6286:15;6312:125;6352:4;6380:1;6377;6374:8;6371:34;;;6385:18;;:::i;:::-;-1:-1:-1;6422:9:96;;6312:125::o;6442:168::-;6482:7;6548:1;6544;6540:6;6536:14;6533:1;6530:21;6525:1;6518:9;6511:17;6507:45;6504:71;;;6555:18;;:::i;:::-;-1:-1:-1;6595:9:96;;6442:168::o;6615:217::-;6655:1;6681;6671:132;;6725:10;6720:3;6716:20;6713:1;6706:31;6760:4;6757:1;6750:15;6788:4;6785:1;6778:15;6671:132;-1:-1:-1;6817:9:96;;6615:217::o;6837:128::-;6877:3;6908:1;6904:6;6901:1;6898:13;6895:39;;;6914:18;;:::i;:::-;-1:-1:-1;6950:9:96;;6837:128::o;7922:184::-;7992:6;8045:2;8033:9;8024:7;8020:23;8016:32;8013:52;;;8061:1;8058;8051:12;8013:52;-1:-1:-1;8084:16:96;;7922:184;-1:-1:-1;7922:184:96:o;10888:277::-;10955:6;11008:2;10996:9;10987:7;10983:23;10979:32;10976:52;;;11024:1;11021;11014:12;10976:52;11056:9;11050:16;11109:5;11102:13;11095:21;11088:5;11085:32;11075:60;;11131:1;11128;11121:12;11988:274;12117:3;12155:6;12149:13;12171:53;12217:6;12212:3;12205:4;12197:6;12193:17;12171:53;:::i;:::-;12240:16;;;;;11988:274;-1:-1:-1;;11988:274:96:o",
    "linkReferences": {},
    "immutableReferences": {
      "37839": [
        {
          "start": 429,
          "length": 32
        },
        {
          "start": 1251,
          "length": 32
        },
        {
          "start": 2024,
          "length": 32
        },
        {
          "start": 2227,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "deposit(address,uint256)": "47e7ef24",
    "explanation()": "ab5921e1",
    "initialize(address,address)": "485cc955",
    "investmentManager()": "4b31bb10",
    "pause(uint256)": "136439dd",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "shares(address)": "ce7c2ac2",
    "sharesToUnderlying(uint256)": "f3e73875",
    "sharesToUnderlyingView(uint256)": "7a8b2637",
    "totalShares()": "3a98ef39",
    "underlyingToShares(uint256)": "8c871019",
    "underlyingToSharesView(uint256)": "e3dae51c",
    "underlyingToken()": "2495a599",
    "unpause(uint256)": "fabc1cbc",
    "userUnderlying(address)": "8f6a6240",
    "userUnderlyingView(address)": "553ca5f8",
    "withdraw(address,address,uint256)": "d9caed12"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"_investmentManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"explanation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_underlyingToken\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentManager\",\"outputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToSharesView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"details\":\"This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's `depositIntoStrategy` function, and individual share balances are recorded in the investmentManager as well.\",\"params\":{\"amount\":\"is the amount of token being deposited\",\"token\":\"is the ERC20 token being deposited\"},\"returns\":{\"newShares\":\"is the number of new shares issued at the current exchange ratio.\"}},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"sharesToUnderlying(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"}},\"sharesToUnderlyingView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"}},\"underlyingToShares(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"}},\"underlyingToSharesView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"withdraw(address,address,uint256)\":{\"details\":\"This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's other functions, and individual share balances are recorded in the investmentManager as well.\",\"params\":{\"amountShares\":\"is the amount of shares being withdrawn\",\"token\":\"is the ERC20 token being transferred out\"}}},\"title\":\"Base implementation of `IInvestmentStrategy` interface, designed to be inherited from by more complex strategies.\",\"version\":1},\"userdoc\":{\"events\":{\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Since this contract is designed to be initializable, the constructor simply sets `investmentManager`, the only immutable variable.\"},\"deposit(address,uint256)\":{\"notice\":\"Used to deposit tokens into this InvestmentStrategy\"},\"explanation()\":{\"notice\":\"Currently returns a brief string explaining the strategy's goal & purpose, but for more complex strategies, may be a link to metadata that explains in more detail.\"},\"initialize(address,address)\":{\"notice\":\"Sets the `underlyingToken` and `pauserRegistry` for the strategy.\"},\"investmentManager()\":{\"notice\":\"EigenLayer's InvestmentManager contract\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"shares(address)\":{\"notice\":\"convenience function for fetching the current total shares of `user` in this strategy, by querying the `investmentManager` contract\"},\"sharesToUnderlying(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\"},\"sharesToUnderlyingView(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications\"},\"totalShares()\":{\"notice\":\"The total number of extant shares in thie InvestmentStrategy\"},\"underlyingToShares(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications\"},\"underlyingToSharesView(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications\"},\"underlyingToken()\":{\"notice\":\"The underyling token for shares in this InvestmentStrategy\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract.\"},\"userUnderlying(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications\"},\"userUnderlyingView(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Used to withdraw tokens from this InvestmentStrategy, to the `depositor`'s address\"}},\"notice\":\"Simple, basic, \\\"do-nothing\\\" InvestmentStrategy that holds a single underlying token and returns it on withdrawals. Implements minimal versions of the IInvestmentStrategy functions, this contract is designed to be inherited by more complex investment strategies, which can then override its functions as necessary.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/strategies/InvestmentStrategyBase.sol\":\"InvestmentStrategyBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe758e38e94b1af29f4e8907124553bea067fdc19e76ba211ddba9b7ca75785ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b49649a6c9b123fc1948565ed6a03b44eebbf84631fce80901db05629c80107\",\"dweb:/ipfs/QmZ3GRymzdgTupEwtYyGANhVWeQ8H6sqVKi7xGP7HXkwEn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xbe41d06efd6f3de49ca2d31da1996e367ff8728f1a11d7255bcd29ff997c8698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3c94d0f4dddad6147aed4a0df9524f6be529f7815c1029cabf9c9245cb4adf4\",\"dweb:/ipfs/QmW8Dgv6y5D2ZiNU6G4i8qifDkPyYtF7e7PPi3j9oK8ygm\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de\",\"dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V\"]},\"src/contracts/interfaces/IEigenLayrDelegation.sol\":{\"keccak256\":\"0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21\",\"dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5\"]},\"src/contracts/interfaces/IInvestmentManager.sol\":{\"keccak256\":\"0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34\",\"dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw\"]},\"src/contracts/interfaces/IInvestmentStrategy.sol\":{\"keccak256\":\"0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52\",\"dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c\",\"dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3\"]},\"src/contracts/interfaces/IServiceManager.sol\":{\"keccak256\":\"0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2\",\"dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32\",\"dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr\"]},\"src/contracts/strategies/InvestmentStrategyBase.sol\":{\"keccak256\":\"0x12588adda1d1f38acc67e9ea4f20daa144a20e44c4f596e432cd335a837776e8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6a2707c597834660d841b49b4e74fd5a492dbd61fe98308389fc4034f569569c\",\"dweb:/ipfs/QmU8miWd1mr5UWrDwhzHoXYmxjnR7shwuJiPgxMhtMd35H\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "_investmentManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newShares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "explanation",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_underlyingToken",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "investmentManager",
          "outputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "shares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToSharesView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "userUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(address,uint256)": {
            "details": "This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's `depositIntoStrategy` function, and individual share balances are recorded in the investmentManager as well.",
            "params": {
              "amount": "is the amount of token being deposited",
              "token": "is the ERC20 token being deposited"
            },
            "returns": {
              "newShares": "is the number of new shares issued at the current exchange ratio."
            }
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "sharesToUnderlying(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            }
          },
          "sharesToUnderlyingView(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            }
          },
          "underlyingToShares(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            }
          },
          "underlyingToSharesView(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "withdraw(address,address,uint256)": {
            "details": "This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's other functions, and individual share balances are recorded in the investmentManager as well.",
            "params": {
              "amountShares": "is the amount of shares being withdrawn",
              "token": "is the ERC20 token being transferred out"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Since this contract is designed to be initializable, the constructor simply sets `investmentManager`, the only immutable variable."
          },
          "deposit(address,uint256)": {
            "notice": "Used to deposit tokens into this InvestmentStrategy"
          },
          "explanation()": {
            "notice": "Currently returns a brief string explaining the strategy's goal & purpose, but for more complex strategies, may be a link to metadata that explains in more detail."
          },
          "initialize(address,address)": {
            "notice": "Sets the `underlyingToken` and `pauserRegistry` for the strategy."
          },
          "investmentManager()": {
            "notice": "EigenLayer's InvestmentManager contract"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "shares(address)": {
            "notice": "convenience function for fetching the current total shares of `user` in this strategy, by querying the `investmentManager` contract"
          },
          "sharesToUnderlying(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications"
          },
          "sharesToUnderlyingView(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications"
          },
          "totalShares()": {
            "notice": "The total number of extant shares in thie InvestmentStrategy"
          },
          "underlyingToShares(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications"
          },
          "underlyingToSharesView(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications"
          },
          "underlyingToken()": {
            "notice": "The underyling token for shares in this InvestmentStrategy"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract."
          },
          "userUnderlying(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
          },
          "userUnderlyingView(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
          },
          "withdraw(address,address,uint256)": {
            "notice": "Used to withdraw tokens from this InvestmentStrategy, to the `depositor`'s address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/strategies/InvestmentStrategyBase.sol": "InvestmentStrategyBase"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe758e38e94b1af29f4e8907124553bea067fdc19e76ba211ddba9b7ca75785ce",
        "urls": [
          "bzz-raw://5b49649a6c9b123fc1948565ed6a03b44eebbf84631fce80901db05629c80107",
          "dweb:/ipfs/QmZ3GRymzdgTupEwtYyGANhVWeQ8H6sqVKi7xGP7HXkwEn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0xbe41d06efd6f3de49ca2d31da1996e367ff8728f1a11d7255bcd29ff997c8698",
        "urls": [
          "bzz-raw://f3c94d0f4dddad6147aed4a0df9524f6be529f7815c1029cabf9c9245cb4adf4",
          "dweb:/ipfs/QmW8Dgv6y5D2ZiNU6G4i8qifDkPyYtF7e7PPi3j9oK8ygm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xb94eac067c85cd79a4195c0a1f4a878e9827329045c12475a0199f1ae17b9700",
        "urls": [
          "bzz-raw://2ad84b5dbf40ba9e944cc25bd0a98c51bafd49cff30efe5ef5aef921a70081de",
          "dweb:/ipfs/Qme8iCeqe9VdNgWktTTsSxUfHcJEXuvPaJpshWDzoWj56V"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IEigenLayrDelegation.sol": {
        "keccak256": "0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e",
        "urls": [
          "bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21",
          "dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IInvestmentManager.sol": {
        "keccak256": "0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100",
        "urls": [
          "bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34",
          "dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IInvestmentStrategy.sol": {
        "keccak256": "0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb",
        "urls": [
          "bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52",
          "dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975",
        "urls": [
          "bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c",
          "dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/interfaces/IServiceManager.sol": {
        "keccak256": "0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4",
        "urls": [
          "bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2",
          "dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04",
        "urls": [
          "bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32",
          "dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr"
        ],
        "license": "UNLICENSED"
      },
      "src/contracts/strategies/InvestmentStrategyBase.sol": {
        "keccak256": "0x12588adda1d1f38acc67e9ea4f20daa144a20e44c4f596e432cd335a837776e8",
        "urls": [
          "bzz-raw://6a2707c597834660d841b49b4e74fd5a492dbd61fe98308389fc4034f569569c",
          "dweb:/ipfs/QmU8miWd1mr5UWrDwhzHoXYmxjnR7shwuJiPgxMhtMd35H"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/strategies/InvestmentStrategyBase.sol",
    "id": 38199,
    "exportedSymbols": {
      "Address": [
        26111
      ],
      "AddressUpgradeable": [
        23638
      ],
      "IERC20": [
        25366
      ],
      "IERC20Permit": [
        25471
      ],
      "IEigenLayrDelegation": [
        30977
      ],
      "IInvestmentManager": [
        31085
      ],
      "IInvestmentStrategy": [
        31179
      ],
      "IPauserRegistry": [
        31195
      ],
      "IServiceManager": [
        31461
      ],
      "Initializable": [
        23335
      ],
      "InvestmentStrategyBase": [
        38198
      ],
      "Pausable": [
        37670
      ],
      "SafeERC20": [
        25781
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9992:77",
    "nodes": [
      {
        "id": 37813,
        "nodeType": "PragmaDirective",
        "src": "39:23:77",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 37814,
        "nodeType": "ImportDirective",
        "src": "64:46:77",
        "nodes": [],
        "absolutePath": "src/contracts/interfaces/IInvestmentManager.sol",
        "file": "../interfaces/IInvestmentManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38199,
        "sourceUnit": 31086,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37815,
        "nodeType": "ImportDirective",
        "src": "111:37:77",
        "nodes": [],
        "absolutePath": "src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38199,
        "sourceUnit": 37671,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37816,
        "nodeType": "ImportDirective",
        "src": "149:56:77",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38199,
        "sourceUnit": 25367,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37817,
        "nodeType": "ImportDirective",
        "src": "206:65:77",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38199,
        "sourceUnit": 25782,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 37818,
        "nodeType": "ImportDirective",
        "src": "272:72:77",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 38199,
        "sourceUnit": 23336,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 38198,
        "nodeType": "ContractDefinition",
        "src": "836:9194:77",
        "nodes": [
          {
            "id": 37829,
            "nodeType": "UsingForDirective",
            "src": "922:27:77",
            "nodes": [],
            "libraryName": {
              "id": 37826,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25781,
              "src": "928:9:77"
            },
            "typeName": {
              "id": 37828,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37827,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25366,
                "src": "942:6:77"
              },
              "referencedDeclaration": 25366,
              "src": "942:6:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$25366",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 37832,
            "nodeType": "VariableDeclaration",
            "src": "955:43:77",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_DEPOSITS",
            "nameLocation": "979:15:77",
            "scope": 38198,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 37830,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "955:5:77",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 37831,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "997:1:77",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 37835,
            "nodeType": "VariableDeclaration",
            "src": "1004:46:77",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_WITHDRAWALS",
            "nameLocation": "1028:18:77",
            "scope": 38198,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 37833,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1004:5:77",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 37834,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1049:1:77",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 37839,
            "nodeType": "VariableDeclaration",
            "src": "1113:53:77",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 37836,
              "nodeType": "StructuredDocumentation",
              "src": "1057:51:77",
              "text": "@notice EigenLayer's InvestmentManager contract"
            },
            "functionSelector": "4b31bb10",
            "mutability": "immutable",
            "name": "investmentManager",
            "nameLocation": "1149:17:77",
            "scope": 38198,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
              "typeString": "contract IInvestmentManager"
            },
            "typeName": {
              "id": 37838,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37837,
                "name": "IInvestmentManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31085,
                "src": "1113:18:77"
              },
              "referencedDeclaration": 31085,
              "src": "1113:18:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                "typeString": "contract IInvestmentManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37843,
            "nodeType": "VariableDeclaration",
            "src": "1248:29:77",
            "nodes": [],
            "baseFunctions": [
              31166
            ],
            "constant": false,
            "documentation": {
              "id": 37840,
              "nodeType": "StructuredDocumentation",
              "src": "1173:70:77",
              "text": "@notice The underyling token for shares in this InvestmentStrategy"
            },
            "functionSelector": "2495a599",
            "mutability": "mutable",
            "name": "underlyingToken",
            "nameLocation": "1262:15:77",
            "scope": 38198,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$25366",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 37842,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 37841,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25366,
                "src": "1248:6:77"
              },
              "referencedDeclaration": 25366,
              "src": "1248:6:77",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$25366",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37846,
            "nodeType": "VariableDeclaration",
            "src": "1361:26:77",
            "nodes": [],
            "baseFunctions": [
              31172
            ],
            "constant": false,
            "documentation": {
              "id": 37844,
              "nodeType": "StructuredDocumentation",
              "src": "1284:72:77",
              "text": "@notice The total number of extant shares in thie InvestmentStrategy"
            },
            "functionSelector": "3a98ef39",
            "mutability": "mutable",
            "name": "totalShares",
            "nameLocation": "1376:11:77",
            "scope": 38198,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37845,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1361:7:77",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 37862,
            "nodeType": "ModifierDefinition",
            "src": "1528:158:77",
            "nodes": [],
            "body": {
              "id": 37861,
              "nodeType": "Block",
              "src": "1561:125:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 37850,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1579:3:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1579:10:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 37854,
                              "name": "investmentManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37839,
                              "src": "1601:17:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                                "typeString": "contract IInvestmentManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                                "typeString": "contract IInvestmentManager"
                              }
                            ],
                            "id": 37853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1593:7:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 37852,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1593:7:77",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 37855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1593:26:77",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1579:40:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e6f6e6c79496e766573746d656e744d616e61676572",
                        "id": 37857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1621:46:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ade1c97231e51a68f79b0420e31785a8d4f270b7332e8f1b995fd42c7737a72a",
                          "typeString": "literal_string \"InvestmentStrategyBase.onlyInvestmentManager\""
                        },
                        "value": "InvestmentStrategyBase.onlyInvestmentManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ade1c97231e51a68f79b0420e31785a8d4f270b7332e8f1b995fd42c7737a72a",
                          "typeString": "literal_string \"InvestmentStrategyBase.onlyInvestmentManager\""
                        }
                      ],
                      "id": 37849,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1571:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:97:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37859,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:97:77"
                },
                {
                  "id": 37860,
                  "nodeType": "PlaceholderStatement",
                  "src": "1678:1:77"
                }
              ]
            },
            "documentation": {
              "id": 37847,
              "nodeType": "StructuredDocumentation",
              "src": "1394:129:77",
              "text": "@notice Simply checks that the `msg.sender` is the `investmentManager`, which is an address stored immutably at construction."
            },
            "name": "onlyInvestmentManager",
            "nameLocation": "1537:21:77",
            "parameters": {
              "id": 37848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1558:2:77"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 37877,
            "nodeType": "FunctionDefinition",
            "src": "1839:138:77",
            "nodes": [],
            "body": {
              "id": 37876,
              "nodeType": "Block",
              "src": "1890:87:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37869,
                      "name": "investmentManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37839,
                      "src": "1900:17:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                        "typeString": "contract IInvestmentManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37870,
                      "name": "_investmentManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37866,
                      "src": "1920:18:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                        "typeString": "contract IInvestmentManager"
                      }
                    },
                    "src": "1900:38:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  "id": 37872,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:38:77"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 37873,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23334,
                      "src": "1948:20:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 37874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1948:22:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37875,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:22:77"
                }
              ]
            },
            "documentation": {
              "id": 37863,
              "nodeType": "StructuredDocumentation",
              "src": "1692:142:77",
              "text": "@notice Since this contract is designed to be initializable, the constructor simply sets `investmentManager`, the only immutable variable."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 37867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37866,
                  "mutability": "mutable",
                  "name": "_investmentManager",
                  "nameLocation": "1870:18:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 37877,
                  "src": "1851:37:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                    "typeString": "contract IInvestmentManager"
                  },
                  "typeName": {
                    "id": 37865,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37864,
                      "name": "IInvestmentManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31085,
                      "src": "1851:18:77"
                    },
                    "referencedDeclaration": 31085,
                    "src": "1851:18:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1850:39:77"
            },
            "returnParameters": {
              "id": 37868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:0:77"
            },
            "scope": 38198,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37899,
            "nodeType": "FunctionDefinition",
            "src": "2065:205:77",
            "nodes": [],
            "body": {
              "id": 37898,
              "nodeType": "Block",
              "src": "2162:108:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 37891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37889,
                      "name": "underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37843,
                      "src": "2172:15:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$25366",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 37890,
                      "name": "_underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37881,
                      "src": "2190:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$25366",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2172:34:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$25366",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 37892,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:34:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 37894,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37884,
                        "src": "2234:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$31195",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 37895,
                        "name": "UNPAUSE_ALL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37449,
                        "src": "2251:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$31195",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37893,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37573,
                      "src": "2216:17:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$31195_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 37896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2216:47:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37897,
                  "nodeType": "ExpressionStatement",
                  "src": "2216:47:77"
                }
              ]
            },
            "documentation": {
              "id": 37878,
              "nodeType": "StructuredDocumentation",
              "src": "1983:77:77",
              "text": "@notice Sets the `underlyingToken` and `pauserRegistry` for the strategy."
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 37887,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37886,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23255,
                  "src": "2150:11:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "2150:11:77"
              }
            ],
            "name": "initialize",
            "nameLocation": "2074:10:77",
            "parameters": {
              "id": 37885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37881,
                  "mutability": "mutable",
                  "name": "_underlyingToken",
                  "nameLocation": "2092:16:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 37899,
                  "src": "2085:23:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$25366",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37880,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37879,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25366,
                      "src": "2085:6:77"
                    },
                    "referencedDeclaration": 25366,
                    "src": "2085:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$25366",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37884,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "2126:15:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 37899,
                  "src": "2110:31:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$31195",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 37883,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37882,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31195,
                      "src": "2110:15:77"
                    },
                    "referencedDeclaration": 31195,
                    "src": "2110:15:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$31195",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2084:58:77"
            },
            "returnParameters": {
              "id": 37888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2162:0:77"
            },
            "scope": 38198,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 37961,
            "nodeType": "FunctionDefinition",
            "src": "2807:938:77",
            "nodes": [],
            "body": {
              "id": 37960,
              "nodeType": "Block",
              "src": "3017:728:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$25366",
                          "typeString": "contract IERC20"
                        },
                        "id": 37919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37917,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37903,
                          "src": "3035:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$25366",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 37918,
                          "name": "underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37843,
                          "src": "3044:15:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$25366",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "3035:24:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e6465706f7369743a2043616e206f6e6c79206465706f73697420756e6465726c79696e67546f6b656e",
                        "id": 37920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3061:66:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c8993c32c7ea45dc431c4c0aec3c353d9c5fd16285693d311f15a6f5ecc0144",
                          "typeString": "literal_string \"InvestmentStrategyBase.deposit: Can only deposit underlyingToken\""
                        },
                        "value": "InvestmentStrategyBase.deposit: Can only deposit underlyingToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c8993c32c7ea45dc431c4c0aec3c353d9c5fd16285693d311f15a6f5ecc0144",
                          "typeString": "literal_string \"InvestmentStrategyBase.deposit: Can only deposit underlyingToken\""
                        }
                      ],
                      "id": 37916,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3027:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:101:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37922,
                  "nodeType": "ExpressionStatement",
                  "src": "3027:101:77"
                },
                {
                  "assignments": [
                    37925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37925,
                      "mutability": "mutable",
                      "name": "priorTokenBalance",
                      "nameLocation": "3448:17:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 37960,
                      "src": "3440:25:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37924,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3440:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @notice calculation of newShares *mirrors* `underlyingToShares(amount)`, but is different since the balance of `underlyingToken`\n has already been increased due to the `investmentManager` transferring tokens to this strategy prior to calling this function",
                  "id": 37930,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 37929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37926,
                        "name": "_tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38197,
                        "src": "3468:13:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 37927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3468:15:77",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 37928,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37905,
                      "src": "3486:6:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3468:24:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3440:52:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 37937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 37933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 37931,
                        "name": "priorTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37925,
                        "src": "3506:17:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 37932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3527:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3506:22:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 37936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 37934,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37846,
                        "src": "3532:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 37935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3547:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3532:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3506:42:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 37952,
                    "nodeType": "Block",
                    "src": "3599:79:77",
                    "statements": [
                      {
                        "expression": {
                          "id": 37950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 37943,
                            "name": "newShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37914,
                            "src": "3613:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 37949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 37946,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 37944,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37905,
                                    "src": "3626:6:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 37945,
                                    "name": "totalShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37846,
                                    "src": "3635:11:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3626:20:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 37947,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3625:22:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 37948,
                              "name": "priorTokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37925,
                              "src": "3650:17:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3625:42:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3613:54:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37951,
                        "nodeType": "ExpressionStatement",
                        "src": "3613:54:77"
                      }
                    ]
                  },
                  "id": 37953,
                  "nodeType": "IfStatement",
                  "src": "3502:176:77",
                  "trueBody": {
                    "id": 37942,
                    "nodeType": "Block",
                    "src": "3550:43:77",
                    "statements": [
                      {
                        "expression": {
                          "id": 37940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 37938,
                            "name": "newShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37914,
                            "src": "3564:9:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 37939,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37905,
                            "src": "3576:6:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3564:18:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37941,
                        "nodeType": "ExpressionStatement",
                        "src": "3564:18:77"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 37956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37954,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37846,
                      "src": "3688:11:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 37955,
                      "name": "newShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37914,
                      "src": "3703:9:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3688:24:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 37957,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:24:77"
                },
                {
                  "expression": {
                    "id": 37958,
                    "name": "newShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37914,
                    "src": "3729:9:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37915,
                  "id": 37959,
                  "nodeType": "Return",
                  "src": "3722:16:77"
                }
              ]
            },
            "baseFunctions": [
              31100
            ],
            "documentation": {
              "id": 37900,
              "nodeType": "StructuredDocumentation",
              "src": "2276:526:77",
              "text": " @notice Used to deposit tokens into this InvestmentStrategy\n @param token is the ERC20 token being deposited\n @param amount is the amount of token being deposited\n @dev This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's\n `depositIntoStrategy` function, and individual share balances are recorded in the investmentManager as well.\n @return newShares is the number of new shares issued at the current exchange ratio."
            },
            "functionSelector": "47e7ef24",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 37909,
                    "name": "PAUSED_DEPOSITS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37832,
                    "src": "2930:15:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 37910,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37908,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37526,
                  "src": "2912:17:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "2912:34:77"
              },
              {
                "id": 37912,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37911,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37862,
                  "src": "2955:21:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "2955:21:77"
              }
            ],
            "name": "deposit",
            "nameLocation": "2816:7:77",
            "overrides": {
              "id": 37907,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2895:8:77"
            },
            "parameters": {
              "id": 37906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37903,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2831:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 37961,
                  "src": "2824:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$25366",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37901,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25366,
                      "src": "2824:6:77"
                    },
                    "referencedDeclaration": 25366,
                    "src": "2824:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$25366",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37905,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2846:6:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 37961,
                  "src": "2838:14:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2823:30:77"
            },
            "returnParameters": {
              "id": 37915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37914,
                  "mutability": "mutable",
                  "name": "newShares",
                  "nameLocation": "3002:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 37961,
                  "src": "2994:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2994:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2993:19:77"
            },
            "scope": 38198,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 38034,
            "nodeType": "FunctionDefinition",
            "src": "4220:1272:77",
            "nodes": [],
            "body": {
              "id": 38033,
              "nodeType": "Block",
              "src": "4423:1069:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$25366",
                          "typeString": "contract IERC20"
                        },
                        "id": 37981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37979,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37967,
                          "src": "4441:5:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$25366",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 37980,
                          "name": "underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37843,
                          "src": "4450:15:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$25366",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "4441:24:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e77697468647261773a2043616e206f6e6c792077697468647261772074686520737472617465677920746f6b656e",
                        "id": 37982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4467:71:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a90debadbc5bcdf3cff330f9ff50f57f952db4ddab1ffc4089964ab007a957f",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: Can only withdraw the strategy token\""
                        },
                        "value": "InvestmentStrategyBase.withdraw: Can only withdraw the strategy token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a90debadbc5bcdf3cff330f9ff50f57f952db4ddab1ffc4089964ab007a957f",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: Can only withdraw the strategy token\""
                        }
                      ],
                      "id": 37978,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4433:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4433:106:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37984,
                  "nodeType": "ExpressionStatement",
                  "src": "4433:106:77"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 37986,
                          "name": "amountShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37969,
                          "src": "4570:12:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 37987,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37846,
                          "src": "4586:11:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4570:27:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e77697468647261773a20616d6f756e74536861726573206d757374206265206c657373207468616e206f7220657175616c20746f20746f74616c536861726573",
                        "id": 37989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4611:89:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba9d105d4923e014e34f881482365c00a19e3627998c5d0f777a0f8d065e1d44",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: amountShares must be less than or equal to totalShares\""
                        },
                        "value": "InvestmentStrategyBase.withdraw: amountShares must be less than or equal to totalShares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba9d105d4923e014e34f881482365c00a19e3627998c5d0f777a0f8d065e1d44",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: amountShares must be less than or equal to totalShares\""
                        }
                      ],
                      "id": 37985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4549:7:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4549:161:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37991,
                  "nodeType": "ExpressionStatement",
                  "src": "4549:161:77"
                },
                {
                  "assignments": [
                    37993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37993,
                      "mutability": "mutable",
                      "name": "priorTotalShares",
                      "nameLocation": "4782:16:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 38033,
                      "src": "4774:24:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37992,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4774:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 37995,
                  "initialValue": {
                    "id": 37994,
                    "name": "totalShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37846,
                    "src": "4801:11:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4774:38:77"
                },
                {
                  "id": 38000,
                  "nodeType": "UncheckedBlock",
                  "src": "4934:62:77",
                  "statements": [
                    {
                      "expression": {
                        "id": 37998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 37996,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37846,
                          "src": "4958:11:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 37997,
                          "name": "amountShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37969,
                          "src": "4973:12:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4958:27:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 37999,
                      "nodeType": "ExpressionStatement",
                      "src": "4958:27:77"
                    }
                  ]
                },
                {
                  "assignments": [
                    38003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38003,
                      "mutability": "mutable",
                      "name": "amountToSend",
                      "nameLocation": "5211:12:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 38033,
                      "src": "5203:20:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38002,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5203:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @notice calculation of amountToSend *mirrors* `sharesToUnderlying(amountShares)`, but is different since the `totalShares` has already\n been decremented",
                  "id": 38004,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5203:20:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38005,
                      "name": "priorTotalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37993,
                      "src": "5237:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 38006,
                      "name": "amountShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37969,
                      "src": "5257:12:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5237:32:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 38024,
                    "nodeType": "Block",
                    "src": "5332:91:77",
                    "statements": [
                      {
                        "expression": {
                          "id": 38022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 38014,
                            "name": "amountToSend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38003,
                            "src": "5346:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 38021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 38018,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 38015,
                                      "name": "_tokenBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 38197,
                                      "src": "5362:13:77",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 38016,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5362:15:77",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 38017,
                                    "name": "amountShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 37969,
                                    "src": "5380:12:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5362:30:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 38019,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5361:32:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 38020,
                              "name": "priorTotalShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37993,
                              "src": "5396:16:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5361:51:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5346:66:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38023,
                        "nodeType": "ExpressionStatement",
                        "src": "5346:66:77"
                      }
                    ]
                  },
                  "id": 38025,
                  "nodeType": "IfStatement",
                  "src": "5233:190:77",
                  "trueBody": {
                    "id": 38013,
                    "nodeType": "Block",
                    "src": "5271:55:77",
                    "statements": [
                      {
                        "expression": {
                          "id": 38011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 38008,
                            "name": "amountToSend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38003,
                            "src": "5285:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 38009,
                              "name": "_tokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38197,
                              "src": "5300:13:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 38010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5300:15:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5285:30:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38012,
                        "nodeType": "ExpressionStatement",
                        "src": "5285:30:77"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38029,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37964,
                        "src": "5461:9:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 38030,
                        "name": "amountToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38003,
                        "src": "5472:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 38026,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37843,
                        "src": "5432:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$25366",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 38028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25532,
                      "src": "5432:28:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$25366_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$25366_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 38031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5432:53:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38032,
                  "nodeType": "ExpressionStatement",
                  "src": "5432:53:77"
                }
              ]
            },
            "baseFunctions": [
              31111
            ],
            "documentation": {
              "id": 37962,
              "nodeType": "StructuredDocumentation",
              "src": "3751:464:77",
              "text": " @notice Used to withdraw tokens from this InvestmentStrategy, to the `depositor`'s address\n @param token is the ERC20 token being transferred out\n @param amountShares is the amount of shares being withdrawn\n @dev This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's\n other functions, and individual share balances are recorded in the investmentManager as well."
            },
            "functionSelector": "d9caed12",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 37973,
                    "name": "PAUSED_WITHDRAWALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37835,
                    "src": "4369:18:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 37974,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37972,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37526,
                  "src": "4351:17:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "4351:37:77"
              },
              {
                "id": 37976,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 37975,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37862,
                  "src": "4397:21:77"
                },
                "nodeType": "ModifierInvocation",
                "src": "4397:21:77"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4229:8:77",
            "overrides": {
              "id": 37971,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4334:8:77"
            },
            "parameters": {
              "id": 37970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37964,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "4246:9:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 38034,
                  "src": "4238:17:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4238:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37967,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4264:5:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 38034,
                  "src": "4257:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$25366",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 37966,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 37965,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 25366,
                      "src": "4257:6:77"
                    },
                    "referencedDeclaration": 25366,
                    "src": "4257:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$25366",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37969,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "4279:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 38034,
                  "src": "4271:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37968,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4271:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4237:55:77"
            },
            "returnParameters": {
              "id": 37977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4423:0:77"
            },
            "scope": 38198,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 38044,
            "nodeType": "FunctionDefinition",
            "src": "5700:191:77",
            "nodes": [],
            "body": {
              "id": 38043,
              "nodeType": "Block",
              "src": "5778:113:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "4261736520496e766573746d656e74537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73",
                    "id": 38041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5795:89:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_087d69029beb240e992612e3de4c8ab4dd02c5ed9901d76a1d88f4d241dfc48b",
                      "typeString": "literal_string \"Base InvestmentStrategy implementation to inherit from for more complex implementations\""
                    },
                    "value": "Base InvestmentStrategy implementation to inherit from for more complex implementations"
                  },
                  "functionReturnParameters": 38040,
                  "id": 38042,
                  "nodeType": "Return",
                  "src": "5788:96:77"
                }
              ]
            },
            "baseFunctions": [
              31178
            ],
            "documentation": {
              "id": 38035,
              "nodeType": "StructuredDocumentation",
              "src": "5498:197:77",
              "text": " @notice Currently returns a brief string explaining the strategy's goal & purpose, but for more complex\n strategies, may be a link to metadata that explains in more detail."
            },
            "functionSelector": "ab5921e1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "explanation",
            "nameLocation": "5709:11:77",
            "overrides": {
              "id": 38037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5745:8:77"
            },
            "parameters": {
              "id": 38036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5720:2:77"
            },
            "returnParameters": {
              "id": 38040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38044,
                  "src": "5763:13:77",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38038,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5763:6:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5762:15:77"
            },
            "scope": 38198,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 38070,
            "nodeType": "FunctionDefinition",
            "src": "6341:267:77",
            "nodes": [],
            "body": {
              "id": 38069,
              "nodeType": "Block",
              "src": "6442:166:77",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 38053,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37846,
                      "src": "6456:11:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 38054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6471:1:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6456:16:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 38067,
                    "nodeType": "Block",
                    "src": "6524:78:77",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 38065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 38062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 38059,
                                    "name": "_tokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38197,
                                    "src": "6546:13:77",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 38060,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6546:15:77",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 38061,
                                  "name": "amountShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38047,
                                  "src": "6564:12:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6546:30:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 38063,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6545:32:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 38064,
                            "name": "totalShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37846,
                            "src": "6580:11:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6545:46:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 38052,
                        "id": 38066,
                        "nodeType": "Return",
                        "src": "6538:53:77"
                      }
                    ]
                  },
                  "id": 38068,
                  "nodeType": "IfStatement",
                  "src": "6452:150:77",
                  "trueBody": {
                    "id": 38058,
                    "nodeType": "Block",
                    "src": "6474:44:77",
                    "statements": [
                      {
                        "expression": {
                          "id": 38056,
                          "name": "amountShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38047,
                          "src": "6495:12:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 38052,
                        "id": 38057,
                        "nodeType": "Return",
                        "src": "6488:19:77"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              31143
            ],
            "documentation": {
              "id": 38045,
              "nodeType": "StructuredDocumentation",
              "src": "5897:439:77",
              "text": " @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlying`, this function guarantees no state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "7a8b2637",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sharesToUnderlyingView",
            "nameLocation": "6350:22:77",
            "overrides": {
              "id": 38049,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6415:8:77"
            },
            "parameters": {
              "id": 38048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38047,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "6381:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 38070,
                  "src": "6373:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6373:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6372:22:77"
            },
            "returnParameters": {
              "id": 38052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38051,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38070,
                  "src": "6433:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6433:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6432:9:77"
            },
            "scope": 38198,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 38084,
            "nodeType": "FunctionDefinition",
            "src": "7061:157:77",
            "nodes": [],
            "body": {
              "id": 38083,
              "nodeType": "Block",
              "src": "7158:60:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38080,
                        "name": "amountShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38073,
                        "src": "7198:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38079,
                      "name": "sharesToUnderlyingView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38070,
                      "src": "7175:22:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 38081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7175:36:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 38078,
                  "id": 38082,
                  "nodeType": "Return",
                  "src": "7168:43:77"
                }
              ]
            },
            "baseFunctions": [
              31119
            ],
            "documentation": {
              "id": 38071,
              "nodeType": "StructuredDocumentation",
              "src": "6614:442:77",
              "text": " @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "f3e73875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sharesToUnderlying",
            "nameLocation": "7070:18:77",
            "overrides": {
              "id": 38075,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7131:8:77"
            },
            "parameters": {
              "id": 38074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38073,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "7097:12:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 38084,
                  "src": "7089:20:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7089:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7088:22:77"
            },
            "returnParameters": {
              "id": 38078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38077,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38084,
                  "src": "7149:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7149:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7148:9:77"
            },
            "scope": 38198,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 38117,
            "nodeType": "FunctionDefinition",
            "src": "7678:336:77",
            "nodes": [],
            "body": {
              "id": 38116,
              "nodeType": "Block",
              "src": "7774:240:77",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    38093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38093,
                      "mutability": "mutable",
                      "name": "tokenBalance",
                      "nameLocation": "7792:12:77",
                      "nodeType": "VariableDeclaration",
                      "scope": 38116,
                      "src": "7784:20:77",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38092,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7784:7:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 38096,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 38094,
                      "name": "_tokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38197,
                      "src": "7807:13:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 38095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7807:15:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7784:38:77"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 38103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 38099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 38097,
                        "name": "tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38093,
                        "src": "7836:12:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 38098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7852:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7836:17:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 38102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 38100,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37846,
                        "src": "7857:11:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 38101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7872:1:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7857:16:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7836:37:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 38114,
                    "nodeType": "Block",
                    "src": "7929:79:77",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 38112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 38109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 38107,
                                  "name": "amountUnderlying",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38087,
                                  "src": "7951:16:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 38108,
                                  "name": "totalShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37846,
                                  "src": "7970:11:77",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7951:30:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 38110,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7950:32:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 38111,
                            "name": "tokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38093,
                            "src": "7985:12:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7950:47:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 38091,
                        "id": 38113,
                        "nodeType": "Return",
                        "src": "7943:54:77"
                      }
                    ]
                  },
                  "id": 38115,
                  "nodeType": "IfStatement",
                  "src": "7832:176:77",
                  "trueBody": {
                    "id": 38106,
                    "nodeType": "Block",
                    "src": "7875:48:77",
                    "statements": [
                      {
                        "expression": {
                          "id": 38104,
                          "name": "amountUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38087,
                          "src": "7896:16:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 38091,
                        "id": 38105,
                        "nodeType": "Return",
                        "src": "7889:23:77"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              31151
            ],
            "documentation": {
              "id": 38085,
              "nodeType": "StructuredDocumentation",
              "src": "7224:449:77",
              "text": " @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToShares`, this function guarantees no state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "e3dae51c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToSharesView",
            "nameLocation": "7687:22:77",
            "parameters": {
              "id": 38088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38087,
                  "mutability": "mutable",
                  "name": "amountUnderlying",
                  "nameLocation": "7718:16:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 38117,
                  "src": "7710:24:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7710:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7709:26:77"
            },
            "returnParameters": {
              "id": 38091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38117,
                  "src": "7765:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7765:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7764:9:77"
            },
            "scope": 38198,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 38130,
            "nodeType": "FunctionDefinition",
            "src": "8477:158:77",
            "nodes": [],
            "body": {
              "id": 38129,
              "nodeType": "Block",
              "src": "8571:64:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38126,
                        "name": "amountUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38120,
                        "src": "8611:16:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38125,
                      "name": "underlyingToSharesView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38117,
                      "src": "8588:22:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 38127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8588:40:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 38124,
                  "id": 38128,
                  "nodeType": "Return",
                  "src": "8581:47:77"
                }
              ]
            },
            "baseFunctions": [
              31127
            ],
            "documentation": {
              "id": 38118,
              "nodeType": "StructuredDocumentation",
              "src": "8020:452:77",
              "text": " @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToSharesView`, this function **may** make state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "8c871019",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToShares",
            "nameLocation": "8486:18:77",
            "parameters": {
              "id": 38121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38120,
                  "mutability": "mutable",
                  "name": "amountUnderlying",
                  "nameLocation": "8513:16:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 38130,
                  "src": "8505:24:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8505:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8504:26:77"
            },
            "returnParameters": {
              "id": 38124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38123,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38130,
                  "src": "8562:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8562:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8561:9:77"
            },
            "scope": 38198,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 38145,
            "nodeType": "FunctionDefinition",
            "src": "8871:142:77",
            "nodes": [],
            "body": {
              "id": 38144,
              "nodeType": "Block",
              "src": "8953:60:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38140,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38133,
                            "src": "9000:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 38139,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38182,
                          "src": "8993:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 38141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8993:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38138,
                      "name": "sharesToUnderlyingView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38070,
                      "src": "8970:22:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 38142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8970:36:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 38137,
                  "id": 38143,
                  "nodeType": "Return",
                  "src": "8963:43:77"
                }
              ]
            },
            "baseFunctions": [
              31159
            ],
            "documentation": {
              "id": 38131,
              "nodeType": "StructuredDocumentation",
              "src": "8641:225:77",
              "text": " @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
            },
            "functionSelector": "553ca5f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userUnderlyingView",
            "nameLocation": "8880:18:77",
            "parameters": {
              "id": 38134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38133,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8907:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 38145,
                  "src": "8899:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8899:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8898:14:77"
            },
            "returnParameters": {
              "id": 38137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38145,
                  "src": "8944:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8944:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8943:9:77"
            },
            "scope": 38198,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 38160,
            "nodeType": "FunctionDefinition",
            "src": "9252:129:77",
            "nodes": [],
            "body": {
              "id": 38159,
              "nodeType": "Block",
              "src": "9325:56:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38155,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38148,
                            "src": "9368:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 38154,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38182,
                          "src": "9361:6:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 38156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9361:12:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38153,
                      "name": "sharesToUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38084,
                      "src": "9342:18:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 38157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9342:32:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 38152,
                  "id": 38158,
                  "nodeType": "Return",
                  "src": "9335:39:77"
                }
              ]
            },
            "baseFunctions": [
              31135
            ],
            "documentation": {
              "id": 38146,
              "nodeType": "StructuredDocumentation",
              "src": "9019:228:77",
              "text": " @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
            },
            "functionSelector": "8f6a6240",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userUnderlying",
            "nameLocation": "9261:14:77",
            "parameters": {
              "id": 38149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38148,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9284:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 38160,
                  "src": "9276:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9276:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9275:14:77"
            },
            "returnParameters": {
              "id": 38152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38160,
                  "src": "9316:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9316:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9315:9:77"
            },
            "scope": 38198,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 38182,
            "nodeType": "FunctionDefinition",
            "src": "9557:191:77",
            "nodes": [],
            "body": {
              "id": 38181,
              "nodeType": "Block",
              "src": "9625:123:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 38172,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38163,
                        "src": "9700:4:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 38176,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9734:4:77",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_InvestmentStrategyBase_$38198",
                                  "typeString": "contract InvestmentStrategyBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_InvestmentStrategyBase_$38198",
                                  "typeString": "contract InvestmentStrategyBase"
                                }
                              ],
                              "id": 38175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9726:7:77",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 38174,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9726:7:77",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 38177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9726:13:77",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 38173,
                          "name": "IInvestmentStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31179,
                          "src": "9706:19:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IInvestmentStrategy_$31179_$",
                            "typeString": "type(contract IInvestmentStrategy)"
                          }
                        },
                        "id": 38178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9706:34:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                          "typeString": "contract IInvestmentStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IInvestmentStrategy_$31179",
                          "typeString": "contract IInvestmentStrategy"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 38169,
                            "name": "investmentManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37839,
                            "src": "9661:17:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                              "typeString": "contract IInvestmentManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                              "typeString": "contract IInvestmentManager"
                            }
                          ],
                          "id": 38168,
                          "name": "IInvestmentManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31085,
                          "src": "9642:18:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IInvestmentManager_$31085_$",
                            "typeString": "type(contract IInvestmentManager)"
                          }
                        },
                        "id": 38170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9642:37:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvestmentManager_$31085",
                          "typeString": "contract IInvestmentManager"
                        }
                      },
                      "id": 38171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "investorStratShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31056,
                      "src": "9642:57:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_IInvestmentStrategy_$31179_$returns$_t_uint256_$",
                        "typeString": "function (address,contract IInvestmentStrategy) view external returns (uint256)"
                      }
                    },
                    "id": 38179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9642:99:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 38167,
                  "id": 38180,
                  "nodeType": "Return",
                  "src": "9635:106:77"
                }
              ]
            },
            "documentation": {
              "id": 38161,
              "nodeType": "StructuredDocumentation",
              "src": "9387:165:77",
              "text": " @notice convenience function for fetching the current total shares of `user` in this strategy, by\n querying the `investmentManager` contract"
            },
            "functionSelector": "ce7c2ac2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shares",
            "nameLocation": "9566:6:77",
            "parameters": {
              "id": 38164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38163,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9581:4:77",
                  "nodeType": "VariableDeclaration",
                  "scope": 38182,
                  "src": "9573:12:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9573:7:77",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9572:14:77"
            },
            "returnParameters": {
              "id": 38167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38166,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38182,
                  "src": "9616:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9616:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9615:9:77"
            },
            "scope": 38198,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 38197,
            "nodeType": "FunctionDefinition",
            "src": "9899:129:77",
            "nodes": [],
            "body": {
              "id": 38196,
              "nodeType": "Block",
              "src": "9964:64:77",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 38192,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10015:4:77",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InvestmentStrategyBase_$38198",
                              "typeString": "contract InvestmentStrategyBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_InvestmentStrategyBase_$38198",
                              "typeString": "contract InvestmentStrategyBase"
                            }
                          ],
                          "id": 38191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10007:7:77",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38190,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10007:7:77",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 38193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10007:13:77",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 38188,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37843,
                        "src": "9981:15:77",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$25366",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 38189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25323,
                      "src": "9981:25:77",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 38194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9981:40:77",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 38187,
                  "id": 38195,
                  "nodeType": "Return",
                  "src": "9974:47:77"
                }
              ]
            },
            "documentation": {
              "id": 38183,
              "nodeType": "StructuredDocumentation",
              "src": "9754:97:77",
              "text": "@notice Internal function used to fetch this contract's current balance of `underlyingToken`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_tokenBalance",
            "nameLocation": "9908:13:77",
            "parameters": {
              "id": 38184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9921:2:77"
            },
            "returnParameters": {
              "id": 38187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 38197,
                  "src": "9955:7:77",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9955:7:77",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9954:9:77"
            },
            "scope": 38198,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 37820,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23335,
              "src": "871:13:77"
            },
            "id": 37821,
            "nodeType": "InheritanceSpecifier",
            "src": "871:13:77"
          },
          {
            "baseName": {
              "id": 37822,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37670,
              "src": "886:8:77"
            },
            "id": 37823,
            "nodeType": "InheritanceSpecifier",
            "src": "886:8:77"
          },
          {
            "baseName": {
              "id": 37824,
              "name": "IInvestmentStrategy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31179,
              "src": "896:19:77"
            },
            "id": 37825,
            "nodeType": "InheritanceSpecifier",
            "src": "896:19:77"
          }
        ],
        "canonicalName": "InvestmentStrategyBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 37819,
          "nodeType": "StructuredDocumentation",
          "src": "346:489:77",
          "text": " @title Base implementation of `IInvestmentStrategy` interface, designed to be inherited from by more complex strategies.\n @author Layr Labs, Inc.\n @notice Simple, basic, \"do-nothing\" InvestmentStrategy that holds a single underlying token and returns it on withdrawals.\n Implements minimal versions of the IInvestmentStrategy functions, this contract is designed to be inherited by\n more complex investment strategies, which can then override its functions as necessary."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          38198,
          31179,
          37670,
          23335
        ],
        "name": "InvestmentStrategyBase",
        "nameLocation": "845:22:77",
        "scope": 38199,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 77
}