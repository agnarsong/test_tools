{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "_investmentManager",
          "type": "address"
        },
        {
          "internalType": "contract IRegistryPermission",
          "name": "_permissionManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IInvestmentStrategy[]",
          "name": "strategies",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        }
      ],
      "name": "decreaseDelegatedShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "delegateTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "vs",
          "type": "bytes32"
        }
      ],
      "name": "delegateToBySignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegatedTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getOperatorRewardAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IInvestmentStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "increaseDelegatedShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentManager",
      "outputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "isDelegated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "isNotDelegated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operatorReceiverRewardAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IInvestmentStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operatorShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionManager",
      "outputs": [
        {
          "internalType": "contract IRegistryPermission",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "rewardReceiveAddress",
          "type": "address"
        }
      ],
      "name": "registerAsOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "undelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b50604051620021d9380380620021d9833981016040819052620000349162000134565b6001600160a01b03808316608052811660a0526200005162000059565b505062000173565b600054610100900460ff1615620000c65760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000119576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200013157600080fd5b50565b600080604083850312156200014857600080fd5b825162000155816200011b565b602084015190925062000168816200011b565b809150509250929050565b60805160a05161200f620001ca6000396000818161046401528181610b0201528181610bb80152610e360152600081816102b7015281816106c1015281816109a50152818161101f01526116b4015261200f6000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063778e55f3116100f9578063bd44e40311610097578063e7a324dc11610071578063e7a324dc14610499578063ee4ea66a146104c0578063f2fde38b146104ec578063fabc1cbc146104ff57600080fd5b8063bd44e4031461044c578063cc7a20491461045f578063da8be8641461048657600080fd5b80638b8209df116100d35780638b8209df146103ec5780638da5cb5b14610415578063ac637c7a14610426578063b41b394b1461043957600080fd5b8063778e55f31461038e5780637ecebe00146103b9578063886f1195146103d957600080fd5b80634b31bb10116101665780635c975abb116101405780635c975abb1461032757806365da12641461032f5780636d70f7ae14610358578063715018a61461038657600080fd5b80634b31bb10146102b25780635820491c146102f15780635ac86ab71461030457600080fd5b806328a573ae116101a257806328a573ae146102555780633644e515146102685780633e28391d14610271578063485cc9551461029f57600080fd5b8063136439dd146101c95780631d3696b7146101de57806320606b7014610220575b600080fd5b6101dc6101d7366004611a3f565b610512565b005b61020b6101ec366004611a6d565b6001600160a01b03908116600090815260686020526040902054161590565b60405190151581526020015b60405180910390f35b6102477f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b604051908152602001610217565b6101dc610263366004611a91565b6106b6565b61024760655481565b61020b61027f366004611a6d565b6001600160a01b0390811660009081526068602052604090205416151590565b6101dc6102ad366004611ad2565b610809565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610217565b6101dc6102ff366004611b57565b61099a565b61020b610312366004611bda565b606b54600160ff9092169190911b9081161490565b606b54610247565b6102d961033d366004611a6d565b6068602052600090815260409020546001600160a01b031681565b61020b610366366004611a6d565b6001600160a01b0390811660009081526067602052604090205416151590565b6101dc610ad9565b61024761039c366004611ad2565b606660209081526000928352604080842090915290825290205481565b6102476103c7366004611a6d565b60696020526000908152604090205481565b606a546102d9906001600160a01b031681565b6102d96103fa366004611a6d565b6067602052600090815260409020546001600160a01b031681565b6033546001600160a01b03166102d9565b6101dc610434366004611a6d565b610aed565b6101dc610447366004611bfd565b610ba3565b6101dc61045a366004611a6d565b610e21565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6101dc610494366004611a6d565b611014565b6102477fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c81565b6102d96104ce366004611a6d565b6001600160a01b039081166000908152606760205260409020541690565b6101dc6104fa366004611a6d565b611125565b6101dc61050d366004611a3f565b61119b565b606a60009054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190611c4e565b6001600160a01b0316336001600160a01b0316146105ff5760405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b60648201526084015b60405180910390fd5b606b54818116146106785760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106fe5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038084166000908152606860205260409020541615610804576001600160a01b0380841660009081526068602090815260408083205484168084526066835281842094871684529390915281208054849290610762908490611cb0565b909155505060408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050905084826000815181106107c0576107c0611cde565b60200260200101906001600160a01b031690816001600160a01b03168152505083816000815181106107f4576107f4611cde565b6020026020010181815250505050505b505050565b600054610100900460ff16158080156108295750600054600160ff909116105b806108435750303b158015610843575060005460ff166001145b6108a65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105f6565b6000805460ff1916600117905580156108c9576000805461ff0019166101001790555b6108d483600061133a565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666040518060400160405280600981526020016822b4b3b2b72630bcb960b91b815250463060405160200161092c9493929190611cf4565b60408051601f1981840301815291905280516020909101206065556109508261143a565b8015610804576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e25760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038086166000908152606860205260409020541615610ad2576001600160a01b038086166000908152606860205260408120549091169084905b81811015610ace57848482818110610a3d57610a3d611cde565b9050602002013560666000856001600160a01b03166001600160a01b031681526020019081526020016000206000898985818110610a7d57610a7d611cde565b9050602002016020810190610a929190611a6d565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610ac19190611d70565b9091555050600101610a23565b5050505b5050505050565b610ae161148c565b610aeb600061143a565b565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190611d87565b1515600114610b965760405162461bcd60e51b81526004016105f690611da9565b610ba033826114e6565b50565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b9190611d87565b1515600114610c4c5760405162461bcd60e51b81526004016105f690611da9565b821580610c595750428310155b610ca55760405162461bcd60e51b815260206004820152601c60248201527f64656c65676174696f6e207369676e617475726520657870697265640000000060448201526064016105f6565b6001600160a01b038516600090815260696020526040812080547fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c918891889185610cef83611e23565b909155506040805160208101959095526001600160a01b039384169085015291166060830152608082015260a0810185905260c001604051602081830303815290604052805190602001209050600060655482604051602001610d6992919061190160f01b81526002810192909252602282015260420190565b6040516020818303038152906040528051906020012090506000610d8e8286866117ce565b9050876001600160a01b0316816001600160a01b031614610e175760405162461bcd60e51b815260206004820152603e60248201527f456967656e4c61797244656c65676174696f6e2e64656c6567617465546f427960448201527f5369676e61747572653a20736967206e6f742066726f6d207374616b6572000060648201526084016105f6565b610ace88886114e6565b60405163bfd79e9960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bfd79e9990602401602060405180830381865afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190611d87565b1515600114610f465760405162461bcd60e51b815260206004820152605c60248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a204f70657261746f7220646f6573206e6f74207065726d697360648201527f73696f6e20746f207265676973746572206173206f70657261746f7200000000608482015260a4016105f6565b336000908152606760205260409020546001600160a01b031615610fe25760405162461bcd60e51b815260206004820152604760248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a206f70657261746f722068617320616c7265616479207265676064820152661a5cdd195c995960ca1b608482015260a4016105f6565b33600081815260676020526040902080546001600160a01b0319166001600160a01b038416179055610ba090806114e6565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461105c5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b0380821660009081526067602052604090205416156110fe5760405162461bcd60e51b815260206004820152604b60248201527f456967656e4c61797244656c65676174696f6e2e756e64656c65676174653a2060448201527f6f70657261746f72732063616e6e6f7420756e64656c65676174652066726f6d60648201526a207468656d73656c76657360a81b608482015260a4016105f6565b6001600160a01b0316600090815260686020526040902080546001600160a01b0319169055565b61112d61148c565b6001600160a01b0381166111925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f6565b610ba08161143a565b606a60009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112129190611c4e565b6001600160a01b0316336001600160a01b0316146112855760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b60648201526084016105f6565b606b54198119606b541916146113035760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020016106ab565b606a546001600160a01b031615801561135b57506001600160a01b03821615155b6113dd5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250606a80546001600160a01b0319166001600160a01b0392909216919091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6033546001600160a01b03163314610aeb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f6565b606b546000906001908116141561153f5760405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e646578206973207061757365640000000000000060448201526064016105f6565b6001600160a01b0380831660009081526067602052604090205416806115e25760405162461bcd60e51b815260206004820152604c60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a206f60448201527f70657261746f7220686173206e6f74207965742072656769737465726564206160648201526b7320612064656c656761746560a01b608482015260a4016105f6565b6001600160a01b0380851660009081526068602052604090205416156116705760405162461bcd60e51b815260206004820152603d60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a207360448201527f74616b657220686173206578697374696e672064656c65676174696f6e00000060648201526084016105f6565b6001600160a01b0384811660008181526068602052604080822080546001600160a01b031916888616179055516394f649dd60e01b815260048101929092529182917f0000000000000000000000000000000000000000000000000000000000000000909116906394f649dd90602401600060405180830381865afa1580156116fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117259190810190611efe565b8151919350915060005b81811015610ace5782818151811061174957611749611cde565b602002602001015160666000896001600160a01b03166001600160a01b03168152602001908152602001600020600086848151811061178a5761178a611cde565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546117c19190611cb0565b909155505060010161172f565b60008060006117de8686866117f4565b915091506117eb8161182d565b50949350505050565b6000806001600160ff1b0383168161181160ff86901c601b611cb0565b905061181f8782888561197b565b935093505050935093915050565b600081600481111561184157611841611fc3565b141561184a5750565b600181600481111561185e5761185e611fc3565b14156118ac5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f6565b60028160048111156118c0576118c0611fc3565b141561190e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f6565b600381600481111561192257611922611fc3565b1415610ba05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119b25750600090506003611a36565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a06573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a2f57600060019250925050611a36565b9150600090505b94509492505050565b600060208284031215611a5157600080fd5b5035919050565b6001600160a01b0381168114610ba057600080fd5b600060208284031215611a7f57600080fd5b8135611a8a81611a58565b9392505050565b600080600060608486031215611aa657600080fd5b8335611ab181611a58565b92506020840135611ac181611a58565b929592945050506040919091013590565b60008060408385031215611ae557600080fd5b8235611af081611a58565b91506020830135611b0081611a58565b809150509250929050565b60008083601f840112611b1d57600080fd5b50813567ffffffffffffffff811115611b3557600080fd5b6020830191508360208260051b8501011115611b5057600080fd5b9250929050565b600080600080600060608688031215611b6f57600080fd5b8535611b7a81611a58565b9450602086013567ffffffffffffffff80821115611b9757600080fd5b611ba389838a01611b0b565b90965094506040880135915080821115611bbc57600080fd5b50611bc988828901611b0b565b969995985093965092949392505050565b600060208284031215611bec57600080fd5b813560ff81168114611a8a57600080fd5b600080600080600060a08688031215611c1557600080fd5b8535611c2081611a58565b94506020860135611c3081611a58565b94979496505050506040830135926060810135926080909101359150565b600060208284031215611c6057600080fd5b8151611a8a81611a58565b60208082526015908201527437b7363ca4b73b32b9ba36b2b73a26b0b730b3b2b960591b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611cc357611cc3611c9a565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b84815260006020608081840152855180608085015260005b81811015611d285787810183015185820160a001528201611d0c565b81811115611d3a57600060a083870101525b5060408401869052601f01601f1916830160a0019150611d67905060608301846001600160a01b03169052565b95945050505050565b600082821015611d8257611d82611c9a565b500390565b600060208284031215611d9957600080fd5b81518015158114611a8a57600080fd5b60208082526054908201527f496e766573746d656e744d616e616765722e6465706f736974496e746f53747260408201527f61746567793a2064656c656761746f7220686173206e6f74207065726d697373606082015273696f6e20657865632064656c656761746520746f60601b608082015260a00190565b6000600019821415611e3757611e37611c9a565b5060010190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e6757611e67611cc8565b604052919050565b600067ffffffffffffffff821115611e8957611e89611cc8565b5060051b60200190565b600082601f830112611ea457600080fd5b81516020611eb9611eb483611e6f565b611e3e565b82815260059290921b84018101918181019086841115611ed857600080fd5b8286015b84811015611ef35780518352918301918301611edc565b509695505050505050565b60008060408385031215611f1157600080fd5b825167ffffffffffffffff80821115611f2957600080fd5b818501915085601f830112611f3d57600080fd5b81516020611f4d611eb483611e6f565b82815260059290921b84018101918181019089841115611f6c57600080fd5b948201945b83861015611f93578551611f8481611a58565b82529482019490820190611f71565b91880151919650909350505080821115611fac57600080fd5b50611fb985828601611e93565b9150509250929050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220121faaed132d92ec283fa668aae08539c8ad895f208a34c13bc8fe412382466664736f6c634300080c0033",
    "sourceMap": "1136:8667:0:-:0;;;1710:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1756:38:1;;;;;1871::0;::::1;;::::0;1919:22:::1;:20;:22::i;:::-;1710:238:::0;;1136:8667;;5928:279:82;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:82;;855:2:128;5987:66:82;;;837:21:128;894:2;874:18;;;867:30;933:34;913:18;;;906:62;-1:-1:-1;;;984:18:128;;;977:37;1031:19;;5987:66:82;;;;;;;;6067:12;;6082:15;6067:12;;;:30;6063:138;;;6113:12;:30;;-1:-1:-1;;6113:30:82;6128:15;6113:30;;;;;;6162:28;;1203:36:128;;;6162:28:82;;1191:2:128;1176:18;6162:28:82;;;;;;;6063:138;5928:279::o;14:151:128:-;-1:-1:-1;;;;;109:31:128;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:478::-;302:6;310;363:2;351:9;342:7;338:23;334:32;331:52;;;379:1;376;369:12;331:52;411:9;405:16;430:51;475:5;430:51;:::i;:::-;550:2;535:18;;529:25;500:5;;-1:-1:-1;563:53:128;529:25;563:53;:::i;:::-;635:7;625:17;;;170:478;;;;;:::o;1061:184::-;1136:8667:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063778e55f3116100f9578063bd44e40311610097578063e7a324dc11610071578063e7a324dc14610499578063ee4ea66a146104c0578063f2fde38b146104ec578063fabc1cbc146104ff57600080fd5b8063bd44e4031461044c578063cc7a20491461045f578063da8be8641461048657600080fd5b80638b8209df116100d35780638b8209df146103ec5780638da5cb5b14610415578063ac637c7a14610426578063b41b394b1461043957600080fd5b8063778e55f31461038e5780637ecebe00146103b9578063886f1195146103d957600080fd5b80634b31bb10116101665780635c975abb116101405780635c975abb1461032757806365da12641461032f5780636d70f7ae14610358578063715018a61461038657600080fd5b80634b31bb10146102b25780635820491c146102f15780635ac86ab71461030457600080fd5b806328a573ae116101a257806328a573ae146102555780633644e515146102685780633e28391d14610271578063485cc9551461029f57600080fd5b8063136439dd146101c95780631d3696b7146101de57806320606b7014610220575b600080fd5b6101dc6101d7366004611a3f565b610512565b005b61020b6101ec366004611a6d565b6001600160a01b03908116600090815260686020526040902054161590565b60405190151581526020015b60405180910390f35b6102477f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b604051908152602001610217565b6101dc610263366004611a91565b6106b6565b61024760655481565b61020b61027f366004611a6d565b6001600160a01b0390811660009081526068602052604090205416151590565b6101dc6102ad366004611ad2565b610809565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610217565b6101dc6102ff366004611b57565b61099a565b61020b610312366004611bda565b606b54600160ff9092169190911b9081161490565b606b54610247565b6102d961033d366004611a6d565b6068602052600090815260409020546001600160a01b031681565b61020b610366366004611a6d565b6001600160a01b0390811660009081526067602052604090205416151590565b6101dc610ad9565b61024761039c366004611ad2565b606660209081526000928352604080842090915290825290205481565b6102476103c7366004611a6d565b60696020526000908152604090205481565b606a546102d9906001600160a01b031681565b6102d96103fa366004611a6d565b6067602052600090815260409020546001600160a01b031681565b6033546001600160a01b03166102d9565b6101dc610434366004611a6d565b610aed565b6101dc610447366004611bfd565b610ba3565b6101dc61045a366004611a6d565b610e21565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6101dc610494366004611a6d565b611014565b6102477fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c81565b6102d96104ce366004611a6d565b6001600160a01b039081166000908152606760205260409020541690565b6101dc6104fa366004611a6d565b611125565b6101dc61050d366004611a3f565b61119b565b606a60009054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190611c4e565b6001600160a01b0316336001600160a01b0316146105ff5760405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b60648201526084015b60405180910390fd5b606b54818116146106785760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106fe5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038084166000908152606860205260409020541615610804576001600160a01b0380841660009081526068602090815260408083205484168084526066835281842094871684529390915281208054849290610762908490611cb0565b909155505060408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050905084826000815181106107c0576107c0611cde565b60200260200101906001600160a01b031690816001600160a01b03168152505083816000815181106107f4576107f4611cde565b6020026020010181815250505050505b505050565b600054610100900460ff16158080156108295750600054600160ff909116105b806108435750303b158015610843575060005460ff166001145b6108a65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105f6565b6000805460ff1916600117905580156108c9576000805461ff0019166101001790555b6108d483600061133a565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666040518060400160405280600981526020016822b4b3b2b72630bcb960b91b815250463060405160200161092c9493929190611cf4565b60408051601f1981840301815291905280516020909101206065556109508261143a565b8015610804576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e25760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038086166000908152606860205260409020541615610ad2576001600160a01b038086166000908152606860205260408120549091169084905b81811015610ace57848482818110610a3d57610a3d611cde565b9050602002013560666000856001600160a01b03166001600160a01b031681526020019081526020016000206000898985818110610a7d57610a7d611cde565b9050602002016020810190610a929190611a6d565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610ac19190611d70565b9091555050600101610a23565b5050505b5050505050565b610ae161148c565b610aeb600061143a565b565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190611d87565b1515600114610b965760405162461bcd60e51b81526004016105f690611da9565b610ba033826114e6565b50565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b9190611d87565b1515600114610c4c5760405162461bcd60e51b81526004016105f690611da9565b821580610c595750428310155b610ca55760405162461bcd60e51b815260206004820152601c60248201527f64656c65676174696f6e207369676e617475726520657870697265640000000060448201526064016105f6565b6001600160a01b038516600090815260696020526040812080547fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c918891889185610cef83611e23565b909155506040805160208101959095526001600160a01b039384169085015291166060830152608082015260a0810185905260c001604051602081830303815290604052805190602001209050600060655482604051602001610d6992919061190160f01b81526002810192909252602282015260420190565b6040516020818303038152906040528051906020012090506000610d8e8286866117ce565b9050876001600160a01b0316816001600160a01b031614610e175760405162461bcd60e51b815260206004820152603e60248201527f456967656e4c61797244656c65676174696f6e2e64656c6567617465546f427960448201527f5369676e61747572653a20736967206e6f742066726f6d207374616b6572000060648201526084016105f6565b610ace88886114e6565b60405163bfd79e9960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bfd79e9990602401602060405180830381865afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190611d87565b1515600114610f465760405162461bcd60e51b815260206004820152605c60248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a204f70657261746f7220646f6573206e6f74207065726d697360648201527f73696f6e20746f207265676973746572206173206f70657261746f7200000000608482015260a4016105f6565b336000908152606760205260409020546001600160a01b031615610fe25760405162461bcd60e51b815260206004820152604760248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a206f70657261746f722068617320616c7265616479207265676064820152661a5cdd195c995960ca1b608482015260a4016105f6565b33600081815260676020526040902080546001600160a01b0319166001600160a01b038416179055610ba090806114e6565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461105c5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b0380821660009081526067602052604090205416156110fe5760405162461bcd60e51b815260206004820152604b60248201527f456967656e4c61797244656c65676174696f6e2e756e64656c65676174653a2060448201527f6f70657261746f72732063616e6e6f7420756e64656c65676174652066726f6d60648201526a207468656d73656c76657360a81b608482015260a4016105f6565b6001600160a01b0316600090815260686020526040902080546001600160a01b0319169055565b61112d61148c565b6001600160a01b0381166111925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f6565b610ba08161143a565b606a60009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112129190611c4e565b6001600160a01b0316336001600160a01b0316146112855760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b60648201526084016105f6565b606b54198119606b541916146113035760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020016106ab565b606a546001600160a01b031615801561135b57506001600160a01b03821615155b6113dd5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250606a80546001600160a01b0319166001600160a01b0392909216919091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6033546001600160a01b03163314610aeb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f6565b606b546000906001908116141561153f5760405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e646578206973207061757365640000000000000060448201526064016105f6565b6001600160a01b0380831660009081526067602052604090205416806115e25760405162461bcd60e51b815260206004820152604c60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a206f60448201527f70657261746f7220686173206e6f74207965742072656769737465726564206160648201526b7320612064656c656761746560a01b608482015260a4016105f6565b6001600160a01b0380851660009081526068602052604090205416156116705760405162461bcd60e51b815260206004820152603d60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a207360448201527f74616b657220686173206578697374696e672064656c65676174696f6e00000060648201526084016105f6565b6001600160a01b0384811660008181526068602052604080822080546001600160a01b031916888616179055516394f649dd60e01b815260048101929092529182917f0000000000000000000000000000000000000000000000000000000000000000909116906394f649dd90602401600060405180830381865afa1580156116fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117259190810190611efe565b8151919350915060005b81811015610ace5782818151811061174957611749611cde565b602002602001015160666000896001600160a01b03166001600160a01b03168152602001908152602001600020600086848151811061178a5761178a611cde565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546117c19190611cb0565b909155505060010161172f565b60008060006117de8686866117f4565b915091506117eb8161182d565b50949350505050565b6000806001600160ff1b0383168161181160ff86901c601b611cb0565b905061181f8782888561197b565b935093505050935093915050565b600081600481111561184157611841611fc3565b141561184a5750565b600181600481111561185e5761185e611fc3565b14156118ac5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f6565b60028160048111156118c0576118c0611fc3565b141561190e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f6565b600381600481111561192257611922611fc3565b1415610ba05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119b25750600090506003611a36565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a06573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a2f57600060019250925050611a36565b9150600090505b94509492505050565b600060208284031215611a5157600080fd5b5035919050565b6001600160a01b0381168114610ba057600080fd5b600060208284031215611a7f57600080fd5b8135611a8a81611a58565b9392505050565b600080600060608486031215611aa657600080fd5b8335611ab181611a58565b92506020840135611ac181611a58565b929592945050506040919091013590565b60008060408385031215611ae557600080fd5b8235611af081611a58565b91506020830135611b0081611a58565b809150509250929050565b60008083601f840112611b1d57600080fd5b50813567ffffffffffffffff811115611b3557600080fd5b6020830191508360208260051b8501011115611b5057600080fd5b9250929050565b600080600080600060608688031215611b6f57600080fd5b8535611b7a81611a58565b9450602086013567ffffffffffffffff80821115611b9757600080fd5b611ba389838a01611b0b565b90965094506040880135915080821115611bbc57600080fd5b50611bc988828901611b0b565b969995985093965092949392505050565b600060208284031215611bec57600080fd5b813560ff81168114611a8a57600080fd5b600080600080600060a08688031215611c1557600080fd5b8535611c2081611a58565b94506020860135611c3081611a58565b94979496505050506040830135926060810135926080909101359150565b600060208284031215611c6057600080fd5b8151611a8a81611a58565b60208082526015908201527437b7363ca4b73b32b9ba36b2b73a26b0b730b3b2b960591b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611cc357611cc3611c9a565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b84815260006020608081840152855180608085015260005b81811015611d285787810183015185820160a001528201611d0c565b81811115611d3a57600060a083870101525b5060408401869052601f01601f1916830160a0019150611d67905060608301846001600160a01b03169052565b95945050505050565b600082821015611d8257611d82611c9a565b500390565b600060208284031215611d9957600080fd5b81518015158114611a8a57600080fd5b60208082526054908201527f496e766573746d656e744d616e616765722e6465706f736974496e746f53747260408201527f61746567793a2064656c656761746f7220686173206e6f74207065726d697373606082015273696f6e20657865632064656c656761746520746f60601b608082015260a00190565b6000600019821415611e3757611e37611c9a565b5060010190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e6757611e67611cc8565b604052919050565b600067ffffffffffffffff821115611e8957611e89611cc8565b5060051b60200190565b600082601f830112611ea457600080fd5b81516020611eb9611eb483611e6f565b611e3e565b82815260059290921b84018101918181019086841115611ed857600080fd5b8286015b84811015611ef35780518352918301918301611edc565b509695505050505050565b60008060408385031215611f1157600080fd5b825167ffffffffffffffff80821115611f2957600080fd5b818501915085601f830112611f3d57600080fd5b81516020611f4d611eb483611e6f565b82815260059290921b84018101918181019089841115611f6c57600080fd5b948201945b83861015611f93578551611f8481611a58565b82529482019490820190611f71565b91880151919650909350505080821115611fac57600080fd5b50611fb985828601611e93565b9150509250929050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220121faaed132d92ec283fa668aae08539c8ad895f208a34c13bc8fe412382466664736f6c634300080c0033",
    "sourceMap": "1136:8667:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:392:27;;;;;;:::i;:::-;;:::i;:::-;;9426:126:0;;;;;;:::i;:::-;-1:-1:-1;;;;;9511:19:0;;;9487:4;9511:19;;;:11;:19;;;;;;;:33;;9426:126;;;;752:14:128;;745:22;727:41;;715:2;700:18;9426:126:0;;;;;;;;628:130:1;;678:80;628:130;;;;;925:25:128;;;913:2;898:18;628:130:1;779:177:128;5894:649:0;;;;;;:::i;:::-;;:::i;1039:31:1:-;;;;;;9202:123:0;;;;;;:::i;:::-;-1:-1:-1;;;;;9284:19:0;;;9260:4;9284:19;;;:11;:19;;;;;;;:33;;;9202:123;1954:339;;;;;;:::i;:::-;;:::i;1138:53:1:-;;;;;;;;-1:-1:-1;;;;;2057:32:128;;;2039:51;;2027:2;2012:18;1138:53:1;1867:229:128;6792:629:0;;;;;;:::i;:::-;;:::i;4796:149:27:-;;;;;;:::i;:::-;4914:7;;4885:1;:10;;;;;;;;4914:14;;;4913:24;;4796:149;4608:87;4681:7;;4608:87;;1508:46:1;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1508:46:1;;;9659:142:0;;;;;;:::i;:::-;-1:-1:-1;;;;;9741:39:0;;;9718:4;9741:39;;;:29;:39;;;;;;;:53;;;9659:142;2071:101:81;;;:::i;1281:81:1:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1647:41;;;;;;:::i;:::-;;;;;;;;;;;;;;906:37:27;;;;;-1:-1:-1;;;;;906:37:27;;;1411:64:1;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1411:64:1;;;1441:85:81;1513:6;;-1:-1:-1;;;;;1513:6:81;1441:85;;3435:296:0;;;;;;:::i;:::-;;:::i;3924:964::-;;;;;;:::i;:::-;;:::i;2553:678::-;;;;;;:::i;:::-;;:::i;1372:54::-;;;;;5153:233;;;;;;:::i;:::-;;:::i;849:142:1:-;;903:88;849:142;;5523:146:0;;;;;;:::i;:::-;-1:-1:-1;;;;;5623:39:0;;;5598:7;5623:39;;;:29;:39;;;;;;;;5523:146;2321:198:81;;;;;;:::i;:::-;;:::i;4135:403:27:-;;;;;;:::i;:::-;;:::i;3259:392::-;1557:14;;;;;;;;;-1:-1:-1;;;;;1557:14:27;-1:-1:-1;;;;;1557:21:27;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1543:37:27;:10;-1:-1:-1;;;;;1543:37:27;;1535:90;;;;-1:-1:-1;;;1535:90:27;;6194:2:128;1535:90:27;;;6176:21:128;6233:2;6213:18;;;6206:30;6272:34;6252:18;;;6245:62;-1:-1:-1;;;6323:18:128;;;6316:38;6371:19;;1535:90:27;;;;;;;;;3491:7:::1;::::0;3461:25;;::::1;3460:38;3452:107;;;::::0;-1:-1:-1;;;3452:107:27;;6603:2:128;3452:107:27::1;::::0;::::1;6585:21:128::0;6642:2;6622:18;;;6615:30;6681:34;6661:18;;;6654:62;6752:26;6732:18;;;6725:54;6796:19;;3452:107:27::1;6401:420:128::0;3452:107:27::1;3569:7;:25:::0;;;3609:35:::1;::::0;925:25:128;;;3616:10:27::1;::::0;3609:35:::1;::::0;913:2:128;898:18;3609:35:27::1;;;;;;;;3259:392:::0;:::o;5894:649:0:-;1590:10;-1:-1:-1;;;;;1612:17:0;1590:40;;1582:74;;;;-1:-1:-1;;;1582:74:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;9284:19:0;;;9260:4;9284:19;;;:11;:19;;;;;;;:33;6102:435:::1;;-1:-1:-1::0;;;;;6160:19:0;;::::1;6141:16;6160:19:::0;;;:11:::1;:19;::::0;;;;;;;;;::::1;6250:24:::0;;;:14:::1;:24:::0;;;;;:34;;::::1;::::0;;;;;;;;:44;;6288:6;;6141:16;6250:44:::1;::::0;6288:6;;6250:44:::1;:::i;:::-;::::0;;;-1:-1:-1;;6355:28:0::1;::::0;;6381:1:::1;6355:28:::0;;;;;::::1;::::0;;;6309:43:::1;::::0;6355:28:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;6431:13:0::1;::::0;;6442:1:::1;6431:13:::0;;;;;::::1;::::0;;;6309:74;;-1:-1:-1;6397:31:0::1;::::0;6431:13;-1:-1:-1;6431:13:0::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;6431:13:0::1;6397:47;;6478:8;6458:14;6473:1;6458:17;;;;;;;;:::i;:::-;;;;;;:28;-1:-1:-1::0;;;;;6458:28:0::1;;;-1:-1:-1::0;;;;;6458:28:0::1;;;::::0;::::1;6520:6;6500:14;6515:1;6500:17;;;;;;;;:::i;:::-;;;;;;:26;;;::::0;::::1;6127:410;;;6102:435;5894:649:::0;;;:::o;1954:339::-;3268:19:82;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:82;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:82;1476:19:84;:23;;;3376:66:82;;-1:-1:-1;3425:12:82;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:82;;7907:2:128;3314:201:82;;;7889:21:128;7946:2;7926:18;;;7919:30;7985:34;7965:18;;;7958:62;-1:-1:-1;;;8036:18:128;;;8029:44;8090:19;;3314:201:82;7705:410:128;3314:201:82;3525:12;:16;;-1:-1:-1;;3525:16:82;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:82;;;;;3551:65;2080:47:0::1;2098:15;1081:1:27;2080:17:0;:47::i;:::-;678:80:1;2194:18:0;;;;;;;;;;;;;-1:-1:-1::0;;;2194:18:0::1;;::::0;2214:13:::1;2237:4;2166:77;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;2166:77:0;;::::1;::::0;;;;;;2156:88;;2166:77:::1;2156:88:::0;;::::1;::::0;2137:16:::1;:107:::0;2254:32:::1;2273:12:::0;2254:18:::1;:32::i;:::-;3640:14:82::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:82;;;3710:14;;-1:-1:-1;9102:36:128;;3710:14:82;;9090:2:128;9075:18;3710:14:82;;;;;;;3258:483;1954:339:0;;:::o;6792:629::-;1590:10;-1:-1:-1;;;;;1612:17:0;1590:40;;1582:74;;;;-1:-1:-1;;;1582:74:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;9284:19:0;;;9260:4;9284:19;;;:11;:19;;;;;;;:33;7002:413:::1;;-1:-1:-1::0;;;;;7060:19:0;;::::1;7041:16;7060:19:::0;;;:11:::1;:19;::::0;;;;;;;::::1;::::0;7179:10;;7210:195:::1;7234:12;7230:1;:16;7210:195;;;7310:6;;7317:1;7310:9;;;;;;;:::i;:::-;;;;;;;7267:14;:24;7282:8;-1:-1:-1::0;;;;;7267:24:0::1;-1:-1:-1::0;;;;;7267:24:0::1;;;;;;;;;;;;:39;7292:10;;7303:1;7292:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7267:39:0::1;-1:-1:-1::0;;;;;7267:39:0::1;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7369:3:0::1;;7210:195;;;;7027:388;;7002:413;6792:629:::0;;;;;:::o;2071:101:81:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;3435:296:0:-;3513:52;;-1:-1:-1;;;3513:52:0;;3554:10;3513:52;;;2039:51:128;3513:17:0;-1:-1:-1;;;;;3513:40:0;;;;2012:18:128;;3513:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;3569:4;3513:60;3492:191;;;;-1:-1:-1;;;3492:191:0;;;;;;;:::i;:::-;3693:31;3703:10;3715:8;3693:9;:31::i;:::-;3435:296;:::o;3924:964::-;4080:52;;-1:-1:-1;;;4080:52:0;;4121:10;4080:52;;;2039:51:128;4080:17:0;-1:-1:-1;;;;;4080:40:0;;;;2012:18:128;;4080:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;4136:4;4080:60;4059:191;;;;-1:-1:-1;;;4059:191:0;;;;;;;:::i;:::-;4268:11;;;:40;;;4293:15;4283:6;:25;;4268:40;4260:81;;;;-1:-1:-1;;;4260:81:0;;10535:2:128;4260:81:0;;;10517:21:128;10574:2;10554:18;;;10547:30;10613;10593:18;;;10586:58;10661:18;;4260:81:0;10333:352:128;4260:81:0;-1:-1:-1;;;;;4498:14:0;;4417:18;4498:14;;;:6;:14;;;;;:16;;903:88:1;;4480:6:0;;4488:8;;4417:18;4498:16;;;:::i;:::-;;;;-1:-1:-1;4448:75:0;;;;;;11089:25:128;;;;-1:-1:-1;;;;;11188:15:128;;;11168:18;;;11161:43;11240:15;;11220:18;;;11213:43;11272:18;;;11265:34;11315:19;;;11308:35;;;11061:19;;4448:75:0;;;;;;;;;;;;4438:86;;;;;;4417:107;;4534:18;4594:16;;4612:10;4565:58;;;;;;;;-1:-1:-1;;;11612:27:128;;11664:1;11655:11;;11648:27;;;;11700:2;11691:12;;11684:28;11737:2;11728:12;;11354:392;4565:58:0;;;;;;;;;;;;;4555:69;;;;;;4534:90;;4673:24;4700:32;4714:10;4726:1;4729:2;4700:13;:32::i;:::-;4673:59;;4771:6;-1:-1:-1;;;;;4751:26:0;:16;-1:-1:-1;;;;;4751:26:0;;4743:101;;;;-1:-1:-1;;;4743:101:0;;11953:2:128;4743:101:0;;;11935:21:128;11992:2;11972:18;;;11965:30;12031:34;12011:18;;;12004:62;12102:32;12082:18;;;12075:60;12152:19;;4743:101:0;11751:426:128;4743:101:0;4854:27;4864:6;4872:8;4854:9;:27::i;2553:678::-;2651:59;;-1:-1:-1;;;2651:59:0;;2699:10;2651:59;;;2039:51:128;2651:17:0;-1:-1:-1;;;;;2651:47:0;;;;2012:18:128;;2651:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;2714:4;2651:67;2630:206;;;;-1:-1:-1;;;2630:206:0;;12384:2:128;2630:206:0;;;12366:21:128;12423:2;12403:18;;;12396:30;12462:34;12442:18;;;12435:62;12533:34;12513:18;;;12506:62;12605:30;12584:19;;;12577:59;12653:19;;2630:206:0;12182:496:128;2630:206:0;2897:10;2920:1;2867:41;;;:29;:41;;;;;;-1:-1:-1;;;;;2867:41:0;:55;2846:173;;;;-1:-1:-1;;;2846:173:0;;12885:2:128;2846:173:0;;;12867:21:128;12924:2;12904:18;;;12897:30;12963:34;12943:18;;;12936:62;13034:34;13014:18;;;13007:62;-1:-1:-1;;;13085:19:128;;;13078:38;13133:19;;2846:173:0;12683:475:128;2846:173:0;3147:10;3117:41;;;;:29;:41;;;;;:64;;-1:-1:-1;;;;;;3117:64:0;-1:-1:-1;;;;;3117:64:0;;;;;3191:33;;3147:10;3191:9;:33::i;5153:233::-;1590:10;-1:-1:-1;;;;;1612:17:0;1590:40;;1582:74;;;;-1:-1:-1;;;1582:74:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;9741:39:0;;;9718:4;9741:39;;;:29;:39;;;;;;;:53;5230:107:::1;;;::::0;-1:-1:-1;;;5230:107:0;;13365:2:128;5230:107:0::1;::::0;::::1;13347:21:128::0;13404:2;13384:18;;;13377:30;13443:34;13423:18;;;13416:62;13514:34;13494:18;;;13487:62;-1:-1:-1;;;13565:19:128;;;13558:42;13617:19;;5230:107:0::1;13163:479:128::0;5230:107:0::1;-1:-1:-1::0;;;;;5347:19:0::1;5377:1;5347:19:::0;;;:11:::1;:19;::::0;;;;:32;;-1:-1:-1;;;;;;5347:32:0::1;::::0;;5153:233::o;2321:198:81:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:81;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:81;;13849:2:128;2401:73:81::1;::::0;::::1;13831:21:128::0;13888:2;13868:18;;;13861:30;13927:34;13907:18;;;13900:62;-1:-1:-1;;;13978:18:128;;;13971:36;14024:19;;2401:73:81::1;13647:402:128::0;2401:73:81::1;2484:28;2503:8;2484:18;:28::i;4135:403:27:-:0;1705:14;;;;;;;;;-1:-1:-1;;;;;1705:14:27;-1:-1:-1;;;;;1705:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1691:39:27;:10;-1:-1:-1;;;;;1691:39:27;;1683:94;;;;-1:-1:-1;;;1683:94:27;;14256:2:128;1683:94:27;;;14238:21:128;14295:2;14275:18;;;14268:30;14334:34;14314:18;;;14307:62;-1:-1:-1;;;14385:18:128;;;14378:40;14435:19;;1683:94:27;14054:406:128;1683:94:27;4375:7:::1;;4374:8;4352:15;4351:16;4339:7;;4338:8;4337:31;4336:47;4328:116;;;::::0;-1:-1:-1;;;4328:116:27;;14667:2:128;4328:116:27::1;::::0;::::1;14649:21:128::0;14706:2;14686:18;;;14679:30;14745:34;14725:18;;;14718:62;14816:26;14796:18;;;14789:54;14860:19;;4328:116:27::1;14465:420:128::0;4328:116:27::1;4454:7;:25:::0;;;4494:37:::1;::::0;925:25:128;;;4503:10:27::1;::::0;4494:37:::1;::::0;913:2:128;898:18;4494:37:27::1;779:177:128::0;2363:438:27;2497:14;;-1:-1:-1;;;;;2497:14:27;2489:37;:79;;;;-1:-1:-1;;;;;;2530:38:27;;;;2489:79;2468:197;;;;-1:-1:-1;;;2468:197:27;;15092:2:128;2468:197:27;;;15074:21:128;15131:2;15111:18;;;15104:30;15170:34;15150:18;;;15143:62;15241:34;15221:18;;;15214:62;-1:-1:-1;;;15292:19:128;;;15285:38;15340:19;;2468:197:27;14890:475:128;2468:197:27;2675:7;:26;;;2716:36;;925:25:128;;;2723:10:27;;2716:36;;913:2:128;898:18;2716:36:27;;;;;;;-1:-1:-1;2762:14:27;:32;;-1:-1:-1;;;;;;2762:32:27;-1:-1:-1;;;;;2762:32:27;;;;;;;;;;2363:438::o;2673:187:81:-;2765:6;;;-1:-1:-1;;;;;2781:17:81;;;-1:-1:-1;;;;;;2781:17:81;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1599:130::-;1513:6;;-1:-1:-1;;;;;1513:6:81;929:10:85;1662:23:81;1654:68;;;;-1:-1:-1;;;1654:68:81;;15572:2:128;1654:68:81;;;15554:21:128;;;15591:18;;;15584:30;15650:34;15630:18;;;15623:62;15702:18;;1654:68:81;15370:356:128;7972:1111:0;4914:7:27;;1294:1:0;;4885::27;4914:14;;;4913:24;2187:14;2179:52;;;;-1:-1:-1;;;2179:52:27;;15933:2:128;2179:52:27;;;15915:21:128;15972:2;15952:18;;;15945:30;16011:27;15991:18;;;15984:55;16056:18;;2179:52:27;15731:349:128;2179:52:27;-1:-1:-1;;;;;8109:39:0;;::::1;8085:21;8109:39:::0;;;:29:::1;:39;::::0;;;;;::::1;8179:27:::0;8158:138:::1;;;::::0;-1:-1:-1;;;8158:138:0;;16287:2:128;8158:138:0::1;::::0;::::1;16269:21:128::0;16326:2;16306:18;;;16299:30;16365:34;16345:18;;;16338:62;16436:34;16416:18;;;16409:62;-1:-1:-1;;;16487:19:128;;;16480:43;16540:19;;8158:138:0::1;16085:480:128::0;8158:138:0::1;-1:-1:-1::0;;;;;9511:19:0;;;9487:4;9511:19;;;:11;:19;;;;;;;:33;8307:96:::1;;;::::0;-1:-1:-1;;;8307:96:0;;16772:2:128;8307:96:0::1;::::0;::::1;16754:21:128::0;16811:2;16791:18;;;16784:30;16850:34;16830:18;;;16823:62;16921:31;16901:18;;;16894:59;16970:19;;8307:96:0::1;16570:425:128::0;8307:96:0::1;-1:-1:-1::0;;;;;8484:19:0;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;:30;;-1:-1:-1;;;;;;8484:30:0::1;::::0;;::::1;;::::0;;8674:37;-1:-1:-1;;;8674:37:0;;::::1;::::0;::::1;2039:51:128::0;;;;8484:19:0;;;8674:17:::1;:29:::0;;::::1;::::0;::::1;::::0;2012:18:128;;8674:37:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8674:37:0::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8797:17:::0;;8605:106;;-1:-1:-1;8605:106:0;-1:-1:-1;8774:20:0::1;8824:253;8848:12;8844:1;:16;8824:253;;;8998:6;9005:1;8998:9;;;;;;;;:::i;:::-;;;;;;;8955:14;:24;8970:8;-1:-1:-1::0;;;;;8955:24:0::1;-1:-1:-1::0;;;;;8955:24:0::1;;;;;;;;;;;;:39;8980:10;8991:1;8980:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;8955:39:0::1;-1:-1:-1::0;;;;;8955:39:0::1;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9049:3:0::1;;8824:253;;4643:252:107::0;4750:7;4770:17;4789:18;4811:23;4822:4;4828:1;4831:2;4811:10;:23::i;:::-;4769:65;;;;4844:18;4856:5;4844:11;:18::i;:::-;-1:-1:-1;4879:9:107;4643:252;-1:-1:-1;;;;4643:252:107:o;4142:336::-;4252:7;;-1:-1:-1;;;;;4297:80:107;;4252:7;4403:25;4419:3;4404:18;;;4426:2;4403:25;:::i;:::-;4387:42;;4446:25;4457:4;4463:1;4466;4469;4446:10;:25::i;:::-;4439:32;;;;;;4142:336;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;;788:34;;-1:-1:-1;;;788:34:107;;19770:2:128;788:34:107;;;19752:21:128;19809:2;19789:18;;;19782:30;19848:26;19828:18;;;19821:54;19892:18;;788:34:107;19568:348:128;730:345:107;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;;903:41;;-1:-1:-1;;;903:41:107;;20123:2:128;903:41:107;;;20105:21:128;20162:2;20142:18;;;20135:30;20201:33;20181:18;;;20174:61;20252:18;;903:41:107;19921:355:128;839:236:107;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;;1020:44;;-1:-1:-1;;;1020:44:107;;20483:2:128;1020:44:107;;;20465:21:128;20522:2;20502:18;;;20495:30;20561:34;20541:18;;;20534:62;-1:-1:-1;;;20612:18:128;;;20605:32;20654:19;;1020:44:107;20281:398:128;5069:1494:107;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:107;;-1:-1:-1;6221:30:107;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;20911:25:128;;;20984:4;20972:17;;20952:18;;;20945:45;;;;21006:18;;;20999:34;;;21049:18;;;21042:34;;;6374:24:107;;20883:19:128;;6374:24:107;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:107;;-1:-1:-1;;6374:24:107;;;-1:-1:-1;;;;;;;6412:20:107;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:107;;-1:-1:-1;5069:1494:107;;;;;;;;:::o;14:180:128:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:128;;14:180;-1:-1:-1;14:180:128:o;199:131::-;-1:-1:-1;;;;;274:31:128;;264:42;;254:70;;320:1;317;310:12;335:247;394:6;447:2;435:9;426:7;422:23;418:32;415:52;;;463:1;460;453:12;415:52;502:9;489:23;521:31;546:5;521:31;:::i;:::-;571:5;335:247;-1:-1:-1;;;335:247:128:o;961:483::-;1065:6;1073;1081;1134:2;1122:9;1113:7;1109:23;1105:32;1102:52;;;1150:1;1147;1140:12;1102:52;1189:9;1176:23;1208:31;1233:5;1208:31;:::i;:::-;1258:5;-1:-1:-1;1315:2:128;1300:18;;1287:32;1328:33;1287:32;1328:33;:::i;:::-;961:483;;1380:7;;-1:-1:-1;;;1434:2:128;1419:18;;;;1406:32;;961:483::o;1449:413::-;1542:6;1550;1603:2;1591:9;1582:7;1578:23;1574:32;1571:52;;;1619:1;1616;1609:12;1571:52;1658:9;1645:23;1677:31;1702:5;1677:31;:::i;:::-;1727:5;-1:-1:-1;1784:2:128;1769:18;;1756:32;1797:33;1756:32;1797:33;:::i;:::-;1849:7;1839:17;;;1449:413;;;;;:::o;2101:388::-;2185:8;2195:6;2249:3;2242:4;2234:6;2230:17;2226:27;2216:55;;2267:1;2264;2257:12;2216:55;-1:-1:-1;2290:20:128;;2333:18;2322:30;;2319:50;;;2365:1;2362;2355:12;2319:50;2402:4;2394:6;2390:17;2378:29;;2462:3;2455:4;2445:6;2442:1;2438:14;2430:6;2426:27;2422:38;2419:47;2416:67;;;2479:1;2476;2469:12;2416:67;2101:388;;;;;:::o;2494:977::-;2652:6;2660;2668;2676;2684;2737:2;2725:9;2716:7;2712:23;2708:32;2705:52;;;2753:1;2750;2743:12;2705:52;2792:9;2779:23;2811:31;2836:5;2811:31;:::i;:::-;2861:5;-1:-1:-1;2917:2:128;2902:18;;2889:32;2940:18;2970:14;;;2967:34;;;2997:1;2994;2987:12;2967:34;3036:91;3119:7;3110:6;3099:9;3095:22;3036:91;:::i;:::-;3146:8;;-1:-1:-1;3010:117:128;-1:-1:-1;3234:2:128;3219:18;;3206:32;;-1:-1:-1;3250:16:128;;;3247:36;;;3279:1;3276;3269:12;3247:36;;3318:93;3403:7;3392:8;3381:9;3377:24;3318:93;:::i;:::-;2494:977;;;;-1:-1:-1;2494:977:128;;-1:-1:-1;3430:8:128;;3292:119;2494:977;-1:-1:-1;;;2494:977:128:o;3476:269::-;3533:6;3586:2;3574:9;3565:7;3561:23;3557:32;3554:52;;;3602:1;3599;3592:12;3554:52;3641:9;3628:23;3691:4;3684:5;3680:16;3673:5;3670:27;3660:55;;3711:1;3708;3701:12;4902:594;4997:6;5005;5013;5021;5029;5082:3;5070:9;5061:7;5057:23;5053:33;5050:53;;;5099:1;5096;5089:12;5050:53;5138:9;5125:23;5157:31;5182:5;5157:31;:::i;:::-;5207:5;-1:-1:-1;5264:2:128;5249:18;;5236:32;5277:33;5236:32;5277:33;:::i;:::-;4902:594;;5329:7;;-1:-1:-1;;;;5383:2:128;5368:18;;5355:32;;5434:2;5419:18;;5406:32;;5485:3;5470:19;;;5457:33;;-1:-1:-1;4902:594:128:o;5736:251::-;5806:6;5859:2;5847:9;5838:7;5834:23;5830:32;5827:52;;;5875:1;5872;5865:12;5827:52;5907:9;5901:16;5926:31;5951:5;5926:31;:::i;6826:345::-;7028:2;7010:21;;;7067:2;7047:18;;;7040:30;-1:-1:-1;;;7101:2:128;7086:18;;7079:51;7162:2;7147:18;;6826:345::o;7176:127::-;7237:10;7232:3;7228:20;7225:1;7218:31;7268:4;7265:1;7258:15;7292:4;7289:1;7282:15;7308:128;7348:3;7379:1;7375:6;7372:1;7369:13;7366:39;;;7385:18;;:::i;:::-;-1:-1:-1;7421:9:128;;7308:128::o;7441:127::-;7502:10;7497:3;7493:20;7490:1;7483:31;7533:4;7530:1;7523:15;7557:4;7554:1;7547:15;7573:127;7634:10;7629:3;7625:20;7622:1;7615:31;7665:4;7662:1;7655:15;7689:4;7686:1;7679:15;8120:825;8351:6;8340:9;8333:25;8314:4;8377:2;8415:3;8410:2;8399:9;8395:18;8388:31;8448:6;8442:13;8492:6;8486:3;8475:9;8471:19;8464:35;8517:1;8527:141;8541:6;8538:1;8535:13;8527:141;;;8637:14;;;8633:23;;8627:30;8602:17;;;8621:3;8598:27;8591:67;8556:10;;8527:141;;;8686:6;8683:1;8680:13;8677:92;;;8757:1;8751:3;8742:6;8731:9;8727:22;8723:32;8716:43;8677:92;-1:-1:-1;8872:2:128;8857:18;;8850:34;;;8830:2;8809:15;-1:-1:-1;;8805:29:128;8790:45;;8837:3;8786:55;;-1:-1:-1;8893:46:128;;-1:-1:-1;8935:2:128;8920:18;;8912:6;-1:-1:-1;;;;;3998:31:128;3986:44;;3932:104;8893:46;8120:825;;;;;;;:::o;9428:125::-;9468:4;9496:1;9493;9490:8;9487:34;;;9501:18;;:::i;:::-;-1:-1:-1;9538:9:128;;9428:125::o;9558:277::-;9625:6;9678:2;9666:9;9657:7;9653:23;9649:32;9646:52;;;9694:1;9691;9684:12;9646:52;9726:9;9720:16;9779:5;9772:13;9765:21;9758:5;9755:32;9745:60;;9801:1;9798;9791:12;9840:488;10042:2;10024:21;;;10081:2;10061:18;;;10054:30;10120:34;10115:2;10100:18;;10093:62;10191:34;10186:2;10171:18;;10164:62;-1:-1:-1;;;10257:3:128;10242:19;;10235:51;10318:3;10303:19;;9840:488::o;10690:135::-;10729:3;-1:-1:-1;;10750:17:128;;10747:43;;;10770:18;;:::i;:::-;-1:-1:-1;10817:1:128;10806:13;;10690:135::o;17000:275::-;17071:2;17065:9;17136:2;17117:13;;-1:-1:-1;;17113:27:128;17101:40;;17171:18;17156:34;;17192:22;;;17153:62;17150:88;;;17218:18;;:::i;:::-;17254:2;17247:22;17000:275;;-1:-1:-1;17000:275:128:o;17280:204::-;17361:4;17394:18;17386:6;17383:30;17380:56;;;17416:18;;:::i;:::-;-1:-1:-1;17461:1:128;17457:14;17473:4;17453:25;;17280:204::o;17489:680::-;17554:5;17607:3;17600:4;17592:6;17588:17;17584:27;17574:55;;17625:1;17622;17615:12;17574:55;17654:6;17648:13;17680:4;17704:81;17720:64;17781:2;17720:64;:::i;:::-;17704:81;:::i;:::-;17819:15;;;17905:1;17901:10;;;;17889:23;;17885:32;;;17850:12;;;;17929:15;;;17926:35;;;17957:1;17954;17947:12;17926:35;17993:2;17985:6;17981:15;18005:135;18021:6;18016:3;18013:15;18005:135;;;18087:10;;18075:23;;18118:12;;;;18038;;18005:135;;;-1:-1:-1;18158:5:128;17489:680;-1:-1:-1;;;;;;17489:680:128:o;18174:1257::-;18330:6;18338;18391:2;18379:9;18370:7;18366:23;18362:32;18359:52;;;18407:1;18404;18397:12;18359:52;18440:9;18434:16;18469:18;18510:2;18502:6;18499:14;18496:34;;;18526:1;18523;18516:12;18496:34;18564:6;18553:9;18549:22;18539:32;;18609:7;18602:4;18598:2;18594:13;18590:27;18580:55;;18631:1;18628;18621:12;18580:55;18660:2;18654:9;18682:4;18706:81;18722:64;18783:2;18722:64;:::i;18706:81::-;18821:15;;;18903:1;18899:10;;;;18891:19;;18887:28;;;18852:12;;;;18927:19;;;18924:39;;;18959:1;18956;18949:12;18924:39;18983:11;;;;19003:210;19019:6;19014:3;19011:15;19003:210;;;19092:3;19086:10;19109:31;19134:5;19109:31;:::i;:::-;19153:18;;19036:12;;;;19191;;;;19003:210;;;19268:18;;;19262:25;19232:5;;-1:-1:-1;19262:25:128;;-1:-1:-1;;;19299:16:128;;;19296:36;;;19328:1;19325;19318:12;19296:36;;19351:74;19417:7;19406:8;19395:9;19391:24;19351:74;:::i;:::-;19341:84;;;18174:1257;;;;;:::o;19436:127::-;19497:10;19492:3;19488:20;19485:1;19478:31;19528:4;19525:1;19518:15;19552:4;19549:1;19542:15",
    "linkReferences": {},
    "immutableReferences": {
      "56137": [
        {
          "start": 1124,
          "length": 32
        },
        {
          "start": 2818,
          "length": 32
        },
        {
          "start": 3000,
          "length": 32
        },
        {
          "start": 3638,
          "length": 32
        }
      ],
      "59100": [
        {
          "start": 695,
          "length": 32
        },
        {
          "start": 1729,
          "length": 32
        },
        {
          "start": 2469,
          "length": 32
        },
        {
          "start": 4127,
          "length": 32
        },
        {
          "start": 5812,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DELEGATION_TYPEHASH()": "e7a324dc",
    "DOMAIN_SEPARATOR()": "3644e515",
    "DOMAIN_TYPEHASH()": "20606b70",
    "decreaseDelegatedShares(address,address[],uint256[])": "5820491c",
    "delegateTo(address)": "ac637c7a",
    "delegateToBySignature(address,address,uint256,bytes32,bytes32)": "b41b394b",
    "delegatedTo(address)": "65da1264",
    "getOperatorRewardAddress(address)": "ee4ea66a",
    "increaseDelegatedShares(address,address,uint256)": "28a573ae",
    "initialize(address,address)": "485cc955",
    "investmentManager()": "4b31bb10",
    "isDelegated(address)": "3e28391d",
    "isNotDelegated(address)": "1d3696b7",
    "isOperator(address)": "6d70f7ae",
    "nonces(address)": "7ecebe00",
    "operatorReceiverRewardAddress(address)": "8b8209df",
    "operatorShares(address,address)": "778e55f3",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "permissionManager()": "cc7a2049",
    "registerAsOperator(address)": "bd44e403",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "undelegate(address)": "da8be864",
    "unpause(uint256)": "fabc1cbc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"_investmentManager\",\"type\":\"address\"},{\"internalType\":\"contract IRegistryPermission\",\"name\":\"_permissionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IInvestmentStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"name\":\"delegateToBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentManager\",\"outputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isNotDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorReceiverRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionManager\",\"outputs\":[{\"internalType\":\"contract IRegistryPermission\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardReceiveAddress\",\"type\":\"address\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"decreaseDelegatedShares(address,address[],uint256[])\":{\"details\":\"Callable only by the InvestmentManager\"},\"delegateTo(address)\":{\"params\":{\"operator\":\"is the operator to whom staker (msg.sender) is delegating its assets\"}},\"delegateToBySignature(address,address,uint256,bytes32,bytes32)\":{\"details\":\"requires that r, vs are a valid ECSDA signature from `staker` indicating their intention for this action\"},\"increaseDelegatedShares(address,address,uint256)\":{\"details\":\"Callable only by the InvestmentManager\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerAsOperator(address)\":{\"params\":{\"rewardReceiveAddress\":\"another EOA address for receive from mantle network\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"undelegate(address)\":{\"details\":\"Should only ever be called in the event that the `staker` has no active deposits in EigenLayer.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}}},\"title\":\"The primary delegation contract for EigenLayr.\",\"version\":1},\"userdoc\":{\"events\":{\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_SEPARATOR()\":{\"notice\":\"EIP-712 Domain separator\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"decreaseDelegatedShares(address,address[],uint256[])\":{\"notice\":\"Decreases the `staker`'s delegated shares in each entry of `strategies` by its respective `shares[i]`, typically called when the staker withdraws from EigenLayr\"},\"delegateTo(address)\":{\"notice\":\"This will be called by a staker to delegate its assets to some operator.\"},\"delegateToBySignature(address,address,uint256,bytes32,bytes32)\":{\"notice\":\"Delegates from `staker` to `operator`.\"},\"delegatedTo(address)\":{\"notice\":\"returns the address of the operator that `staker` is delegated to.\"},\"getOperatorRewardAddress(address)\":{\"notice\":\"returns the eoa address of the `operator`, which may mediate their interactions with stakers who delegate to them.\"},\"increaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Increases the `staker`'s delegated shares in `strategy` by `shares, typically called when the staker has further deposits into EigenLayr\"},\"investmentManager()\":{\"notice\":\"The InvestmentManager contract for EigenLayr\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isNotDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` is *not* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns if an operator can be delegated to, i.e. it has called `registerAsOperator`.\"},\"operatorShares(address,address)\":{\"notice\":\"returns the total number of shares in `strategy` that are delegated to `operator`.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionManager()\":{\"notice\":\"contract used for manage operator register permission\"},\"registerAsOperator(address)\":{\"notice\":\"This will be called by an operator to register itself as an operator that stakers can choose to delegate to.\"},\"undelegate(address)\":{\"notice\":\"Undelegates `staker` from the operator who they are delegated to.Callable only by the InvestmentManager\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract.\"}},\"notice\":\"This is the contract for delegation in EigenLayr. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayr - allowing new operators to provide a another eoa address, which may mediate their interactions with stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice - enabling a staker to undelegate its assets from an operator (performed as part of the withdrawal process, initiated through the InvestmentManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eignlayr-contracts/src/contracts/core/EigenLayrDelegation.sol\":\"EigenLayrDelegation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer/=../eignlayr-contracts/src/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/eignlayr-contracts/lib/ds-test/src/\",\":eignlayr-contracts/=lib/eignlayr-contracts/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/eignlayr-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/eignlayr-contracts/lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"../eignlayr-contracts/src/contracts/core/EigenLayrDelegation.sol\":{\"keccak256\":\"0x978897da9872d064fca4e0d9a3dfb9ae45307398d579ddb529ddf422f9714657\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://269496038010d6b42f949206d388d177b79a5f1f711e460869d095ff074e60b6\",\"dweb:/ipfs/QmPytBkymcwqywFTJ3HsCHjJGdEAVfjihd3mXrzSZbhgX6\"]},\"../eignlayr-contracts/src/contracts/core/EigenLayrDelegationStorage.sol\":{\"keccak256\":\"0xa465771a204d2226bedec6ba83ea7cafcb5851caf7b1fdf274070d411838a637\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://db4829529f094a305a5064a28aebc6936bfd997e82230aea990b4e7a2830642f\",\"dweb:/ipfs/QmW8hc8uNEUTWLZteUn88n2LGe6r6pQHELzBBB3M2hLoia\"]},\"../eignlayr-contracts/src/contracts/interfaces/IEigenLayrDelegation.sol\":{\"keccak256\":\"0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21\",\"dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5\"]},\"../eignlayr-contracts/src/contracts/interfaces/IInvestmentManager.sol\":{\"keccak256\":\"0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34\",\"dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw\"]},\"../eignlayr-contracts/src/contracts/interfaces/IInvestmentStrategy.sol\":{\"keccak256\":\"0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52\",\"dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob\"]},\"../eignlayr-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c\",\"dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3\"]},\"../eignlayr-contracts/src/contracts/interfaces/IRegistryPermission.sol\":{\"keccak256\":\"0x5a19ffe942fa540af5b4989590e7378ebbdfec7234a8e64b70d15dd57b4beed3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbfd03c6d589513cdfcf11814461d28fc5af5c705b48ac7507073cd8f8eacc2b\",\"dweb:/ipfs/QmddUJh6nU7twBfYheBXX5rVHHHkgNJrrcEPW5QCKGZcyQ\"]},\"../eignlayr-contracts/src/contracts/interfaces/IServiceManager.sol\":{\"keccak256\":\"0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2\",\"dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb\"]},\"../eignlayr-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32\",\"dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "_investmentManager",
              "type": "address"
            },
            {
              "internalType": "contract IRegistryPermission",
              "name": "_permissionManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DELEGATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IInvestmentStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "vs",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateToBySignature"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegatedTo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorRewardAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "investmentManager",
          "outputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isNotDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorReceiverRewardAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionManager",
          "outputs": [
            {
              "internalType": "contract IRegistryPermission",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rewardReceiveAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "decreaseDelegatedShares(address,address[],uint256[])": {
            "details": "Callable only by the InvestmentManager"
          },
          "delegateTo(address)": {
            "params": {
              "operator": "is the operator to whom staker (msg.sender) is delegating its assets"
            }
          },
          "delegateToBySignature(address,address,uint256,bytes32,bytes32)": {
            "details": "requires that r, vs are a valid ECSDA signature from `staker` indicating their intention for this action"
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "details": "Callable only by the InvestmentManager"
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerAsOperator(address)": {
            "params": {
              "rewardReceiveAddress": "another EOA address for receive from mantle network"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "undelegate(address)": {
            "details": "Should only ever be called in the event that the `staker` has no active deposits in EigenLayer."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DELEGATION_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the delegation struct used by the contract"
          },
          "DOMAIN_SEPARATOR()": {
            "notice": "EIP-712 Domain separator"
          },
          "DOMAIN_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the contract's domain"
          },
          "decreaseDelegatedShares(address,address[],uint256[])": {
            "notice": "Decreases the `staker`'s delegated shares in each entry of `strategies` by its respective `shares[i]`, typically called when the staker withdraws from EigenLayr"
          },
          "delegateTo(address)": {
            "notice": "This will be called by a staker to delegate its assets to some operator."
          },
          "delegateToBySignature(address,address,uint256,bytes32,bytes32)": {
            "notice": "Delegates from `staker` to `operator`."
          },
          "delegatedTo(address)": {
            "notice": "returns the address of the operator that `staker` is delegated to."
          },
          "getOperatorRewardAddress(address)": {
            "notice": "returns the eoa address of the `operator`, which may mediate their interactions with stakers who delegate to them."
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "notice": "Increases the `staker`'s delegated shares in `strategy` by `shares, typically called when the staker has further deposits into EigenLayr"
          },
          "investmentManager()": {
            "notice": "The InvestmentManager contract for EigenLayr"
          },
          "isDelegated(address)": {
            "notice": "Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
          },
          "isNotDelegated(address)": {
            "notice": "Returns 'true' if `staker` is *not* actively delegated, and 'false' otherwise."
          },
          "isOperator(address)": {
            "notice": "Returns if an operator can be delegated to, i.e. it has called `registerAsOperator`."
          },
          "operatorShares(address,address)": {
            "notice": "returns the total number of shares in `strategy` that are delegated to `operator`."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionManager()": {
            "notice": "contract used for manage operator register permission"
          },
          "registerAsOperator(address)": {
            "notice": "This will be called by an operator to register itself as an operator that stakers can choose to delegate to."
          },
          "undelegate(address)": {
            "notice": "Undelegates `staker` from the operator who they are delegated to.Callable only by the InvestmentManager"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@eigenlayer/=../eignlayr-contracts/src/",
        ":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/eignlayr-contracts/lib/ds-test/src/",
        ":eignlayr-contracts/=lib/eignlayr-contracts/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/eignlayr-contracts/lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/eignlayr-contracts/lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "../eignlayr-contracts/src/contracts/core/EigenLayrDelegation.sol": "EigenLayrDelegation"
      },
      "libraries": {}
    },
    "sources": {
      "../eignlayr-contracts/src/contracts/core/EigenLayrDelegation.sol": {
        "keccak256": "0x978897da9872d064fca4e0d9a3dfb9ae45307398d579ddb529ddf422f9714657",
        "urls": [
          "bzz-raw://269496038010d6b42f949206d388d177b79a5f1f711e460869d095ff074e60b6",
          "dweb:/ipfs/QmPytBkymcwqywFTJ3HsCHjJGdEAVfjihd3mXrzSZbhgX6"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/core/EigenLayrDelegationStorage.sol": {
        "keccak256": "0xa465771a204d2226bedec6ba83ea7cafcb5851caf7b1fdf274070d411838a637",
        "urls": [
          "bzz-raw://db4829529f094a305a5064a28aebc6936bfd997e82230aea990b4e7a2830642f",
          "dweb:/ipfs/QmW8hc8uNEUTWLZteUn88n2LGe6r6pQHELzBBB3M2hLoia"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/interfaces/IEigenLayrDelegation.sol": {
        "keccak256": "0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e",
        "urls": [
          "bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21",
          "dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/interfaces/IInvestmentManager.sol": {
        "keccak256": "0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100",
        "urls": [
          "bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34",
          "dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/interfaces/IInvestmentStrategy.sol": {
        "keccak256": "0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb",
        "urls": [
          "bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52",
          "dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975",
        "urls": [
          "bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c",
          "dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/interfaces/IRegistryPermission.sol": {
        "keccak256": "0x5a19ffe942fa540af5b4989590e7378ebbdfec7234a8e64b70d15dd57b4beed3",
        "urls": [
          "bzz-raw://dbfd03c6d589513cdfcf11814461d28fc5af5c705b48ac7507073cd8f8eacc2b",
          "dweb:/ipfs/QmddUJh6nU7twBfYheBXX5rVHHHkgNJrrcEPW5QCKGZcyQ"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/interfaces/IServiceManager.sol": {
        "keccak256": "0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4",
        "urls": [
          "bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2",
          "dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04",
        "urls": [
          "bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32",
          "dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr"
        ],
        "license": "UNLICENSED"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "../eignlayr-contracts/src/contracts/core/EigenLayrDelegation.sol",
    "id": 56673,
    "exportedSymbols": {
      "AddressUpgradeable": [
        39135
      ],
      "Context": [
        41630
      ],
      "ContextUpgradeable": [
        39177
      ],
      "ECDSA": [
        42226
      ],
      "EigenLayrDelegation": [
        56672
      ],
      "EigenLayrDelegationStorage": [
        59131
      ],
      "IERC20": [
        40863
      ],
      "IEigenLayrDelegation": [
        121
      ],
      "IInvestmentManager": [
        229
      ],
      "IInvestmentStrategy": [
        323
      ],
      "IPauserRegistry": [
        56111
      ],
      "IRegistryPermission": [
        547
      ],
      "IServiceManager": [
        577
      ],
      "Initializable": [
        38778
      ],
      "Math": [
        43103
      ],
      "Ownable": [
        39290
      ],
      "OwnableUpgradeable": [
        38609
      ],
      "Pausable": [
        3650
      ],
      "Strings": [
        41865
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9765:0",
    "nodes": [
      {
        "id": 56113,
        "nodeType": "PragmaDirective",
        "src": "39:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 56114,
        "nodeType": "ImportDirective",
        "src": "64:56:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56673,
        "sourceUnit": 40864,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56115,
        "nodeType": "ImportDirective",
        "src": "121:52:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56673,
        "sourceUnit": 39291,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56116,
        "nodeType": "ImportDirective",
        "src": "174:72:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56673,
        "sourceUnit": 38610,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56117,
        "nodeType": "ImportDirective",
        "src": "247:72:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56673,
        "sourceUnit": 38779,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56118,
        "nodeType": "ImportDirective",
        "src": "320:62:0",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56673,
        "sourceUnit": 42227,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56119,
        "nodeType": "ImportDirective",
        "src": "383:42:0",
        "nodes": [],
        "absolutePath": "../eignlayr-contracts/src/contracts/core/EigenLayrDelegationStorage.sol",
        "file": "./EigenLayrDelegationStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56673,
        "sourceUnit": 59132,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56120,
        "nodeType": "ImportDirective",
        "src": "426:37:0",
        "nodes": [],
        "absolutePath": "../eignlayr-contracts/src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56673,
        "sourceUnit": 3651,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56121,
        "nodeType": "ImportDirective",
        "src": "464:47:0",
        "nodes": [],
        "absolutePath": "../eignlayr-contracts/src/contracts/interfaces/IRegistryPermission.sol",
        "file": "../interfaces/IRegistryPermission.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 56673,
        "sourceUnit": 548,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 56672,
        "nodeType": "ContractDefinition",
        "src": "1136:8667:0",
        "nodes": [
          {
            "id": 56133,
            "nodeType": "VariableDeclaration",
            "src": "1246:49:0",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_NEW_DELEGATION",
            "nameLocation": "1270:21:0",
            "scope": 56672,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 56131,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1246:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 56132,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1294:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 56137,
            "nodeType": "VariableDeclaration",
            "src": "1372:54:0",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 56134,
              "nodeType": "StructuredDocumentation",
              "src": "1302:65:0",
              "text": "@notice contract used for manage operator register permission"
            },
            "functionSelector": "cc7a2049",
            "mutability": "immutable",
            "name": "permissionManager",
            "nameLocation": "1409:17:0",
            "scope": 56672,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRegistryPermission_$547",
              "typeString": "contract IRegistryPermission"
            },
            "typeName": {
              "id": 56136,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 56135,
                "name": "IRegistryPermission",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 547,
                "src": "1372:19:0"
              },
              "referencedDeclaration": 547,
              "src": "1372:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRegistryPermission_$547",
                "typeString": "contract IRegistryPermission"
              }
            },
            "visibility": "public"
          },
          {
            "id": 56153,
            "nodeType": "ModifierDefinition",
            "src": "1539:135:0",
            "nodes": [],
            "body": {
              "id": 56152,
              "nodeType": "Block",
              "src": "1572:102:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 56141,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1590:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 56142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1590:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 56145,
                              "name": "investmentManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59100,
                              "src": "1612:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                                "typeString": "contract IInvestmentManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                                "typeString": "contract IInvestmentManager"
                              }
                            ],
                            "id": 56144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1604:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56143,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1604:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 56146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1604:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1590:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79496e766573746d656e744d616e61676572",
                        "id": 56148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1632:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cd7fb14ed625180fca63e29defc0cca46b08e783d2f359fd57c9e306d8e0878",
                          "typeString": "literal_string \"onlyInvestmentManager\""
                        },
                        "value": "onlyInvestmentManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cd7fb14ed625180fca63e29defc0cca46b08e783d2f359fd57c9e306d8e0878",
                          "typeString": "literal_string \"onlyInvestmentManager\""
                        }
                      ],
                      "id": 56140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1582:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1582:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56150,
                  "nodeType": "ExpressionStatement",
                  "src": "1582:74:0"
                },
                {
                  "id": 56151,
                  "nodeType": "PlaceholderStatement",
                  "src": "1666:1:0"
                }
              ]
            },
            "documentation": {
              "id": 56138,
              "nodeType": "StructuredDocumentation",
              "src": "1433:101:0",
              "text": "@notice Simple permission for functions that are only callable by the InvestmentManager contract."
            },
            "name": "onlyInvestmentManager",
            "nameLocation": "1548:21:0",
            "parameters": {
              "id": 56139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1569:2:0"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 56173,
            "nodeType": "FunctionDefinition",
            "src": "1710:238:0",
            "nodes": [],
            "body": {
              "id": 56172,
              "nodeType": "Block",
              "src": "1861:87:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 56167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56165,
                      "name": "permissionManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56137,
                      "src": "1871:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRegistryPermission_$547",
                        "typeString": "contract IRegistryPermission"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56166,
                      "name": "_permissionManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56159,
                      "src": "1891:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRegistryPermission_$547",
                        "typeString": "contract IRegistryPermission"
                      }
                    },
                    "src": "1871:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryPermission_$547",
                      "typeString": "contract IRegistryPermission"
                    }
                  },
                  "id": 56168,
                  "nodeType": "ExpressionStatement",
                  "src": "1871:38:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 56169,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38759,
                      "src": "1919:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 56170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56171,
                  "nodeType": "ExpressionStatement",
                  "src": "1919:22:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 56162,
                    "name": "_investmentManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56156,
                    "src": "1837:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                      "typeString": "contract IInvestmentManager"
                    }
                  }
                ],
                "id": 56163,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 56161,
                  "name": "EigenLayrDelegationStorage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59131,
                  "src": "1810:26:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1810:46:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 56160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56156,
                  "mutability": "mutable",
                  "name": "_investmentManager",
                  "nameLocation": "1741:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56173,
                  "src": "1722:37:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                    "typeString": "contract IInvestmentManager"
                  },
                  "typeName": {
                    "id": 56155,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56154,
                      "name": "IInvestmentManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 229,
                      "src": "1722:18:0"
                    },
                    "referencedDeclaration": 229,
                    "src": "1722:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56159,
                  "mutability": "mutable",
                  "name": "_permissionManager",
                  "nameLocation": "1782:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56173,
                  "src": "1762:38:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRegistryPermission_$547",
                    "typeString": "contract IRegistryPermission"
                  },
                  "typeName": {
                    "id": 56158,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56157,
                      "name": "IRegistryPermission",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 547,
                      "src": "1762:19:0"
                    },
                    "referencedDeclaration": 547,
                    "src": "1762:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryPermission_$547",
                      "typeString": "contract IRegistryPermission"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:80:0"
            },
            "returnParameters": {
              "id": 56164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1861:0:0"
            },
            "scope": 56672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 56212,
            "nodeType": "FunctionDefinition",
            "src": "1954:339:0",
            "nodes": [],
            "body": {
              "id": 56211,
              "nodeType": "Block",
              "src": "2070:223:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56184,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56176,
                        "src": "2098:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$56111",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 56185,
                        "name": "UNPAUSE_ALL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3429,
                        "src": "2115:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$56111",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 56183,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3553,
                      "src": "2080:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$56111_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 56186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56187,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:47:0"
                },
                {
                  "expression": {
                    "id": 56205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56188,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59096,
                      "src": "2137:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 56192,
                              "name": "DOMAIN_TYPEHASH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59087,
                              "src": "2177:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "456967656e4c617972",
                                  "id": 56195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2200:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b07a8ec0e7c0f3d2ba4c3aecac5f9da67088461726d8a9c93842eda707acf41e",
                                    "typeString": "literal_string \"EigenLayr\""
                                  },
                                  "value": "EigenLayr"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_b07a8ec0e7c0f3d2ba4c3aecac5f9da67088461726d8a9c93842eda707acf41e",
                                    "typeString": "literal_string \"EigenLayr\""
                                  }
                                ],
                                "id": 56194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2194:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 56193,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2194:5:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2194:18:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 56197,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2214:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 56198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "chainid",
                              "nodeType": "MemberAccess",
                              "src": "2214:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 56201,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2237:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_EigenLayrDelegation_$56672",
                                    "typeString": "contract EigenLayrDelegation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_EigenLayrDelegation_$56672",
                                    "typeString": "contract EigenLayrDelegation"
                                  }
                                ],
                                "id": 56200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2229:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 56199,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2229:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 56202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2229:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 56190,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2166:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 56191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "2166:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 56203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2166:77:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 56189,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2156:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 56204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2156:88:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2137:107:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 56206,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:107:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56208,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56178,
                        "src": "2273:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56207,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38603,
                      "src": "2254:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 56209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56210,
                  "nodeType": "ExpressionStatement",
                  "src": "2254:32:0"
                }
              ]
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 56181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 56180,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38680,
                  "src": "2054:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2054:11:0"
              }
            ],
            "name": "initialize",
            "nameLocation": "1963:10:0",
            "parameters": {
              "id": 56179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56176,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "1990:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56212,
                  "src": "1974:31:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$56111",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 56175,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56174,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56111,
                      "src": "1974:15:0"
                    },
                    "referencedDeclaration": 56111,
                    "src": "1974:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$56111",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56178,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "2015:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56212,
                  "src": "2007:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1973:55:0"
            },
            "returnParameters": {
              "id": 56182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:0:0"
            },
            "scope": 56672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56257,
            "nodeType": "FunctionDefinition",
            "src": "2553:678:0",
            "nodes": [],
            "body": {
              "id": 56256,
              "nodeType": "Block",
              "src": "2620:611:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 56225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 56221,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2699:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 56222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2699:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 56219,
                              "name": "permissionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56137,
                              "src": "2651:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$547",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 56220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOperatorRegisterPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 525,
                            "src": "2651:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 56223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2651:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 56224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2714:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2651:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e726567697374657241734f70657261746f723a204f70657261746f7220646f6573206e6f74207065726d697373696f6e20746f207265676973746572206173206f70657261746f72",
                        "id": 56226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2732:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c857db208ecaf46d9e32739ce9eaf380d447a7d14d7f11aeac9c84a6e2494462",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: Operator does not permission to register as operator\""
                        },
                        "value": "EigenLayrDelegation.registerAsOperator: Operator does not permission to register as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c857db208ecaf46d9e32739ce9eaf380d447a7d14d7f11aeac9c84a6e2494462",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: Operator does not permission to register as operator\""
                        }
                      ],
                      "id": 56218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2630:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2630:206:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56228,
                  "nodeType": "ExpressionStatement",
                  "src": "2630:206:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 56230,
                            "name": "operatorReceiverRewardAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59111,
                            "src": "2867:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 56233,
                          "indexExpression": {
                            "expression": {
                              "id": 56231,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2897:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 56232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2897:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2867:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 56236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2920:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 56235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2912:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56234,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2912:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 56237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2912:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2867:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e726567697374657241734f70657261746f723a206f70657261746f722068617320616c72656164792072656769737465726564",
                        "id": 56239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2936:73:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_707de6bdd662fd924936555586832cd7e1169328bee03a67ddede80803a5d4a7",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: operator has already registered\""
                        },
                        "value": "EigenLayrDelegation.registerAsOperator: operator has already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_707de6bdd662fd924936555586832cd7e1169328bee03a67ddede80803a5d4a7",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: operator has already registered\""
                        }
                      ],
                      "id": 56229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2846:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:173:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56241,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:173:0"
                },
                {
                  "expression": {
                    "id": 56247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 56242,
                        "name": "operatorReceiverRewardAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59111,
                        "src": "3117:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 56245,
                      "indexExpression": {
                        "expression": {
                          "id": 56243,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3147:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 56244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3147:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3117:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56246,
                      "name": "rewardReceiveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56215,
                      "src": "3161:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3117:64:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56248,
                  "nodeType": "ExpressionStatement",
                  "src": "3117:64:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 56250,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3201:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 56251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3201:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 56252,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3213:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 56253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3213:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56249,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56615,
                      "src": "3191:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 56254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3191:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56255,
                  "nodeType": "ExpressionStatement",
                  "src": "3191:33:0"
                }
              ]
            },
            "baseFunctions": [
              19
            ],
            "documentation": {
              "id": 56213,
              "nodeType": "StructuredDocumentation",
              "src": "2325:223:0",
              "text": " @notice This will be called by an operator to register itself as an operator that stakers can choose to delegate to.\n @param  rewardReceiveAddress another EOA address for receive from mantle network"
            },
            "functionSelector": "bd44e403",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsOperator",
            "nameLocation": "2562:18:0",
            "parameters": {
              "id": 56216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56215,
                  "mutability": "mutable",
                  "name": "rewardReceiveAddress",
                  "nameLocation": "2589:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56257,
                  "src": "2581:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2580:30:0"
            },
            "returnParameters": {
              "id": 56217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2620:0:0"
            },
            "scope": 56672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56281,
            "nodeType": "FunctionDefinition",
            "src": "3435:296:0",
            "nodes": [],
            "body": {
              "id": 56280,
              "nodeType": "Block",
              "src": "3482:249:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 56270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 56266,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3554:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 56267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3554:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 56264,
                              "name": "permissionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56137,
                              "src": "3513:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$547",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 56265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getDelegatorPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 546,
                            "src": "3513:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 56268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3513:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 56269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3569:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3513:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e744d616e616765722e6465706f736974496e746f53747261746567793a2064656c656761746f7220686173206e6f74207065726d697373696f6e20657865632064656c656761746520746f",
                        "id": 56271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3587:86:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        },
                        "value": "InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        }
                      ],
                      "id": 56263,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3492:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3492:191:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56273,
                  "nodeType": "ExpressionStatement",
                  "src": "3492:191:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 56275,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3703:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 56276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3703:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 56277,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56260,
                        "src": "3715:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56274,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56615,
                      "src": "3693:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 56278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56279,
                  "nodeType": "ExpressionStatement",
                  "src": "3693:31:0"
                }
              ]
            },
            "baseFunctions": [
              25
            ],
            "documentation": {
              "id": 56258,
              "nodeType": "StructuredDocumentation",
              "src": "3237:193:0",
              "text": "  @notice This will be called by a staker to delegate its assets to some operator.\n  @param operator is the operator to whom staker (msg.sender) is delegating its assets"
            },
            "functionSelector": "ac637c7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateTo",
            "nameLocation": "3444:10:0",
            "parameters": {
              "id": 56261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56260,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3463:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56281,
                  "src": "3455:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3454:18:0"
            },
            "returnParameters": {
              "id": 56262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3482:0:0"
            },
            "scope": 56672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56367,
            "nodeType": "FunctionDefinition",
            "src": "3924:964:0",
            "nodes": [],
            "body": {
              "id": 56366,
              "nodeType": "Block",
              "src": "4049:839:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 56302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 56298,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4121:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 56299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4121:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 56296,
                              "name": "permissionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56137,
                              "src": "4080:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$547",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 56297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getDelegatorPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 546,
                            "src": "4080:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 56300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4080:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 56301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4136:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4080:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e744d616e616765722e6465706f736974496e746f53747261746567793a2064656c656761746f7220686173206e6f74207065726d697373696f6e20657865632064656c656761746520746f",
                        "id": 56303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4154:86:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        },
                        "value": "InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        }
                      ],
                      "id": 56295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4059:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:191:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56305,
                  "nodeType": "ExpressionStatement",
                  "src": "4059:191:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 56314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 56309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 56307,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56288,
                            "src": "4268:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 56308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4278:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4268:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 56313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 56310,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56288,
                            "src": "4283:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 56311,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4293:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 56312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4293:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4283:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4268:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "64656c65676174696f6e207369676e61747572652065787069726564",
                        "id": 56315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4310:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5723ff926e7a17485b1ef32885df3f570581df71cfe67ad788f26084f37a3ff9",
                          "typeString": "literal_string \"delegation signature expired\""
                        },
                        "value": "delegation signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5723ff926e7a17485b1ef32885df3f570581df71cfe67ad788f26084f37a3ff9",
                          "typeString": "literal_string \"delegation signature expired\""
                        }
                      ],
                      "id": 56306,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4260:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4260:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56317,
                  "nodeType": "ExpressionStatement",
                  "src": "4260:81:0"
                },
                {
                  "assignments": [
                    56319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56319,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "4425:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 56366,
                      "src": "4417:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 56318,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4417:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56333,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56323,
                            "name": "DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59093,
                            "src": "4459:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 56324,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56284,
                            "src": "4480:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 56325,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56286,
                            "src": "4488:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 56329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4498:16:0",
                            "subExpression": {
                              "baseExpression": {
                                "id": 56326,
                                "name": "nonces",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59119,
                                "src": "4498:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 56328,
                              "indexExpression": {
                                "id": 56327,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56284,
                                "src": "4505:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "4498:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 56330,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56288,
                            "src": "4516:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 56321,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4448:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 56322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4448:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 56331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4448:75:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 56320,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4438:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 56332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4438:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4417:107:0"
                },
                {
                  "assignments": [
                    56335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56335,
                      "mutability": "mutable",
                      "name": "digestHash",
                      "nameLocation": "4542:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 56366,
                      "src": "4534:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 56334,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4534:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56344,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 56339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4582:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 56340,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59096,
                            "src": "4594:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 56341,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56319,
                            "src": "4612:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 56337,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4565:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 56338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4565:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 56342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4565:58:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 56336,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4555:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 56343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4555:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4534:90:0"
                },
                {
                  "assignments": [
                    56346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56346,
                      "mutability": "mutable",
                      "name": "recoveredAddress",
                      "nameLocation": "4681:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 56366,
                      "src": "4673:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 56345,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4673:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56353,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 56349,
                        "name": "digestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56335,
                        "src": "4714:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 56350,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56290,
                        "src": "4726:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 56351,
                        "name": "vs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56292,
                        "src": "4729:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 56347,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42226,
                        "src": "4700:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$42226_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 56348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42069,
                      "src": "4700:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 56352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4700:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4673:59:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 56355,
                          "name": "recoveredAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56346,
                          "src": "4751:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 56356,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56284,
                          "src": "4771:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4751:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e64656c6567617465546f42795369676e61747572653a20736967206e6f742066726f6d207374616b6572",
                        "id": 56358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4779:64:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdbf1f36a92f7f27a6882acd331e2541d7c7e084418a282ad266d51ce1c3ccf2",
                          "typeString": "literal_string \"EigenLayrDelegation.delegateToBySignature: sig not from staker\""
                        },
                        "value": "EigenLayrDelegation.delegateToBySignature: sig not from staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdbf1f36a92f7f27a6882acd331e2541d7c7e084418a282ad266d51ce1c3ccf2",
                          "typeString": "literal_string \"EigenLayrDelegation.delegateToBySignature: sig not from staker\""
                        }
                      ],
                      "id": 56354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4743:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4743:101:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56360,
                  "nodeType": "ExpressionStatement",
                  "src": "4743:101:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56362,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56284,
                        "src": "4864:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 56363,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56286,
                        "src": "4872:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56361,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56615,
                      "src": "4854:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 56364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4854:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56365,
                  "nodeType": "ExpressionStatement",
                  "src": "4854:27:0"
                }
              ]
            },
            "baseFunctions": [
              39
            ],
            "documentation": {
              "id": 56282,
              "nodeType": "StructuredDocumentation",
              "src": "3737:182:0",
              "text": " @notice Delegates from `staker` to `operator`.\n @dev requires that r, vs are a valid ECSDA signature from `staker` indicating their intention for this action"
            },
            "functionSelector": "b41b394b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateToBySignature",
            "nameLocation": "3933:21:0",
            "parameters": {
              "id": 56293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56284,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "3963:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56367,
                  "src": "3955:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56283,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3955:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56286,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3979:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56367,
                  "src": "3971:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3971:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56288,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "3997:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56367,
                  "src": "3989:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56290,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "4013:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56367,
                  "src": "4005:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56289,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4005:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56292,
                  "mutability": "mutable",
                  "name": "vs",
                  "nameLocation": "4024:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56367,
                  "src": "4016:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 56291,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4016:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3954:73:0"
            },
            "returnParameters": {
              "id": 56294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4049:0:0"
            },
            "scope": 56672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56393,
            "nodeType": "FunctionDefinition",
            "src": "5153:233:0",
            "nodes": [],
            "body": {
              "id": 56392,
              "nodeType": "Block",
              "src": "5220:166:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 56379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5238:19:0",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 56377,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56370,
                              "src": "5250:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 56376,
                            "name": "isOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56671,
                            "src": "5239:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 56378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5239:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e756e64656c65676174653a206f70657261746f72732063616e6e6f7420756e64656c65676174652066726f6d207468656d73656c766573",
                        "id": 56380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5259:77:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f680da10f74b9eb5c16c35bd020ea3f2f0d1c05c7dc0fd53612d7993ca300be8",
                          "typeString": "literal_string \"EigenLayrDelegation.undelegate: operators cannot undelegate from themselves\""
                        },
                        "value": "EigenLayrDelegation.undelegate: operators cannot undelegate from themselves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f680da10f74b9eb5c16c35bd020ea3f2f0d1c05c7dc0fd53612d7993ca300be8",
                          "typeString": "literal_string \"EigenLayrDelegation.undelegate: operators cannot undelegate from themselves\""
                        }
                      ],
                      "id": 56375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5230:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5230:107:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56382,
                  "nodeType": "ExpressionStatement",
                  "src": "5230:107:0"
                },
                {
                  "expression": {
                    "id": 56390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 56383,
                        "name": "delegatedTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59115,
                        "src": "5347:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 56385,
                      "indexExpression": {
                        "id": 56384,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56370,
                        "src": "5359:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5347:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 56388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5377:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 56387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5369:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 56386,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5369:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 56389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5369:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5347:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56391,
                  "nodeType": "ExpressionStatement",
                  "src": "5347:32:0"
                }
              ]
            },
            "baseFunctions": [
              45
            ],
            "documentation": {
              "id": 56368,
              "nodeType": "StructuredDocumentation",
              "src": "4894:254:0",
              "text": " @notice Undelegates `staker` from the operator who they are delegated to.\n @notice Callable only by the InvestmentManager\n @dev Should only ever be called in the event that the `staker` has no active deposits in EigenLayer."
            },
            "functionSelector": "da8be864",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 56373,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 56372,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56153,
                  "src": "5198:21:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5198:21:0"
              }
            ],
            "name": "undelegate",
            "nameLocation": "5162:10:0",
            "parameters": {
              "id": 56371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56370,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "5181:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56393,
                  "src": "5173:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5173:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5172:16:0"
            },
            "returnParameters": {
              "id": 56374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5220:0:0"
            },
            "scope": 56672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56406,
            "nodeType": "FunctionDefinition",
            "src": "5523:146:0",
            "nodes": [],
            "body": {
              "id": 56405,
              "nodeType": "Block",
              "src": "5606:63:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 56401,
                      "name": "operatorReceiverRewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59111,
                      "src": "5623:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 56403,
                    "indexExpression": {
                      "id": 56402,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56396,
                      "src": "5653:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5623:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 56400,
                  "id": 56404,
                  "nodeType": "Return",
                  "src": "5616:46:0"
                }
              ]
            },
            "baseFunctions": [
              61
            ],
            "documentation": {
              "id": 56394,
              "nodeType": "StructuredDocumentation",
              "src": "5392:126:0",
              "text": "@notice returns the eoa address of the `operator`, which may mediate their interactions with stakers who delegate to them."
            },
            "functionSelector": "ee4ea66a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOperatorRewardAddress",
            "nameLocation": "5532:24:0",
            "parameters": {
              "id": 56397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56396,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5565:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56406,
                  "src": "5557:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56395,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5557:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5556:18:0"
            },
            "returnParameters": {
              "id": 56400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56406,
                  "src": "5598:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5598:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5597:9:0"
            },
            "scope": 56672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56474,
            "nodeType": "FunctionDefinition",
            "src": "5894:649:0",
            "nodes": [],
            "body": {
              "id": 56473,
              "nodeType": "Block",
              "src": "6040:503:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 56420,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56409,
                        "src": "6118:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56419,
                      "name": "isDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56634,
                      "src": "6106:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 56421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6106:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56472,
                  "nodeType": "IfStatement",
                  "src": "6102:435:0",
                  "trueBody": {
                    "id": 56471,
                    "nodeType": "Block",
                    "src": "6127:410:0",
                    "statements": [
                      {
                        "assignments": [
                          56423
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 56423,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "6149:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 56471,
                            "src": "6141:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 56422,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6141:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 56427,
                        "initialValue": {
                          "baseExpression": {
                            "id": 56424,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59115,
                            "src": "6160:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 56426,
                          "indexExpression": {
                            "id": 56425,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56409,
                            "src": "6172:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6160:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6141:38:0"
                      },
                      {
                        "expression": {
                          "id": 56434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 56428,
                                "name": "operatorShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59107,
                                "src": "6250:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IInvestmentStrategy_$323_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IInvestmentStrategy => uint256))"
                                }
                              },
                              "id": 56431,
                              "indexExpression": {
                                "id": 56429,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56423,
                                "src": "6265:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6250:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IInvestmentStrategy_$323_$_t_uint256_$",
                                "typeString": "mapping(contract IInvestmentStrategy => uint256)"
                              }
                            },
                            "id": 56432,
                            "indexExpression": {
                              "id": 56430,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56412,
                              "src": "6275:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                                "typeString": "contract IInvestmentStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6250:34:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 56433,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56414,
                            "src": "6288:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6250:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 56435,
                        "nodeType": "ExpressionStatement",
                        "src": "6250:44:0"
                      },
                      {
                        "assignments": [
                          56440
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 56440,
                            "mutability": "mutable",
                            "name": "investorStrats",
                            "nameLocation": "6338:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 56471,
                            "src": "6309:43:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_memory_ptr",
                              "typeString": "contract IInvestmentStrategy[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 56438,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 56437,
                                  "name": "IInvestmentStrategy",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 323,
                                  "src": "6309:19:0"
                                },
                                "referencedDeclaration": 323,
                                "src": "6309:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                                  "typeString": "contract IInvestmentStrategy"
                                }
                              },
                              "id": 56439,
                              "nodeType": "ArrayTypeName",
                              "src": "6309:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_storage_ptr",
                                "typeString": "contract IInvestmentStrategy[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 56447,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 56445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6381:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 56444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6355:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (contract IInvestmentStrategy[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 56442,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 56441,
                                  "name": "IInvestmentStrategy",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 323,
                                  "src": "6359:19:0"
                                },
                                "referencedDeclaration": 323,
                                "src": "6359:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                                  "typeString": "contract IInvestmentStrategy"
                                }
                              },
                              "id": 56443,
                              "nodeType": "ArrayTypeName",
                              "src": "6359:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_storage_ptr",
                                "typeString": "contract IInvestmentStrategy[]"
                              }
                            }
                          },
                          "id": 56446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6355:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_memory_ptr",
                            "typeString": "contract IInvestmentStrategy[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6309:74:0"
                      },
                      {
                        "assignments": [
                          56452
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 56452,
                            "mutability": "mutable",
                            "name": "investorShares",
                            "nameLocation": "6414:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 56471,
                            "src": "6397:31:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 56450,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6397:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 56451,
                              "nodeType": "ArrayTypeName",
                              "src": "6397:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 56458,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 56456,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6442:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 56455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6431:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 56453,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6435:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 56454,
                              "nodeType": "ArrayTypeName",
                              "src": "6435:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 56457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6431:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6397:47:0"
                      },
                      {
                        "expression": {
                          "id": 56463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 56459,
                              "name": "investorStrats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56440,
                              "src": "6458:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_memory_ptr",
                                "typeString": "contract IInvestmentStrategy[] memory"
                              }
                            },
                            "id": 56461,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 56460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6473:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6458:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                              "typeString": "contract IInvestmentStrategy"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 56462,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56412,
                            "src": "6478:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                              "typeString": "contract IInvestmentStrategy"
                            }
                          },
                          "src": "6458:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                            "typeString": "contract IInvestmentStrategy"
                          }
                        },
                        "id": 56464,
                        "nodeType": "ExpressionStatement",
                        "src": "6458:28:0"
                      },
                      {
                        "expression": {
                          "id": 56469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 56465,
                              "name": "investorShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56452,
                              "src": "6500:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 56467,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 56466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6515:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6500:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 56468,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56414,
                            "src": "6520:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6500:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 56470,
                        "nodeType": "ExpressionStatement",
                        "src": "6500:26:0"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              83
            ],
            "documentation": {
              "id": 56407,
              "nodeType": "StructuredDocumentation",
              "src": "5675:214:0",
              "text": " @notice Increases the `staker`'s delegated shares in `strategy` by `shares, typically called when the staker has further deposits into EigenLayr\n @dev Callable only by the InvestmentManager"
            },
            "functionSelector": "28a573ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 56417,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 56416,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56153,
                  "src": "6014:21:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6014:21:0"
              }
            ],
            "name": "increaseDelegatedShares",
            "nameLocation": "5903:23:0",
            "parameters": {
              "id": 56415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56409,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "5935:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56474,
                  "src": "5927:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5927:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56412,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "5963:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56474,
                  "src": "5943:28:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                    "typeString": "contract IInvestmentStrategy"
                  },
                  "typeName": {
                    "id": 56411,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 56410,
                      "name": "IInvestmentStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 323,
                      "src": "5943:19:0"
                    },
                    "referencedDeclaration": 323,
                    "src": "5943:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                      "typeString": "contract IInvestmentStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56414,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "5981:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56474,
                  "src": "5973:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 56413,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5973:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5926:62:0"
            },
            "returnParameters": {
              "id": 56418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6040:0:0"
            },
            "scope": 56672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56531,
            "nodeType": "FunctionDefinition",
            "src": "6792:629:0",
            "nodes": [],
            "body": {
              "id": 56530,
              "nodeType": "Block",
              "src": "6992:429:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 56490,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56477,
                        "src": "7018:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 56489,
                      "name": "isDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56634,
                      "src": "7006:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 56491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7006:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56529,
                  "nodeType": "IfStatement",
                  "src": "7002:413:0",
                  "trueBody": {
                    "id": 56528,
                    "nodeType": "Block",
                    "src": "7027:388:0",
                    "statements": [
                      {
                        "assignments": [
                          56493
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 56493,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "7049:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 56528,
                            "src": "7041:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 56492,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7041:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 56497,
                        "initialValue": {
                          "baseExpression": {
                            "id": 56494,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59115,
                            "src": "7060:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 56496,
                          "indexExpression": {
                            "id": 56495,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56477,
                            "src": "7072:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7060:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7041:38:0"
                      },
                      {
                        "assignments": [
                          56499
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 56499,
                            "mutability": "mutable",
                            "name": "stratsLength",
                            "nameLocation": "7164:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 56528,
                            "src": "7156:20:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 56498,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7156:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 56502,
                        "initialValue": {
                          "expression": {
                            "id": 56500,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56481,
                            "src": "7179:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_calldata_ptr",
                              "typeString": "contract IInvestmentStrategy[] calldata"
                            }
                          },
                          "id": 56501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7179:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7156:40:0"
                      },
                      {
                        "body": {
                          "id": 56526,
                          "nodeType": "Block",
                          "src": "7249:156:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 56520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 56510,
                                      "name": "operatorShares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 59107,
                                      "src": "7267:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IInvestmentStrategy_$323_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(contract IInvestmentStrategy => uint256))"
                                      }
                                    },
                                    "id": 56515,
                                    "indexExpression": {
                                      "id": 56511,
                                      "name": "operator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 56493,
                                      "src": "7282:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7267:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IInvestmentStrategy_$323_$_t_uint256_$",
                                      "typeString": "mapping(contract IInvestmentStrategy => uint256)"
                                    }
                                  },
                                  "id": 56516,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 56512,
                                      "name": "strategies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 56481,
                                      "src": "7292:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_calldata_ptr",
                                        "typeString": "contract IInvestmentStrategy[] calldata"
                                      }
                                    },
                                    "id": 56514,
                                    "indexExpression": {
                                      "id": 56513,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 56504,
                                      "src": "7303:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7292:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                                      "typeString": "contract IInvestmentStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7267:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 56517,
                                    "name": "shares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56484,
                                    "src": "7310:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 56519,
                                  "indexExpression": {
                                    "id": 56518,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 56504,
                                    "src": "7317:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7310:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7267:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 56521,
                              "nodeType": "ExpressionStatement",
                              "src": "7267:52:0"
                            },
                            {
                              "id": 56525,
                              "nodeType": "UncheckedBlock",
                              "src": "7337:54:0",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 56523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7369:3:0",
                                    "subExpression": {
                                      "id": 56522,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 56504,
                                      "src": "7371:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 56524,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7369:3:0"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 56509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 56507,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56504,
                            "src": "7230:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 56508,
                            "name": "stratsLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56499,
                            "src": "7234:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7230:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 56527,
                        "initializationExpression": {
                          "assignments": [
                            56504
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 56504,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7223:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 56527,
                              "src": "7215:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 56503,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7215:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 56506,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 56505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7227:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7215:13:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "7210:195:0"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              96
            ],
            "documentation": {
              "id": 56475,
              "nodeType": "StructuredDocumentation",
              "src": "6549:238:0",
              "text": " @notice Decreases the `staker`'s delegated shares in each entry of `strategies` by its respective `shares[i]`, typically called when the staker withdraws from EigenLayr\n @dev Callable only by the InvestmentManager"
            },
            "functionSelector": "5820491c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 56487,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 56486,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 56153,
                  "src": "6966:21:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6966:21:0"
              }
            ],
            "name": "decreaseDelegatedShares",
            "nameLocation": "6801:23:0",
            "parameters": {
              "id": 56485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56477,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "6842:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56531,
                  "src": "6834:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6834:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56481,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "6889:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56531,
                  "src": "6858:41:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_calldata_ptr",
                    "typeString": "contract IInvestmentStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 56479,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 56478,
                        "name": "IInvestmentStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 323,
                        "src": "6858:19:0"
                      },
                      "referencedDeclaration": 323,
                      "src": "6858:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                        "typeString": "contract IInvestmentStrategy"
                      }
                    },
                    "id": 56480,
                    "nodeType": "ArrayTypeName",
                    "src": "6858:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_storage_ptr",
                      "typeString": "contract IInvestmentStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56484,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "6928:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56531,
                  "src": "6909:25:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 56482,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6909:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 56483,
                    "nodeType": "ArrayTypeName",
                    "src": "6909:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6824:116:0"
            },
            "returnParameters": {
              "id": 56488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6992:0:0"
            },
            "scope": 56672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 56615,
            "nodeType": "FunctionDefinition",
            "src": "7972:1111:0",
            "nodes": [],
            "body": {
              "id": 56614,
              "nodeType": "Block",
              "src": "8075:1008:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    56543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56543,
                      "mutability": "mutable",
                      "name": "rewardAddress",
                      "nameLocation": "8093:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 56614,
                      "src": "8085:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 56542,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8085:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56547,
                  "initialValue": {
                    "baseExpression": {
                      "id": 56544,
                      "name": "operatorReceiverRewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59111,
                      "src": "8109:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 56546,
                    "indexExpression": {
                      "id": 56545,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56536,
                      "src": "8139:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8109:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8085:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 56549,
                          "name": "rewardAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56543,
                          "src": "8179:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 56552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8204:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 56551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8196:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56550,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8196:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 56553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8196:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8179:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a206f70657261746f7220686173206e6f7420796574207265676973746572656420617320612064656c6567617465",
                        "id": 56555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8208:78:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076b77285ae9dd8b0c14123f78d158756024dca0c7de99dc9436071e6c0dc729",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: operator has not yet registered as a delegate\""
                        },
                        "value": "EigenLayrDelegation._delegate: operator has not yet registered as a delegate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076b77285ae9dd8b0c14123f78d158756024dca0c7de99dc9436071e6c0dc729",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: operator has not yet registered as a delegate\""
                        }
                      ],
                      "id": 56548,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8158:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8158:138:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56557,
                  "nodeType": "ExpressionStatement",
                  "src": "8158:138:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 56560,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56534,
                            "src": "8330:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 56559,
                          "name": "isNotDelegated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56653,
                          "src": "8315:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 56561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8315:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a207374616b657220686173206578697374696e672064656c65676174696f6e",
                        "id": 56562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8339:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1022491f5cd71f1822fc6bb0f89913349e9ef8529a8261768e2e541f03c88ff",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: staker has existing delegation\""
                        },
                        "value": "EigenLayrDelegation._delegate: staker has existing delegation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1022491f5cd71f1822fc6bb0f89913349e9ef8529a8261768e2e541f03c88ff",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: staker has existing delegation\""
                        }
                      ],
                      "id": 56558,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8307:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8307:96:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56564,
                  "nodeType": "ExpressionStatement",
                  "src": "8307:96:0"
                },
                {
                  "expression": {
                    "id": 56569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 56565,
                        "name": "delegatedTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59115,
                        "src": "8484:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 56567,
                      "indexExpression": {
                        "id": 56566,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56534,
                        "src": "8496:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8484:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 56568,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56536,
                      "src": "8506:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8484:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 56570,
                  "nodeType": "ExpressionStatement",
                  "src": "8484:30:0"
                },
                {
                  "assignments": [
                    56575,
                    56578
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56575,
                      "mutability": "mutable",
                      "name": "strategies",
                      "nameLocation": "8635:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 56614,
                      "src": "8606:39:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_memory_ptr",
                        "typeString": "contract IInvestmentStrategy[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 56573,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 56572,
                            "name": "IInvestmentStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 323,
                            "src": "8606:19:0"
                          },
                          "referencedDeclaration": 323,
                          "src": "8606:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                            "typeString": "contract IInvestmentStrategy"
                          }
                        },
                        "id": 56574,
                        "nodeType": "ArrayTypeName",
                        "src": "8606:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_storage_ptr",
                          "typeString": "contract IInvestmentStrategy[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 56578,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "8664:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 56614,
                      "src": "8647:23:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 56576,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8647:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 56577,
                        "nodeType": "ArrayTypeName",
                        "src": "8647:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56583,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 56581,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56534,
                        "src": "8704:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 56579,
                        "name": "investmentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59100,
                        "src": "8674:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                          "typeString": "contract IInvestmentManager"
                        }
                      },
                      "id": 56580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 213,
                      "src": "8674:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (contract IInvestmentStrategy[] memory,uint256[] memory)"
                      }
                    },
                    "id": 56582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8674:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(contract IInvestmentStrategy[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8605:106:0"
                },
                {
                  "assignments": [
                    56585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56585,
                      "mutability": "mutable",
                      "name": "stratsLength",
                      "nameLocation": "8782:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 56614,
                      "src": "8774:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 56584,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8774:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 56588,
                  "initialValue": {
                    "expression": {
                      "id": 56586,
                      "name": "strategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56575,
                      "src": "8797:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_memory_ptr",
                        "typeString": "contract IInvestmentStrategy[] memory"
                      }
                    },
                    "id": 56587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8797:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8774:40:0"
                },
                {
                  "body": {
                    "id": 56612,
                    "nodeType": "Block",
                    "src": "8863:214:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 56606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 56596,
                                "name": "operatorShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59107,
                                "src": "8955:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IInvestmentStrategy_$323_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IInvestmentStrategy => uint256))"
                                }
                              },
                              "id": 56601,
                              "indexExpression": {
                                "id": 56597,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56536,
                                "src": "8970:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8955:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IInvestmentStrategy_$323_$_t_uint256_$",
                                "typeString": "mapping(contract IInvestmentStrategy => uint256)"
                              }
                            },
                            "id": 56602,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 56598,
                                "name": "strategies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56575,
                                "src": "8980:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$323_$dyn_memory_ptr",
                                  "typeString": "contract IInvestmentStrategy[] memory"
                                }
                              },
                              "id": 56600,
                              "indexExpression": {
                                "id": 56599,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56590,
                                "src": "8991:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8980:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                                "typeString": "contract IInvestmentStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8955:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 56603,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56578,
                              "src": "8998:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 56605,
                            "indexExpression": {
                              "id": 56604,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56590,
                              "src": "9005:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8998:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8955:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 56607,
                        "nodeType": "ExpressionStatement",
                        "src": "8955:52:0"
                      },
                      {
                        "id": 56611,
                        "nodeType": "UncheckedBlock",
                        "src": "9021:46:0",
                        "statements": [
                          {
                            "expression": {
                              "id": 56609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9049:3:0",
                              "subExpression": {
                                "id": 56608,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 56590,
                                "src": "9051:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 56610,
                            "nodeType": "ExpressionStatement",
                            "src": "9049:3:0"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 56595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 56593,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56590,
                      "src": "8844:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 56594,
                      "name": "stratsLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56585,
                      "src": "8848:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8844:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 56613,
                  "initializationExpression": {
                    "assignments": [
                      56590
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 56590,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8837:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 56613,
                        "src": "8829:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 56589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8829:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 56592,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 56591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8841:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8829:13:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "8824:253:0"
                }
              ]
            },
            "documentation": {
              "id": 56532,
              "nodeType": "StructuredDocumentation",
              "src": "7427:540:0",
              "text": " @notice Internal function implementing the delegation *from* `staker` *to* `operator`.\n @param staker The address to delegate *from* -- this address is delegating control of its own assets.\n @param operator The address to delegate *to* -- this address is being given power to place the `staker`'s assets at risk on services\n @dev Ensures that the operator has registered as a delegate (`address(dt) != address(0)`), verifies that `staker` is not already\n delegated, and records the new delegation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 56539,
                    "name": "PAUSED_NEW_DELEGATION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 56133,
                    "src": "8052:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 56540,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 56538,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3506,
                  "src": "8034:17:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "8034:40:0"
              }
            ],
            "name": "_delegate",
            "nameLocation": "7981:9:0",
            "parameters": {
              "id": 56537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56534,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "7999:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56615,
                  "src": "7991:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7991:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56536,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "8015:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56615,
                  "src": "8007:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8007:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7990:34:0"
            },
            "returnParameters": {
              "id": 56541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8075:0:0"
            },
            "scope": 56672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 56634,
            "nodeType": "FunctionDefinition",
            "src": "9202:123:0",
            "nodes": [],
            "body": {
              "id": 56633,
              "nodeType": "Block",
              "src": "9266:59:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 56623,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59115,
                            "src": "9284:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 56625,
                          "indexExpression": {
                            "id": 56624,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56618,
                            "src": "9296:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9284:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 56628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9315:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 56627,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9307:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56626,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9307:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 56629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9307:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9284:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 56631,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9283:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 56622,
                  "id": 56632,
                  "nodeType": "Return",
                  "src": "9276:42:0"
                }
              ]
            },
            "baseFunctions": [
              104
            ],
            "documentation": {
              "id": 56616,
              "nodeType": "StructuredDocumentation",
              "src": "9111:86:0",
              "text": "@notice Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
            },
            "functionSelector": "3e28391d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDelegated",
            "nameLocation": "9211:11:0",
            "parameters": {
              "id": 56619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56618,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "9231:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56634,
                  "src": "9223:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56617,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9223:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9222:16:0"
            },
            "returnParameters": {
              "id": 56622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56634,
                  "src": "9260:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56620,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9260:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9259:6:0"
            },
            "scope": 56672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 56653,
            "nodeType": "FunctionDefinition",
            "src": "9426:126:0",
            "nodes": [],
            "body": {
              "id": 56652,
              "nodeType": "Block",
              "src": "9493:59:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 56649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 56642,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59115,
                            "src": "9511:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 56644,
                          "indexExpression": {
                            "id": 56643,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56637,
                            "src": "9523:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9511:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 56647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9542:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 56646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9534:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 56645,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9534:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 56648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9534:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9511:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 56650,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9510:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 56641,
                  "id": 56651,
                  "nodeType": "Return",
                  "src": "9503:42:0"
                }
              ]
            },
            "baseFunctions": [
              112
            ],
            "documentation": {
              "id": 56635,
              "nodeType": "StructuredDocumentation",
              "src": "9331:90:0",
              "text": "@notice Returns 'true' if `staker` is *not* actively delegated, and 'false' otherwise."
            },
            "functionSelector": "1d3696b7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isNotDelegated",
            "nameLocation": "9435:14:0",
            "parameters": {
              "id": 56638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56637,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "9458:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56653,
                  "src": "9450:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56636,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9450:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9449:16:0"
            },
            "returnParameters": {
              "id": 56641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56640,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56653,
                  "src": "9487:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56639,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9487:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9486:6:0"
            },
            "scope": 56672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 56671,
            "nodeType": "FunctionDefinition",
            "src": "9659:142:0",
            "nodes": [],
            "body": {
              "id": 56670,
              "nodeType": "Block",
              "src": "9724:77:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 56668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 56661,
                        "name": "operatorReceiverRewardAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59111,
                        "src": "9741:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 56663,
                      "indexExpression": {
                        "id": 56662,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56656,
                        "src": "9771:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9741:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 56666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9792:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 56665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9784:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 56664,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9784:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 56667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9784:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9741:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 56660,
                  "id": 56669,
                  "nodeType": "Return",
                  "src": "9734:60:0"
                }
              ]
            },
            "baseFunctions": [
              120
            ],
            "documentation": {
              "id": 56654,
              "nodeType": "StructuredDocumentation",
              "src": "9558:96:0",
              "text": "@notice Returns if an operator can be delegated to, i.e. it has called `registerAsOperator`."
            },
            "functionSelector": "6d70f7ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperator",
            "nameLocation": "9668:10:0",
            "parameters": {
              "id": 56657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56656,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9687:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 56671,
                  "src": "9679:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9679:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9678:18:0"
            },
            "returnParameters": {
              "id": 56660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56659,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56671,
                  "src": "9718:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 56658,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9718:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9717:6:0"
            },
            "scope": 56672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 56123,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38778,
              "src": "1168:13:0"
            },
            "id": 56124,
            "nodeType": "InheritanceSpecifier",
            "src": "1168:13:0"
          },
          {
            "baseName": {
              "id": 56125,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38609,
              "src": "1183:18:0"
            },
            "id": 56126,
            "nodeType": "InheritanceSpecifier",
            "src": "1183:18:0"
          },
          {
            "baseName": {
              "id": 56127,
              "name": "EigenLayrDelegationStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 59131,
              "src": "1203:26:0"
            },
            "id": 56128,
            "nodeType": "InheritanceSpecifier",
            "src": "1203:26:0"
          },
          {
            "baseName": {
              "id": 56129,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3650,
              "src": "1231:8:0"
            },
            "id": 56130,
            "nodeType": "InheritanceSpecifier",
            "src": "1231:8:0"
          }
        ],
        "canonicalName": "EigenLayrDelegation",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 56122,
          "nodeType": "StructuredDocumentation",
          "src": "513:622:0",
          "text": " @title The primary delegation contract for EigenLayr.\n @author Layr Labs, Inc.\n @notice  This is the contract for delegation in EigenLayr. The main functionalities of this contract are\n - enabling anyone to register as an operator in EigenLayr\n - allowing new operators to provide a another eoa address, which may mediate their interactions with stakers who delegate to them\n - enabling any staker to delegate its stake to the operator of its choice\n - enabling a staker to undelegate its assets from an operator (performed as part of the withdrawal process, initiated through the InvestmentManager)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          56672,
          3650,
          59131,
          121,
          38609,
          39177,
          38778
        ],
        "name": "EigenLayrDelegation",
        "nameLocation": "1145:19:0",
        "scope": 56673,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 0
}