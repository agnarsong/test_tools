{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "_investmentManager",
          "type": "address"
        },
        {
          "internalType": "contract IRegistryPermission",
          "name": "_permissionManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DELEGATION_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IInvestmentStrategy[]",
          "name": "strategies",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        }
      ],
      "name": "decreaseDelegatedShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "delegateTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "vs",
          "type": "bytes32"
        }
      ],
      "name": "delegateToBySignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "delegatedTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "getOperatorRewardAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "contract IInvestmentStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "increaseDelegatedShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentManager",
      "outputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "isDelegated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "isNotDelegated",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operatorReceiverRewardAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IInvestmentStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "operatorShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionManager",
      "outputs": [
        {
          "internalType": "contract IRegistryPermission",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "rewardReceiveAddress",
          "type": "address"
        }
      ],
      "name": "registerAsOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "undelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b50604051620021d9380380620021d9833981016040819052620000349162000134565b6001600160a01b03808316608052811660a0526200005162000059565b505062000173565b600054610100900460ff1615620000c65760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000119576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200013157600080fd5b50565b600080604083850312156200014857600080fd5b825162000155816200011b565b602084015190925062000168816200011b565b809150509250929050565b60805160a05161200f620001ca6000396000818161046401528181610b0201528181610bb80152610e360152600081816102b7015281816106c1015281816109a50152818161101f01526116b4015261200f6000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063778e55f3116100f9578063bd44e40311610097578063e7a324dc11610071578063e7a324dc14610499578063ee4ea66a146104c0578063f2fde38b146104ec578063fabc1cbc146104ff57600080fd5b8063bd44e4031461044c578063cc7a20491461045f578063da8be8641461048657600080fd5b80638b8209df116100d35780638b8209df146103ec5780638da5cb5b14610415578063ac637c7a14610426578063b41b394b1461043957600080fd5b8063778e55f31461038e5780637ecebe00146103b9578063886f1195146103d957600080fd5b80634b31bb10116101665780635c975abb116101405780635c975abb1461032757806365da12641461032f5780636d70f7ae14610358578063715018a61461038657600080fd5b80634b31bb10146102b25780635820491c146102f15780635ac86ab71461030457600080fd5b806328a573ae116101a257806328a573ae146102555780633644e515146102685780633e28391d14610271578063485cc9551461029f57600080fd5b8063136439dd146101c95780631d3696b7146101de57806320606b7014610220575b600080fd5b6101dc6101d7366004611a3f565b610512565b005b61020b6101ec366004611a6d565b6001600160a01b03908116600090815260686020526040902054161590565b60405190151581526020015b60405180910390f35b6102477f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b604051908152602001610217565b6101dc610263366004611a91565b6106b6565b61024760655481565b61020b61027f366004611a6d565b6001600160a01b0390811660009081526068602052604090205416151590565b6101dc6102ad366004611ad2565b610809565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610217565b6101dc6102ff366004611b57565b61099a565b61020b610312366004611bda565b606b54600160ff9092169190911b9081161490565b606b54610247565b6102d961033d366004611a6d565b6068602052600090815260409020546001600160a01b031681565b61020b610366366004611a6d565b6001600160a01b0390811660009081526067602052604090205416151590565b6101dc610ad9565b61024761039c366004611ad2565b606660209081526000928352604080842090915290825290205481565b6102476103c7366004611a6d565b60696020526000908152604090205481565b606a546102d9906001600160a01b031681565b6102d96103fa366004611a6d565b6067602052600090815260409020546001600160a01b031681565b6033546001600160a01b03166102d9565b6101dc610434366004611a6d565b610aed565b6101dc610447366004611bfd565b610ba3565b6101dc61045a366004611a6d565b610e21565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6101dc610494366004611a6d565b611014565b6102477fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c81565b6102d96104ce366004611a6d565b6001600160a01b039081166000908152606760205260409020541690565b6101dc6104fa366004611a6d565b611125565b6101dc61050d366004611a3f565b61119b565b606a60009054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190611c4e565b6001600160a01b0316336001600160a01b0316146105ff5760405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b60648201526084015b60405180910390fd5b606b54818116146106785760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106fe5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038084166000908152606860205260409020541615610804576001600160a01b0380841660009081526068602090815260408083205484168084526066835281842094871684529390915281208054849290610762908490611cb0565b909155505060408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050905084826000815181106107c0576107c0611cde565b60200260200101906001600160a01b031690816001600160a01b03168152505083816000815181106107f4576107f4611cde565b6020026020010181815250505050505b505050565b600054610100900460ff16158080156108295750600054600160ff909116105b806108435750303b158015610843575060005460ff166001145b6108a65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105f6565b6000805460ff1916600117905580156108c9576000805461ff0019166101001790555b6108d483600061133a565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666040518060400160405280600981526020016822b4b3b2b72630bcb960b91b815250463060405160200161092c9493929190611cf4565b60408051601f1981840301815291905280516020909101206065556109508261143a565b8015610804576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e25760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038086166000908152606860205260409020541615610ad2576001600160a01b038086166000908152606860205260408120549091169084905b81811015610ace57848482818110610a3d57610a3d611cde565b9050602002013560666000856001600160a01b03166001600160a01b031681526020019081526020016000206000898985818110610a7d57610a7d611cde565b9050602002016020810190610a929190611a6d565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610ac19190611d70565b9091555050600101610a23565b5050505b5050505050565b610ae161148c565b610aeb600061143a565b565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190611d87565b1515600114610b965760405162461bcd60e51b81526004016105f690611da9565b610ba033826114e6565b50565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b9190611d87565b1515600114610c4c5760405162461bcd60e51b81526004016105f690611da9565b821580610c595750428310155b610ca55760405162461bcd60e51b815260206004820152601c60248201527f64656c65676174696f6e207369676e617475726520657870697265640000000060448201526064016105f6565b6001600160a01b038516600090815260696020526040812080547fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c918891889185610cef83611e23565b909155506040805160208101959095526001600160a01b039384169085015291166060830152608082015260a0810185905260c001604051602081830303815290604052805190602001209050600060655482604051602001610d6992919061190160f01b81526002810192909252602282015260420190565b6040516020818303038152906040528051906020012090506000610d8e8286866117ce565b9050876001600160a01b0316816001600160a01b031614610e175760405162461bcd60e51b815260206004820152603e60248201527f456967656e4c61797244656c65676174696f6e2e64656c6567617465546f427960448201527f5369676e61747572653a20736967206e6f742066726f6d207374616b6572000060648201526084016105f6565b610ace88886114e6565b60405163bfd79e9960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bfd79e9990602401602060405180830381865afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190611d87565b1515600114610f465760405162461bcd60e51b815260206004820152605c60248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a204f70657261746f7220646f6573206e6f74207065726d697360648201527f73696f6e20746f207265676973746572206173206f70657261746f7200000000608482015260a4016105f6565b336000908152606760205260409020546001600160a01b031615610fe25760405162461bcd60e51b815260206004820152604760248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a206f70657261746f722068617320616c7265616479207265676064820152661a5cdd195c995960ca1b608482015260a4016105f6565b33600081815260676020526040902080546001600160a01b0319166001600160a01b038416179055610ba090806114e6565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461105c5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b0380821660009081526067602052604090205416156110fe5760405162461bcd60e51b815260206004820152604b60248201527f456967656e4c61797244656c65676174696f6e2e756e64656c65676174653a2060448201527f6f70657261746f72732063616e6e6f7420756e64656c65676174652066726f6d60648201526a207468656d73656c76657360a81b608482015260a4016105f6565b6001600160a01b0316600090815260686020526040902080546001600160a01b0319169055565b61112d61148c565b6001600160a01b0381166111925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f6565b610ba08161143a565b606a60009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112129190611c4e565b6001600160a01b0316336001600160a01b0316146112855760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b60648201526084016105f6565b606b54198119606b541916146113035760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020016106ab565b606a546001600160a01b031615801561135b57506001600160a01b03821615155b6113dd5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250606a80546001600160a01b0319166001600160a01b0392909216919091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6033546001600160a01b03163314610aeb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f6565b606b546000906001908116141561153f5760405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e646578206973207061757365640000000000000060448201526064016105f6565b6001600160a01b0380831660009081526067602052604090205416806115e25760405162461bcd60e51b815260206004820152604c60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a206f60448201527f70657261746f7220686173206e6f74207965742072656769737465726564206160648201526b7320612064656c656761746560a01b608482015260a4016105f6565b6001600160a01b0380851660009081526068602052604090205416156116705760405162461bcd60e51b815260206004820152603d60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a207360448201527f74616b657220686173206578697374696e672064656c65676174696f6e00000060648201526084016105f6565b6001600160a01b0384811660008181526068602052604080822080546001600160a01b031916888616179055516394f649dd60e01b815260048101929092529182917f0000000000000000000000000000000000000000000000000000000000000000909116906394f649dd90602401600060405180830381865afa1580156116fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117259190810190611efe565b8151919350915060005b81811015610ace5782818151811061174957611749611cde565b602002602001015160666000896001600160a01b03166001600160a01b03168152602001908152602001600020600086848151811061178a5761178a611cde565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546117c19190611cb0565b909155505060010161172f565b60008060006117de8686866117f4565b915091506117eb8161182d565b50949350505050565b6000806001600160ff1b0383168161181160ff86901c601b611cb0565b905061181f8782888561197b565b935093505050935093915050565b600081600481111561184157611841611fc3565b141561184a5750565b600181600481111561185e5761185e611fc3565b14156118ac5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f6565b60028160048111156118c0576118c0611fc3565b141561190e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f6565b600381600481111561192257611922611fc3565b1415610ba05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119b25750600090506003611a36565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a06573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a2f57600060019250925050611a36565b9150600090505b94509492505050565b600060208284031215611a5157600080fd5b5035919050565b6001600160a01b0381168114610ba057600080fd5b600060208284031215611a7f57600080fd5b8135611a8a81611a58565b9392505050565b600080600060608486031215611aa657600080fd5b8335611ab181611a58565b92506020840135611ac181611a58565b929592945050506040919091013590565b60008060408385031215611ae557600080fd5b8235611af081611a58565b91506020830135611b0081611a58565b809150509250929050565b60008083601f840112611b1d57600080fd5b50813567ffffffffffffffff811115611b3557600080fd5b6020830191508360208260051b8501011115611b5057600080fd5b9250929050565b600080600080600060608688031215611b6f57600080fd5b8535611b7a81611a58565b9450602086013567ffffffffffffffff80821115611b9757600080fd5b611ba389838a01611b0b565b90965094506040880135915080821115611bbc57600080fd5b50611bc988828901611b0b565b969995985093965092949392505050565b600060208284031215611bec57600080fd5b813560ff81168114611a8a57600080fd5b600080600080600060a08688031215611c1557600080fd5b8535611c2081611a58565b94506020860135611c3081611a58565b94979496505050506040830135926060810135926080909101359150565b600060208284031215611c6057600080fd5b8151611a8a81611a58565b60208082526015908201527437b7363ca4b73b32b9ba36b2b73a26b0b730b3b2b960591b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611cc357611cc3611c9a565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b84815260006020608081840152855180608085015260005b81811015611d285787810183015185820160a001528201611d0c565b81811115611d3a57600060a083870101525b5060408401869052601f01601f1916830160a0019150611d67905060608301846001600160a01b03169052565b95945050505050565b600082821015611d8257611d82611c9a565b500390565b600060208284031215611d9957600080fd5b81518015158114611a8a57600080fd5b60208082526054908201527f496e766573746d656e744d616e616765722e6465706f736974496e746f53747260408201527f61746567793a2064656c656761746f7220686173206e6f74207065726d697373606082015273696f6e20657865632064656c656761746520746f60601b608082015260a00190565b6000600019821415611e3757611e37611c9a565b5060010190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e6757611e67611cc8565b604052919050565b600067ffffffffffffffff821115611e8957611e89611cc8565b5060051b60200190565b600082601f830112611ea457600080fd5b81516020611eb9611eb483611e6f565b611e3e565b82815260059290921b84018101918181019086841115611ed857600080fd5b8286015b84811015611ef35780518352918301918301611edc565b509695505050505050565b60008060408385031215611f1157600080fd5b825167ffffffffffffffff80821115611f2957600080fd5b818501915085601f830112611f3d57600080fd5b81516020611f4d611eb483611e6f565b82815260059290921b84018101918181019089841115611f6c57600080fd5b948201945b83861015611f93578551611f8481611a58565b82529482019490820190611f71565b91880151919650909350505080821115611fac57600080fd5b50611fb985828601611e93565b9150509250929050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220eeb84ed1dae6b21a510085a454236b1599468051cc44d55e1f63f9214f16ae7a64736f6c634300080c0033",
    "sourceMap": "1136:8667:35:-:0;;;1710:238;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1756:38:36;;;;;1871::35;::::1;;::::0;1919:22:::1;:20;:22::i;:::-;1710:238:::0;;1136:8667;;5928:279:82;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:82;;857:2:128;5987:66:82;;;839:21:128;896:2;876:18;;;869:30;935:34;915:18;;;908:62;-1:-1:-1;;;986:18:128;;;979:37;1033:19;;5987:66:82;;;;;;;;6067:12;;6082:15;6067:12;;;:30;6063:138;;;6113:12;:30;;-1:-1:-1;;6113:30:82;6128:15;6113:30;;;;;;6162:28;;1205:36:128;;;6162:28:82;;1193:2:128;1178:18;6162:28:82;;;;;;;6063:138;5928:279::o;14:151:128:-;-1:-1:-1;;;;;109:31:128;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:480::-;304:6;312;365:2;353:9;344:7;340:23;336:32;333:52;;;381:1;378;371:12;333:52;413:9;407:16;432:51;477:5;432:51;:::i;:::-;552:2;537:18;;531:25;502:5;;-1:-1:-1;565:53:128;531:25;565:53;:::i;:::-;637:7;627:17;;;170:480;;;;;:::o;1063:184::-;1136:8667:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c8063778e55f3116100f9578063bd44e40311610097578063e7a324dc11610071578063e7a324dc14610499578063ee4ea66a146104c0578063f2fde38b146104ec578063fabc1cbc146104ff57600080fd5b8063bd44e4031461044c578063cc7a20491461045f578063da8be8641461048657600080fd5b80638b8209df116100d35780638b8209df146103ec5780638da5cb5b14610415578063ac637c7a14610426578063b41b394b1461043957600080fd5b8063778e55f31461038e5780637ecebe00146103b9578063886f1195146103d957600080fd5b80634b31bb10116101665780635c975abb116101405780635c975abb1461032757806365da12641461032f5780636d70f7ae14610358578063715018a61461038657600080fd5b80634b31bb10146102b25780635820491c146102f15780635ac86ab71461030457600080fd5b806328a573ae116101a257806328a573ae146102555780633644e515146102685780633e28391d14610271578063485cc9551461029f57600080fd5b8063136439dd146101c95780631d3696b7146101de57806320606b7014610220575b600080fd5b6101dc6101d7366004611a3f565b610512565b005b61020b6101ec366004611a6d565b6001600160a01b03908116600090815260686020526040902054161590565b60405190151581526020015b60405180910390f35b6102477f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b604051908152602001610217565b6101dc610263366004611a91565b6106b6565b61024760655481565b61020b61027f366004611a6d565b6001600160a01b0390811660009081526068602052604090205416151590565b6101dc6102ad366004611ad2565b610809565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610217565b6101dc6102ff366004611b57565b61099a565b61020b610312366004611bda565b606b54600160ff9092169190911b9081161490565b606b54610247565b6102d961033d366004611a6d565b6068602052600090815260409020546001600160a01b031681565b61020b610366366004611a6d565b6001600160a01b0390811660009081526067602052604090205416151590565b6101dc610ad9565b61024761039c366004611ad2565b606660209081526000928352604080842090915290825290205481565b6102476103c7366004611a6d565b60696020526000908152604090205481565b606a546102d9906001600160a01b031681565b6102d96103fa366004611a6d565b6067602052600090815260409020546001600160a01b031681565b6033546001600160a01b03166102d9565b6101dc610434366004611a6d565b610aed565b6101dc610447366004611bfd565b610ba3565b6101dc61045a366004611a6d565b610e21565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6101dc610494366004611a6d565b611014565b6102477fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c81565b6102d96104ce366004611a6d565b6001600160a01b039081166000908152606760205260409020541690565b6101dc6104fa366004611a6d565b611125565b6101dc61050d366004611a3f565b61119b565b606a60009054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105899190611c4e565b6001600160a01b0316336001600160a01b0316146105ff5760405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b60648201526084015b60405180910390fd5b606b54818116146106785760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106fe5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038084166000908152606860205260409020541615610804576001600160a01b0380841660009081526068602090815260408083205484168084526066835281842094871684529390915281208054849290610762908490611cb0565b909155505060408051600180825281830190925260009160208083019080368337505060408051600180825281830190925292935060009291506020808301908036833701905050905084826000815181106107c0576107c0611cde565b60200260200101906001600160a01b031690816001600160a01b03168152505083816000815181106107f4576107f4611cde565b6020026020010181815250505050505b505050565b600054610100900460ff16158080156108295750600054600160ff909116105b806108435750303b158015610843575060005460ff166001145b6108a65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105f6565b6000805460ff1916600117905580156108c9576000805461ff0019166101001790555b6108d483600061133a565b7f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666040518060400160405280600981526020016822b4b3b2b72630bcb960b91b815250463060405160200161092c9493929190611cf4565b60408051601f1981840301815291905280516020909101206065556109508261143a565b8015610804576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146109e25760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b038086166000908152606860205260409020541615610ad2576001600160a01b038086166000908152606860205260408120549091169084905b81811015610ace57848482818110610a3d57610a3d611cde565b9050602002013560666000856001600160a01b03166001600160a01b031681526020019081526020016000206000898985818110610a7d57610a7d611cde565b9050602002016020810190610a929190611a6d565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610ac19190611d70565b9091555050600101610a23565b5050505b5050505050565b610ae161148c565b610aeb600061143a565b565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190611d87565b1515600114610b965760405162461bcd60e51b81526004016105f690611da9565b610ba033826114e6565b50565b60405163314145ff60e11b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906362828bfe90602401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b9190611d87565b1515600114610c4c5760405162461bcd60e51b81526004016105f690611da9565b821580610c595750428310155b610ca55760405162461bcd60e51b815260206004820152601c60248201527f64656c65676174696f6e207369676e617475726520657870697265640000000060448201526064016105f6565b6001600160a01b038516600090815260696020526040812080547fb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c918891889185610cef83611e23565b909155506040805160208101959095526001600160a01b039384169085015291166060830152608082015260a0810185905260c001604051602081830303815290604052805190602001209050600060655482604051602001610d6992919061190160f01b81526002810192909252602282015260420190565b6040516020818303038152906040528051906020012090506000610d8e8286866117ce565b9050876001600160a01b0316816001600160a01b031614610e175760405162461bcd60e51b815260206004820152603e60248201527f456967656e4c61797244656c65676174696f6e2e64656c6567617465546f427960448201527f5369676e61747572653a20736967206e6f742066726f6d207374616b6572000060648201526084016105f6565b610ace88886114e6565b60405163bfd79e9960e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063bfd79e9990602401602060405180830381865afa158015610e85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea99190611d87565b1515600114610f465760405162461bcd60e51b815260206004820152605c60248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a204f70657261746f7220646f6573206e6f74207065726d697360648201527f73696f6e20746f207265676973746572206173206f70657261746f7200000000608482015260a4016105f6565b336000908152606760205260409020546001600160a01b031615610fe25760405162461bcd60e51b815260206004820152604760248201527f456967656e4c61797244656c65676174696f6e2e726567697374657241734f7060448201527f657261746f723a206f70657261746f722068617320616c7265616479207265676064820152661a5cdd195c995960ca1b608482015260a4016105f6565b33600081815260676020526040902080546001600160a01b0319166001600160a01b038416179055610ba090806114e6565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461105c5760405162461bcd60e51b81526004016105f690611c6b565b6001600160a01b0380821660009081526067602052604090205416156110fe5760405162461bcd60e51b815260206004820152604b60248201527f456967656e4c61797244656c65676174696f6e2e756e64656c65676174653a2060448201527f6f70657261746f72732063616e6e6f7420756e64656c65676174652066726f6d60648201526a207468656d73656c76657360a81b608482015260a4016105f6565b6001600160a01b0316600090815260686020526040902080546001600160a01b0319169055565b61112d61148c565b6001600160a01b0381166111925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f6565b610ba08161143a565b606a60009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112129190611c4e565b6001600160a01b0316336001600160a01b0316146112855760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b60648201526084016105f6565b606b54198119606b541916146113035760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016105f6565b606b81905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c906020016106ab565b606a546001600160a01b031615801561135b57506001600160a01b03821615155b6113dd5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016105f6565b606b81905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250606a80546001600160a01b0319166001600160a01b0392909216919091179055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6033546001600160a01b03163314610aeb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f6565b606b546000906001908116141561153f5760405162461bcd60e51b815260206004820152601960248201527f5061757361626c653a20696e646578206973207061757365640000000000000060448201526064016105f6565b6001600160a01b0380831660009081526067602052604090205416806115e25760405162461bcd60e51b815260206004820152604c60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a206f60448201527f70657261746f7220686173206e6f74207965742072656769737465726564206160648201526b7320612064656c656761746560a01b608482015260a4016105f6565b6001600160a01b0380851660009081526068602052604090205416156116705760405162461bcd60e51b815260206004820152603d60248201527f456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a207360448201527f74616b657220686173206578697374696e672064656c65676174696f6e00000060648201526084016105f6565b6001600160a01b0384811660008181526068602052604080822080546001600160a01b031916888616179055516394f649dd60e01b815260048101929092529182917f0000000000000000000000000000000000000000000000000000000000000000909116906394f649dd90602401600060405180830381865afa1580156116fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526117259190810190611efe565b8151919350915060005b81811015610ace5782818151811061174957611749611cde565b602002602001015160666000896001600160a01b03166001600160a01b03168152602001908152602001600020600086848151811061178a5761178a611cde565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060008282546117c19190611cb0565b909155505060010161172f565b60008060006117de8686866117f4565b915091506117eb8161182d565b50949350505050565b6000806001600160ff1b0383168161181160ff86901c601b611cb0565b905061181f8782888561197b565b935093505050935093915050565b600081600481111561184157611841611fc3565b141561184a5750565b600181600481111561185e5761185e611fc3565b14156118ac5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105f6565b60028160048111156118c0576118c0611fc3565b141561190e5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105f6565b600381600481111561192257611922611fc3565b1415610ba05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105f6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156119b25750600090506003611a36565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611a06573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611a2f57600060019250925050611a36565b9150600090505b94509492505050565b600060208284031215611a5157600080fd5b5035919050565b6001600160a01b0381168114610ba057600080fd5b600060208284031215611a7f57600080fd5b8135611a8a81611a58565b9392505050565b600080600060608486031215611aa657600080fd5b8335611ab181611a58565b92506020840135611ac181611a58565b929592945050506040919091013590565b60008060408385031215611ae557600080fd5b8235611af081611a58565b91506020830135611b0081611a58565b809150509250929050565b60008083601f840112611b1d57600080fd5b50813567ffffffffffffffff811115611b3557600080fd5b6020830191508360208260051b8501011115611b5057600080fd5b9250929050565b600080600080600060608688031215611b6f57600080fd5b8535611b7a81611a58565b9450602086013567ffffffffffffffff80821115611b9757600080fd5b611ba389838a01611b0b565b90965094506040880135915080821115611bbc57600080fd5b50611bc988828901611b0b565b969995985093965092949392505050565b600060208284031215611bec57600080fd5b813560ff81168114611a8a57600080fd5b600080600080600060a08688031215611c1557600080fd5b8535611c2081611a58565b94506020860135611c3081611a58565b94979496505050506040830135926060810135926080909101359150565b600060208284031215611c6057600080fd5b8151611a8a81611a58565b60208082526015908201527437b7363ca4b73b32b9ba36b2b73a26b0b730b3b2b960591b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611cc357611cc3611c9a565b500190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b84815260006020608081840152855180608085015260005b81811015611d285787810183015185820160a001528201611d0c565b81811115611d3a57600060a083870101525b5060408401869052601f01601f1916830160a0019150611d67905060608301846001600160a01b03169052565b95945050505050565b600082821015611d8257611d82611c9a565b500390565b600060208284031215611d9957600080fd5b81518015158114611a8a57600080fd5b60208082526054908201527f496e766573746d656e744d616e616765722e6465706f736974496e746f53747260408201527f61746567793a2064656c656761746f7220686173206e6f74207065726d697373606082015273696f6e20657865632064656c656761746520746f60601b608082015260a00190565b6000600019821415611e3757611e37611c9a565b5060010190565b604051601f8201601f1916810167ffffffffffffffff81118282101715611e6757611e67611cc8565b604052919050565b600067ffffffffffffffff821115611e8957611e89611cc8565b5060051b60200190565b600082601f830112611ea457600080fd5b81516020611eb9611eb483611e6f565b611e3e565b82815260059290921b84018101918181019086841115611ed857600080fd5b8286015b84811015611ef35780518352918301918301611edc565b509695505050505050565b60008060408385031215611f1157600080fd5b825167ffffffffffffffff80821115611f2957600080fd5b818501915085601f830112611f3d57600080fd5b81516020611f4d611eb483611e6f565b82815260059290921b84018101918181019089841115611f6c57600080fd5b948201945b83861015611f93578551611f8481611a58565b82529482019490820190611f71565b91880151919650909350505080821115611fac57600080fd5b50611fb985828601611e93565b9150509250929050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220eeb84ed1dae6b21a510085a454236b1599468051cc44d55e1f63f9214f16ae7a64736f6c634300080c0033",
    "sourceMap": "1136:8667:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:392:59;;;;;;:::i;:::-;;:::i;:::-;;9426:126:35;;;;;;:::i;:::-;-1:-1:-1;;;;;9511:19:35;;;9487:4;9511:19;;;:11;:19;;;;;;;:33;;9426:126;;;;752:14:128;;745:22;727:41;;715:2;700:18;9426:126:35;;;;;;;;628:130:36;;678:80;628:130;;;;;925:25:128;;;913:2;898:18;628:130:36;779:177:128;5894:649:35;;;;;;:::i;:::-;;:::i;1039:31:36:-;;;;;;9202:123:35;;;;;;:::i;:::-;-1:-1:-1;;;;;9284:19:35;;;9260:4;9284:19;;;:11;:19;;;;;;;:33;;;9202:123;1954:339;;;;;;:::i;:::-;;:::i;1138:53:36:-;;;;;;;;-1:-1:-1;;;;;2058:32:128;;;2040:51;;2028:2;2013:18;1138:53:36;1867:230:128;6792:629:35;;;;;;:::i;:::-;;:::i;4796:149:59:-;;;;;;:::i;:::-;4914:7;;4885:1;:10;;;;;;;;4914:14;;;4913:24;;4796:149;4608:87;4681:7;;4608:87;;1508:46:36;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1508:46:36;;;9659:142:35;;;;;;:::i;:::-;-1:-1:-1;;;;;9741:39:35;;;9718:4;9741:39;;;:29;:39;;;;;;;:53;;;9659:142;2071:101:81;;;:::i;1281:81:36:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1647:41;;;;;;:::i;:::-;;;;;;;;;;;;;;906:37:59;;;;;-1:-1:-1;;;;;906:37:59;;;1411:64:36;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;1411:64:36;;;1441:85:81;1513:6;;-1:-1:-1;;;;;1513:6:81;1441:85;;3435:296:35;;;;;;:::i;:::-;;:::i;3924:964::-;;;;;;:::i;:::-;;:::i;2553:678::-;;;;;;:::i;:::-;;:::i;1372:54::-;;;;;5153:233;;;;;;:::i;:::-;;:::i;849:142:36:-;;903:88;849:142;;5523:146:35;;;;;;:::i;:::-;-1:-1:-1;;;;;5623:39:35;;;5598:7;5623:39;;;:29;:39;;;;;;;;5523:146;2321:198:81;;;;;;:::i;:::-;;:::i;4135:403:59:-;;;;;;:::i;:::-;;:::i;3259:392::-;1557:14;;;;;;;;;-1:-1:-1;;;;;1557:14:59;-1:-1:-1;;;;;1557:21:59;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1543:37:59;:10;-1:-1:-1;;;;;1543:37:59;;1535:90;;;;-1:-1:-1;;;1535:90:59;;6197:2:128;1535:90:59;;;6179:21:128;6236:2;6216:18;;;6209:30;6275:34;6255:18;;;6248:62;-1:-1:-1;;;6326:18:128;;;6319:38;6374:19;;1535:90:59;;;;;;;;;3491:7:::1;::::0;3461:25;;::::1;3460:38;3452:107;;;::::0;-1:-1:-1;;;3452:107:59;;6606:2:128;3452:107:59::1;::::0;::::1;6588:21:128::0;6645:2;6625:18;;;6618:30;6684:34;6664:18;;;6657:62;6755:26;6735:18;;;6728:54;6799:19;;3452:107:59::1;6404:420:128::0;3452:107:59::1;3569:7;:25:::0;;;3609:35:::1;::::0;925:25:128;;;3616:10:59::1;::::0;3609:35:::1;::::0;913:2:128;898:18;3609:35:59::1;;;;;;;;3259:392:::0;:::o;5894:649:35:-;1590:10;-1:-1:-1;;;;;1612:17:35;1590:40;;1582:74;;;;-1:-1:-1;;;1582:74:35;;;;;;;:::i;:::-;-1:-1:-1;;;;;9284:19:35;;;9260:4;9284:19;;;:11;:19;;;;;;;:33;6102:435:::1;;-1:-1:-1::0;;;;;6160:19:35;;::::1;6141:16;6160:19:::0;;;:11:::1;:19;::::0;;;;;;;;;::::1;6250:24:::0;;;:14:::1;:24:::0;;;;;:34;;::::1;::::0;;;;;;;;:44;;6288:6;;6141:16;6250:44:::1;::::0;6288:6;;6250:44:::1;:::i;:::-;::::0;;;-1:-1:-1;;6355:28:35::1;::::0;;6381:1:::1;6355:28:::0;;;;;::::1;::::0;;;6309:43:::1;::::0;6355:28:::1;::::0;;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;6431:13:35::1;::::0;;6442:1:::1;6431:13:::0;;;;;::::1;::::0;;;6309:74;;-1:-1:-1;6397:31:35::1;::::0;6431:13;-1:-1:-1;6431:13:35::1;::::0;;::::1;::::0;;::::1;::::0;::::1;;::::0;-1:-1:-1;6431:13:35::1;6397:47;;6478:8;6458:14;6473:1;6458:17;;;;;;;;:::i;:::-;;;;;;:28;-1:-1:-1::0;;;;;6458:28:35::1;;;-1:-1:-1::0;;;;;6458:28:35::1;;;::::0;::::1;6520:6;6500:14;6515:1;6500:17;;;;;;;;:::i;:::-;;;;;;:26;;;::::0;::::1;6127:410;;;6102:435;5894:649:::0;;;:::o;1954:339::-;3268:19:82;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:82;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:82;1476:19:84;:23;;;3376:66:82;;-1:-1:-1;3425:12:82;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:82;;7910:2:128;3314:201:82;;;7892:21:128;7949:2;7929:18;;;7922:30;7988:34;7968:18;;;7961:62;-1:-1:-1;;;8039:18:128;;;8032:44;8093:19;;3314:201:82;7708:410:128;3314:201:82;3525:12;:16;;-1:-1:-1;;3525:16:82;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:82;;;;;3551:65;2080:47:35::1;2098:15;1081:1:59;2080:17:35;:47::i;:::-;678:80:36;2194:18:35;;;;;;;;;;;;;-1:-1:-1::0;;;2194:18:35::1;;::::0;2214:13:::1;2237:4;2166:77;;;;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;2166:77:35;;::::1;::::0;;;;;;2156:88;;2166:77:::1;2156:88:::0;;::::1;::::0;2137:16:::1;:107:::0;2254:32:::1;2273:12:::0;2254:18:::1;:32::i;:::-;3640:14:82::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:82;;;3710:14;;-1:-1:-1;9105:36:128;;3710:14:82;;9093:2:128;9078:18;3710:14:82;;;;;;;3258:483;1954:339:35;;:::o;6792:629::-;1590:10;-1:-1:-1;;;;;1612:17:35;1590:40;;1582:74;;;;-1:-1:-1;;;1582:74:35;;;;;;;:::i;:::-;-1:-1:-1;;;;;9284:19:35;;;9260:4;9284:19;;;:11;:19;;;;;;;:33;7002:413:::1;;-1:-1:-1::0;;;;;7060:19:35;;::::1;7041:16;7060:19:::0;;;:11:::1;:19;::::0;;;;;;;::::1;::::0;7179:10;;7210:195:::1;7234:12;7230:1;:16;7210:195;;;7310:6;;7317:1;7310:9;;;;;;;:::i;:::-;;;;;;;7267:14;:24;7282:8;-1:-1:-1::0;;;;;7267:24:35::1;-1:-1:-1::0;;;;;7267:24:35::1;;;;;;;;;;;;:39;7292:10;;7303:1;7292:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7267:39:35::1;-1:-1:-1::0;;;;;7267:39:35::1;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7369:3:35::1;;7210:195;;;;7027:388;;7002:413;6792:629:::0;;;;;:::o;2071:101:81:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;3435:296:35:-;3513:52;;-1:-1:-1;;;3513:52:35;;3554:10;3513:52;;;2040:51:128;3513:17:35;-1:-1:-1;;;;;3513:40:35;;;;2013:18:128;;3513:52:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;3569:4;3513:60;3492:191;;;;-1:-1:-1;;;3492:191:35;;;;;;;:::i;:::-;3693:31;3703:10;3715:8;3693:9;:31::i;:::-;3435:296;:::o;3924:964::-;4080:52;;-1:-1:-1;;;4080:52:35;;4121:10;4080:52;;;2040:51:128;4080:17:35;-1:-1:-1;;;;;4080:40:35;;;;2013:18:128;;4080:52:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;4136:4;4080:60;4059:191;;;;-1:-1:-1;;;4059:191:35;;;;;;;:::i;:::-;4268:11;;;:40;;;4293:15;4283:6;:25;;4268:40;4260:81;;;;-1:-1:-1;;;4260:81:35;;10539:2:128;4260:81:35;;;10521:21:128;10578:2;10558:18;;;10551:30;10617;10597:18;;;10590:58;10665:18;;4260:81:35;10337:352:128;4260:81:35;-1:-1:-1;;;;;4498:14:35;;4417:18;4498:14;;;:6;:14;;;;;:16;;903:88:36;;4480:6:35;;4488:8;;4417:18;4498:16;;;:::i;:::-;;;;-1:-1:-1;4448:75:35;;;;;;11093:25:128;;;;-1:-1:-1;;;;;11192:15:128;;;11172:18;;;11165:43;11244:15;;11224:18;;;11217:43;11276:18;;;11269:34;11319:19;;;11312:35;;;11065:19;;4448:75:35;;;;;;;;;;;;4438:86;;;;;;4417:107;;4534:18;4594:16;;4612:10;4565:58;;;;;;;;-1:-1:-1;;;11616:27:128;;11668:1;11659:11;;11652:27;;;;11704:2;11695:12;;11688:28;11741:2;11732:12;;11358:392;4565:58:35;;;;;;;;;;;;;4555:69;;;;;;4534:90;;4673:24;4700:32;4714:10;4726:1;4729:2;4700:13;:32::i;:::-;4673:59;;4771:6;-1:-1:-1;;;;;4751:26:35;:16;-1:-1:-1;;;;;4751:26:35;;4743:101;;;;-1:-1:-1;;;4743:101:35;;11957:2:128;4743:101:35;;;11939:21:128;11996:2;11976:18;;;11969:30;12035:34;12015:18;;;12008:62;12106:32;12086:18;;;12079:60;12156:19;;4743:101:35;11755:426:128;4743:101:35;4854:27;4864:6;4872:8;4854:9;:27::i;2553:678::-;2651:59;;-1:-1:-1;;;2651:59:35;;2699:10;2651:59;;;2040:51:128;2651:17:35;-1:-1:-1;;;;;2651:47:35;;;;2013:18:128;;2651:59:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;;2714:4;2651:67;2630:206;;;;-1:-1:-1;;;2630:206:35;;12388:2:128;2630:206:35;;;12370:21:128;12427:2;12407:18;;;12400:30;12466:34;12446:18;;;12439:62;12537:34;12517:18;;;12510:62;12609:30;12588:19;;;12581:59;12657:19;;2630:206:35;12186:496:128;2630:206:35;2897:10;2920:1;2867:41;;;:29;:41;;;;;;-1:-1:-1;;;;;2867:41:35;:55;2846:173;;;;-1:-1:-1;;;2846:173:35;;12889:2:128;2846:173:35;;;12871:21:128;12928:2;12908:18;;;12901:30;12967:34;12947:18;;;12940:62;13038:34;13018:18;;;13011:62;-1:-1:-1;;;13089:19:128;;;13082:38;13137:19;;2846:173:35;12687:475:128;2846:173:35;3147:10;3117:41;;;;:29;:41;;;;;:64;;-1:-1:-1;;;;;;3117:64:35;-1:-1:-1;;;;;3117:64:35;;;;;3191:33;;3147:10;3191:9;:33::i;5153:233::-;1590:10;-1:-1:-1;;;;;1612:17:35;1590:40;;1582:74;;;;-1:-1:-1;;;1582:74:35;;;;;;;:::i;:::-;-1:-1:-1;;;;;9741:39:35;;;9718:4;9741:39;;;:29;:39;;;;;;;:53;5230:107:::1;;;::::0;-1:-1:-1;;;5230:107:35;;13369:2:128;5230:107:35::1;::::0;::::1;13351:21:128::0;13408:2;13388:18;;;13381:30;13447:34;13427:18;;;13420:62;13518:34;13498:18;;;13491:62;-1:-1:-1;;;13569:19:128;;;13562:42;13621:19;;5230:107:35::1;13167:479:128::0;5230:107:35::1;-1:-1:-1::0;;;;;5347:19:35::1;5377:1;5347:19:::0;;;:11:::1;:19;::::0;;;;:32;;-1:-1:-1;;;;;;5347:32:35::1;::::0;;5153:233::o;2321:198:81:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:81;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:81;;13853:2:128;2401:73:81::1;::::0;::::1;13835:21:128::0;13892:2;13872:18;;;13865:30;13931:34;13911:18;;;13904:62;-1:-1:-1;;;13982:18:128;;;13975:36;14028:19;;2401:73:81::1;13651:402:128::0;2401:73:81::1;2484:28;2503:8;2484:18;:28::i;4135:403:59:-:0;1705:14;;;;;;;;;-1:-1:-1;;;;;1705:14:59;-1:-1:-1;;;;;1705:23:59;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1691:39:59;:10;-1:-1:-1;;;;;1691:39:59;;1683:94;;;;-1:-1:-1;;;1683:94:59;;14260:2:128;1683:94:59;;;14242:21:128;14299:2;14279:18;;;14272:30;14338:34;14318:18;;;14311:62;-1:-1:-1;;;14389:18:128;;;14382:40;14439:19;;1683:94:59;14058:406:128;1683:94:59;4375:7:::1;;4374:8;4352:15;4351:16;4339:7;;4338:8;4337:31;4336:47;4328:116;;;::::0;-1:-1:-1;;;4328:116:59;;14671:2:128;4328:116:59::1;::::0;::::1;14653:21:128::0;14710:2;14690:18;;;14683:30;14749:34;14729:18;;;14722:62;14820:26;14800:18;;;14793:54;14864:19;;4328:116:59::1;14469:420:128::0;4328:116:59::1;4454:7;:25:::0;;;4494:37:::1;::::0;925:25:128;;;4503:10:59::1;::::0;4494:37:::1;::::0;913:2:128;898:18;4494:37:59::1;779:177:128::0;2363:438:59;2497:14;;-1:-1:-1;;;;;2497:14:59;2489:37;:79;;;;-1:-1:-1;;;;;;2530:38:59;;;;2489:79;2468:197;;;;-1:-1:-1;;;2468:197:59;;15096:2:128;2468:197:59;;;15078:21:128;15135:2;15115:18;;;15108:30;15174:34;15154:18;;;15147:62;15245:34;15225:18;;;15218:62;-1:-1:-1;;;15296:19:128;;;15289:38;15344:19;;2468:197:59;14894:475:128;2468:197:59;2675:7;:26;;;2716:36;;925:25:128;;;2723:10:59;;2716:36;;913:2:128;898:18;2716:36:59;;;;;;;-1:-1:-1;2762:14:59;:32;;-1:-1:-1;;;;;;2762:32:59;-1:-1:-1;;;;;2762:32:59;;;;;;;;;;2363:438::o;2673:187:81:-;2765:6;;;-1:-1:-1;;;;;2781:17:81;;;-1:-1:-1;;;;;;2781:17:81;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1599:130::-;1513:6;;-1:-1:-1;;;;;1513:6:81;929:10:85;1662:23:81;1654:68;;;;-1:-1:-1;;;1654:68:81;;15576:2:128;1654:68:81;;;15558:21:128;;;15595:18;;;15588:30;15654:34;15634:18;;;15627:62;15706:18;;1654:68:81;15374:356:128;7972:1111:35;4914:7:59;;1294:1:35;;4885::59;4914:14;;;4913:24;2187:14;2179:52;;;;-1:-1:-1;;;2179:52:59;;15937:2:128;2179:52:59;;;15919:21:128;15976:2;15956:18;;;15949:30;16015:27;15995:18;;;15988:55;16060:18;;2179:52:59;15735:349:128;2179:52:59;-1:-1:-1;;;;;8109:39:35;;::::1;8085:21;8109:39:::0;;;:29:::1;:39;::::0;;;;;::::1;8179:27:::0;8158:138:::1;;;::::0;-1:-1:-1;;;8158:138:35;;16291:2:128;8158:138:35::1;::::0;::::1;16273:21:128::0;16330:2;16310:18;;;16303:30;16369:34;16349:18;;;16342:62;16440:34;16420:18;;;16413:62;-1:-1:-1;;;16491:19:128;;;16484:43;16544:19;;8158:138:35::1;16089:480:128::0;8158:138:35::1;-1:-1:-1::0;;;;;9511:19:35;;;9487:4;9511:19;;;:11;:19;;;;;;;:33;8307:96:::1;;;::::0;-1:-1:-1;;;8307:96:35;;16776:2:128;8307:96:35::1;::::0;::::1;16758:21:128::0;16815:2;16795:18;;;16788:30;16854:34;16834:18;;;16827:62;16925:31;16905:18;;;16898:59;16974:19;;8307:96:35::1;16574:425:128::0;8307:96:35::1;-1:-1:-1::0;;;;;8484:19:35;;::::1;;::::0;;;:11:::1;:19;::::0;;;;;:30;;-1:-1:-1;;;;;;8484:30:35::1;::::0;;::::1;;::::0;;8674:37;-1:-1:-1;;;8674:37:35;;::::1;::::0;::::1;2040:51:128::0;;;;8484:19:35;;;8674:17:::1;:29:::0;;::::1;::::0;::::1;::::0;2013:18:128;;8674:37:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8674:37:35::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8797:17:::0;;8605:106;;-1:-1:-1;8605:106:35;-1:-1:-1;8774:20:35::1;8824:253;8848:12;8844:1;:16;8824:253;;;8998:6;9005:1;8998:9;;;;;;;;:::i;:::-;;;;;;;8955:14;:24;8970:8;-1:-1:-1::0;;;;;8955:24:35::1;-1:-1:-1::0;;;;;8955:24:35::1;;;;;;;;;;;;:39;8980:10;8991:1;8980:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;8955:39:35::1;-1:-1:-1::0;;;;;8955:39:35::1;;;;;;;;;;;;;:52;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9049:3:35::1;;8824:253;;4643:252:107::0;4750:7;4770:17;4789:18;4811:23;4822:4;4828:1;4831:2;4811:10;:23::i;:::-;4769:65;;;;4844:18;4856:5;4844:11;:18::i;:::-;-1:-1:-1;4879:9:107;4643:252;-1:-1:-1;;;;4643:252:107:o;4142:336::-;4252:7;;-1:-1:-1;;;;;4297:80:107;;4252:7;4403:25;4419:3;4404:18;;;4426:2;4403:25;:::i;:::-;4387:42;;4446:25;4457:4;4463:1;4466;4469;4446:10;:25::i;:::-;4439:32;;;;;;4142:336;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;;788:34;;-1:-1:-1;;;788:34:107;;19775:2:128;788:34:107;;;19757:21:128;19814:2;19794:18;;;19787:30;19853:26;19833:18;;;19826:54;19897:18;;788:34:107;19573:348:128;730:345:107;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;;903:41;;-1:-1:-1;;;903:41:107;;20128:2:128;903:41:107;;;20110:21:128;20167:2;20147:18;;;20140:30;20206:33;20186:18;;;20179:61;20257:18;;903:41:107;19926:355:128;839:236:107;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;;1020:44;;-1:-1:-1;;;1020:44:107;;20488:2:128;1020:44:107;;;20470:21:128;20527:2;20507:18;;;20500:30;20566:34;20546:18;;;20539:62;-1:-1:-1;;;20617:18:128;;;20610:32;20659:19;;1020:44:107;20286:398:128;5069:1494:107;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:107;;-1:-1:-1;6221:30:107;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;20916:25:128;;;20989:4;20977:17;;20957:18;;;20950:45;;;;21011:18;;;21004:34;;;21054:18;;;21047:34;;;6374:24:107;;20888:19:128;;6374:24:107;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:107;;-1:-1:-1;;6374:24:107;;;-1:-1:-1;;;;;;;6412:20:107;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:107;;-1:-1:-1;5069:1494:107;;;;;;;;:::o;14:180:128:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:128;;14:180;-1:-1:-1;14:180:128:o;199:131::-;-1:-1:-1;;;;;274:31:128;;264:42;;254:70;;320:1;317;310:12;335:247;394:6;447:2;435:9;426:7;422:23;418:32;415:52;;;463:1;460;453:12;415:52;502:9;489:23;521:31;546:5;521:31;:::i;:::-;571:5;335:247;-1:-1:-1;;;335:247:128:o;961:484::-;1066:6;1074;1082;1135:2;1123:9;1114:7;1110:23;1106:32;1103:52;;;1151:1;1148;1141:12;1103:52;1190:9;1177:23;1209:31;1234:5;1209:31;:::i;:::-;1259:5;-1:-1:-1;1316:2:128;1301:18;;1288:32;1329:33;1288:32;1329:33;:::i;:::-;961:484;;1381:7;;-1:-1:-1;;;1435:2:128;1420:18;;;;1407:32;;961:484::o;1450:412::-;1542:6;1550;1603:2;1591:9;1582:7;1578:23;1574:32;1571:52;;;1619:1;1616;1609:12;1571:52;1658:9;1645:23;1677:31;1702:5;1677:31;:::i;:::-;1727:5;-1:-1:-1;1784:2:128;1769:18;;1756:32;1797:33;1756:32;1797:33;:::i;:::-;1849:7;1839:17;;;1450:412;;;;;:::o;2102:388::-;2186:8;2196:6;2250:3;2243:4;2235:6;2231:17;2227:27;2217:55;;2268:1;2265;2258:12;2217:55;-1:-1:-1;2291:20:128;;2334:18;2323:30;;2320:50;;;2366:1;2363;2356:12;2320:50;2403:4;2395:6;2391:17;2379:29;;2463:3;2456:4;2446:6;2443:1;2439:14;2431:6;2427:27;2423:38;2420:47;2417:67;;;2480:1;2477;2470:12;2417:67;2102:388;;;;;:::o;2495:978::-;2654:6;2662;2670;2678;2686;2739:2;2727:9;2718:7;2714:23;2710:32;2707:52;;;2755:1;2752;2745:12;2707:52;2794:9;2781:23;2813:31;2838:5;2813:31;:::i;:::-;2863:5;-1:-1:-1;2919:2:128;2904:18;;2891:32;2942:18;2972:14;;;2969:34;;;2999:1;2996;2989:12;2969:34;3038:91;3121:7;3112:6;3101:9;3097:22;3038:91;:::i;:::-;3148:8;;-1:-1:-1;3012:117:128;-1:-1:-1;3236:2:128;3221:18;;3208:32;;-1:-1:-1;3252:16:128;;;3249:36;;;3281:1;3278;3271:12;3249:36;;3320:93;3405:7;3394:8;3383:9;3379:24;3320:93;:::i;:::-;2495:978;;;;-1:-1:-1;2495:978:128;;-1:-1:-1;3432:8:128;;3294:119;2495:978;-1:-1:-1;;;2495:978:128:o;3478:269::-;3535:6;3588:2;3576:9;3567:7;3563:23;3559:32;3556:52;;;3604:1;3601;3594:12;3556:52;3643:9;3630:23;3693:4;3686:5;3682:16;3675:5;3672:27;3662:55;;3713:1;3710;3703:12;4904:594;4999:6;5007;5015;5023;5031;5084:3;5072:9;5063:7;5059:23;5055:33;5052:53;;;5101:1;5098;5091:12;5052:53;5140:9;5127:23;5159:31;5184:5;5159:31;:::i;:::-;5209:5;-1:-1:-1;5266:2:128;5251:18;;5238:32;5279:33;5238:32;5279:33;:::i;:::-;4904:594;;5331:7;;-1:-1:-1;;;;5385:2:128;5370:18;;5357:32;;5436:2;5421:18;;5408:32;;5487:3;5472:19;;;5459:33;;-1:-1:-1;4904:594:128:o;5739:251::-;5809:6;5862:2;5850:9;5841:7;5837:23;5833:32;5830:52;;;5878:1;5875;5868:12;5830:52;5910:9;5904:16;5929:31;5954:5;5929:31;:::i;6829:345::-;7031:2;7013:21;;;7070:2;7050:18;;;7043:30;-1:-1:-1;;;7104:2:128;7089:18;;7082:51;7165:2;7150:18;;6829:345::o;7179:127::-;7240:10;7235:3;7231:20;7228:1;7221:31;7271:4;7268:1;7261:15;7295:4;7292:1;7285:15;7311:128;7351:3;7382:1;7378:6;7375:1;7372:13;7369:39;;;7388:18;;:::i;:::-;-1:-1:-1;7424:9:128;;7311:128::o;7444:127::-;7505:10;7500:3;7496:20;7493:1;7486:31;7536:4;7533:1;7526:15;7560:4;7557:1;7550:15;7576:127;7637:10;7632:3;7628:20;7625:1;7618:31;7668:4;7665:1;7658:15;7692:4;7689:1;7682:15;8123:825;8354:6;8343:9;8336:25;8317:4;8380:2;8418:3;8413:2;8402:9;8398:18;8391:31;8451:6;8445:13;8495:6;8489:3;8478:9;8474:19;8467:35;8520:1;8530:141;8544:6;8541:1;8538:13;8530:141;;;8640:14;;;8636:23;;8630:30;8605:17;;;8624:3;8601:27;8594:67;8559:10;;8530:141;;;8689:6;8686:1;8683:13;8680:92;;;8760:1;8754:3;8745:6;8734:9;8730:22;8726:32;8719:43;8680:92;-1:-1:-1;8875:2:128;8860:18;;8853:34;;;8833:2;8812:15;-1:-1:-1;;8808:29:128;8793:45;;8840:3;8789:55;;-1:-1:-1;8896:46:128;;-1:-1:-1;8938:2:128;8923:18;;8915:6;-1:-1:-1;;;;;4000:31:128;3988:44;;3934:104;8896:46;8123:825;;;;;;;:::o;9432:125::-;9472:4;9500:1;9497;9494:8;9491:34;;;9505:18;;:::i;:::-;-1:-1:-1;9542:9:128;;9432:125::o;9562:277::-;9629:6;9682:2;9670:9;9661:7;9657:23;9653:32;9650:52;;;9698:1;9695;9688:12;9650:52;9730:9;9724:16;9783:5;9776:13;9769:21;9762:5;9759:32;9749:60;;9805:1;9802;9795:12;9844:488;10046:2;10028:21;;;10085:2;10065:18;;;10058:30;10124:34;10119:2;10104:18;;10097:62;10195:34;10190:2;10175:18;;10168:62;-1:-1:-1;;;10261:3:128;10246:19;;10239:51;10322:3;10307:19;;9844:488::o;10694:135::-;10733:3;-1:-1:-1;;10754:17:128;;10751:43;;;10774:18;;:::i;:::-;-1:-1:-1;10821:1:128;10810:13;;10694:135::o;17004:275::-;17075:2;17069:9;17140:2;17121:13;;-1:-1:-1;;17117:27:128;17105:40;;17175:18;17160:34;;17196:22;;;17157:62;17154:88;;;17222:18;;:::i;:::-;17258:2;17251:22;17004:275;;-1:-1:-1;17004:275:128:o;17284:204::-;17365:4;17398:18;17390:6;17387:30;17384:56;;;17420:18;;:::i;:::-;-1:-1:-1;17465:1:128;17461:14;17477:4;17457:25;;17284:204::o;17493:680::-;17558:5;17611:3;17604:4;17596:6;17592:17;17588:27;17578:55;;17629:1;17626;17619:12;17578:55;17658:6;17652:13;17684:4;17708:81;17724:64;17785:2;17724:64;:::i;:::-;17708:81;:::i;:::-;17823:15;;;17909:1;17905:10;;;;17893:23;;17889:32;;;17854:12;;;;17933:15;;;17930:35;;;17961:1;17958;17951:12;17930:35;17997:2;17989:6;17985:15;18009:135;18025:6;18020:3;18017:15;18009:135;;;18091:10;;18079:23;;18122:12;;;;18042;;18009:135;;;-1:-1:-1;18162:5:128;17493:680;-1:-1:-1;;;;;;17493:680:128:o;18178:1258::-;18335:6;18343;18396:2;18384:9;18375:7;18371:23;18367:32;18364:52;;;18412:1;18409;18402:12;18364:52;18445:9;18439:16;18474:18;18515:2;18507:6;18504:14;18501:34;;;18531:1;18528;18521:12;18501:34;18569:6;18558:9;18554:22;18544:32;;18614:7;18607:4;18603:2;18599:13;18595:27;18585:55;;18636:1;18633;18626:12;18585:55;18665:2;18659:9;18687:4;18711:81;18727:64;18788:2;18727:64;:::i;18711:81::-;18826:15;;;18908:1;18904:10;;;;18896:19;;18892:28;;;18857:12;;;;18932:19;;;18929:39;;;18964:1;18961;18954:12;18929:39;18988:11;;;;19008:210;19024:6;19019:3;19016:15;19008:210;;;19097:3;19091:10;19114:31;19139:5;19114:31;:::i;:::-;19158:18;;19041:12;;;;19196;;;;19008:210;;;19273:18;;;19267:25;19237:5;;-1:-1:-1;19267:25:128;;-1:-1:-1;;;19304:16:128;;;19301:36;;;19333:1;19330;19323:12;19301:36;;19356:74;19422:7;19411:8;19400:9;19396:24;19356:74;:::i;:::-;19346:84;;;18178:1258;;;;;:::o;19441:127::-;19502:10;19497:3;19493:20;19490:1;19483:31;19533:4;19530:1;19523:15;19557:4;19554:1;19547:15",
    "linkReferences": {},
    "immutableReferences": {
      "5615": [
        {
          "start": 1124,
          "length": 32
        },
        {
          "start": 2818,
          "length": 32
        },
        {
          "start": 3000,
          "length": 32
        },
        {
          "start": 3638,
          "length": 32
        }
      ],
      "6180": [
        {
          "start": 695,
          "length": 32
        },
        {
          "start": 1729,
          "length": 32
        },
        {
          "start": 2469,
          "length": 32
        },
        {
          "start": 4127,
          "length": 32
        },
        {
          "start": 5812,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DELEGATION_TYPEHASH()": "e7a324dc",
    "DOMAIN_SEPARATOR()": "3644e515",
    "DOMAIN_TYPEHASH()": "20606b70",
    "decreaseDelegatedShares(address,address[],uint256[])": "5820491c",
    "delegateTo(address)": "ac637c7a",
    "delegateToBySignature(address,address,uint256,bytes32,bytes32)": "b41b394b",
    "delegatedTo(address)": "65da1264",
    "getOperatorRewardAddress(address)": "ee4ea66a",
    "increaseDelegatedShares(address,address,uint256)": "28a573ae",
    "initialize(address,address)": "485cc955",
    "investmentManager()": "4b31bb10",
    "isDelegated(address)": "3e28391d",
    "isNotDelegated(address)": "1d3696b7",
    "isOperator(address)": "6d70f7ae",
    "nonces(address)": "7ecebe00",
    "operatorReceiverRewardAddress(address)": "8b8209df",
    "operatorShares(address,address)": "778e55f3",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "permissionManager()": "cc7a2049",
    "registerAsOperator(address)": "bd44e403",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "undelegate(address)": "da8be864",
    "unpause(uint256)": "fabc1cbc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"_investmentManager\",\"type\":\"address\"},{\"internalType\":\"contract IRegistryPermission\",\"name\":\"_permissionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IInvestmentStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"}],\"name\":\"decreaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"vs\",\"type\":\"bytes32\"}],\"name\":\"delegateToBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegatedTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"getOperatorRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"increaseDelegatedShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentManager\",\"outputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"isNotDelegated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorReceiverRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IInvestmentStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionManager\",\"outputs\":[{\"internalType\":\"contract IRegistryPermission\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardReceiveAddress\",\"type\":\"address\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"undelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"decreaseDelegatedShares(address,address[],uint256[])\":{\"details\":\"Callable only by the InvestmentManager\"},\"delegateTo(address)\":{\"params\":{\"operator\":\"is the operator to whom staker (msg.sender) is delegating its assets\"}},\"delegateToBySignature(address,address,uint256,bytes32,bytes32)\":{\"details\":\"requires that r, vs are a valid ECSDA signature from `staker` indicating their intention for this action\"},\"increaseDelegatedShares(address,address,uint256)\":{\"details\":\"Callable only by the InvestmentManager\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"registerAsOperator(address)\":{\"params\":{\"rewardReceiveAddress\":\"another EOA address for receive from mantle network\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"undelegate(address)\":{\"details\":\"Should only ever be called in the event that the `staker` has no active deposits in EigenLayer.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}}},\"title\":\"The primary delegation contract for EigenLayr.\",\"version\":1},\"userdoc\":{\"events\":{\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"DELEGATION_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the delegation struct used by the contract\"},\"DOMAIN_SEPARATOR()\":{\"notice\":\"EIP-712 Domain separator\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"decreaseDelegatedShares(address,address[],uint256[])\":{\"notice\":\"Decreases the `staker`'s delegated shares in each entry of `strategies` by its respective `shares[i]`, typically called when the staker withdraws from EigenLayr\"},\"delegateTo(address)\":{\"notice\":\"This will be called by a staker to delegate its assets to some operator.\"},\"delegateToBySignature(address,address,uint256,bytes32,bytes32)\":{\"notice\":\"Delegates from `staker` to `operator`.\"},\"delegatedTo(address)\":{\"notice\":\"returns the address of the operator that `staker` is delegated to.\"},\"getOperatorRewardAddress(address)\":{\"notice\":\"returns the eoa address of the `operator`, which may mediate their interactions with stakers who delegate to them.\"},\"increaseDelegatedShares(address,address,uint256)\":{\"notice\":\"Increases the `staker`'s delegated shares in `strategy` by `shares, typically called when the staker has further deposits into EigenLayr\"},\"investmentManager()\":{\"notice\":\"The InvestmentManager contract for EigenLayr\"},\"isDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise.\"},\"isNotDelegated(address)\":{\"notice\":\"Returns 'true' if `staker` is *not* actively delegated, and 'false' otherwise.\"},\"isOperator(address)\":{\"notice\":\"Returns if an operator can be delegated to, i.e. it has called `registerAsOperator`.\"},\"operatorShares(address,address)\":{\"notice\":\"returns the total number of shares in `strategy` that are delegated to `operator`.\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"permissionManager()\":{\"notice\":\"contract used for manage operator register permission\"},\"registerAsOperator(address)\":{\"notice\":\"This will be called by an operator to register itself as an operator that stakers can choose to delegate to.\"},\"undelegate(address)\":{\"notice\":\"Undelegates `staker` from the operator who they are delegated to.Callable only by the InvestmentManager\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract.\"}},\"notice\":\"This is the contract for delegation in EigenLayr. The main functionalities of this contract are - enabling anyone to register as an operator in EigenLayr - allowing new operators to provide a another eoa address, which may mediate their interactions with stakers who delegate to them - enabling any staker to delegate its stake to the operator of its choice - enabling a staker to undelegate its assets from an operator (performed as part of the withdrawal process, initiated through the InvestmentManager)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/core/EigenLayrDelegation.sol\":\"EigenLayrDelegation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer/=../eignlayr-contracts/src/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/eignlayr-contracts/lib/ds-test/src/\",\":eignlayr-contracts/=lib/eignlayr-contracts/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/eignlayr-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/eignlayr-contracts/lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/core/EigenLayrDelegation.sol\":{\"keccak256\":\"0x978897da9872d064fca4e0d9a3dfb9ae45307398d579ddb529ddf422f9714657\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://269496038010d6b42f949206d388d177b79a5f1f711e460869d095ff074e60b6\",\"dweb:/ipfs/QmPytBkymcwqywFTJ3HsCHjJGdEAVfjihd3mXrzSZbhgX6\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/core/EigenLayrDelegationStorage.sol\":{\"keccak256\":\"0xa465771a204d2226bedec6ba83ea7cafcb5851caf7b1fdf274070d411838a637\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://db4829529f094a305a5064a28aebc6936bfd997e82230aea990b4e7a2830642f\",\"dweb:/ipfs/QmW8hc8uNEUTWLZteUn88n2LGe6r6pQHELzBBB3M2hLoia\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IEigenLayrDelegation.sol\":{\"keccak256\":\"0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21\",\"dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IInvestmentManager.sol\":{\"keccak256\":\"0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34\",\"dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IInvestmentStrategy.sol\":{\"keccak256\":\"0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52\",\"dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c\",\"dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IRegistryPermission.sol\":{\"keccak256\":\"0x5a19ffe942fa540af5b4989590e7378ebbdfec7234a8e64b70d15dd57b4beed3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dbfd03c6d589513cdfcf11814461d28fc5af5c705b48ac7507073cd8f8eacc2b\",\"dweb:/ipfs/QmddUJh6nU7twBfYheBXX5rVHHHkgNJrrcEPW5QCKGZcyQ\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IServiceManager.sol\":{\"keccak256\":\"0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2\",\"dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32\",\"dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "_investmentManager",
              "type": "address"
            },
            {
              "internalType": "contract IRegistryPermission",
              "name": "_permissionManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DELEGATION_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IInvestmentStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "vs",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "delegateToBySignature"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "delegatedTo",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOperatorRewardAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseDelegatedShares"
        },
        {
          "inputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "investmentManager",
          "outputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isNotDelegated",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperator",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorReceiverRewardAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IInvestmentStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "operatorShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "permissionManager",
          "outputs": [
            {
              "internalType": "contract IRegistryPermission",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "rewardReceiveAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerAsOperator"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "decreaseDelegatedShares(address,address[],uint256[])": {
            "details": "Callable only by the InvestmentManager"
          },
          "delegateTo(address)": {
            "params": {
              "operator": "is the operator to whom staker (msg.sender) is delegating its assets"
            }
          },
          "delegateToBySignature(address,address,uint256,bytes32,bytes32)": {
            "details": "requires that r, vs are a valid ECSDA signature from `staker` indicating their intention for this action"
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "details": "Callable only by the InvestmentManager"
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "registerAsOperator(address)": {
            "params": {
              "rewardReceiveAddress": "another EOA address for receive from mantle network"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "undelegate(address)": {
            "details": "Should only ever be called in the event that the `staker` has no active deposits in EigenLayer."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DELEGATION_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the delegation struct used by the contract"
          },
          "DOMAIN_SEPARATOR()": {
            "notice": "EIP-712 Domain separator"
          },
          "DOMAIN_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the contract's domain"
          },
          "decreaseDelegatedShares(address,address[],uint256[])": {
            "notice": "Decreases the `staker`'s delegated shares in each entry of `strategies` by its respective `shares[i]`, typically called when the staker withdraws from EigenLayr"
          },
          "delegateTo(address)": {
            "notice": "This will be called by a staker to delegate its assets to some operator."
          },
          "delegateToBySignature(address,address,uint256,bytes32,bytes32)": {
            "notice": "Delegates from `staker` to `operator`."
          },
          "delegatedTo(address)": {
            "notice": "returns the address of the operator that `staker` is delegated to."
          },
          "getOperatorRewardAddress(address)": {
            "notice": "returns the eoa address of the `operator`, which may mediate their interactions with stakers who delegate to them."
          },
          "increaseDelegatedShares(address,address,uint256)": {
            "notice": "Increases the `staker`'s delegated shares in `strategy` by `shares, typically called when the staker has further deposits into EigenLayr"
          },
          "investmentManager()": {
            "notice": "The InvestmentManager contract for EigenLayr"
          },
          "isDelegated(address)": {
            "notice": "Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
          },
          "isNotDelegated(address)": {
            "notice": "Returns 'true' if `staker` is *not* actively delegated, and 'false' otherwise."
          },
          "isOperator(address)": {
            "notice": "Returns if an operator can be delegated to, i.e. it has called `registerAsOperator`."
          },
          "operatorShares(address,address)": {
            "notice": "returns the total number of shares in `strategy` that are delegated to `operator`."
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "permissionManager()": {
            "notice": "contract used for manage operator register permission"
          },
          "registerAsOperator(address)": {
            "notice": "This will be called by an operator to register itself as an operator that stakers can choose to delegate to."
          },
          "undelegate(address)": {
            "notice": "Undelegates `staker` from the operator who they are delegated to.Callable only by the InvestmentManager"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@eigenlayer/=../eignlayr-contracts/src/",
        ":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/eignlayr-contracts/lib/ds-test/src/",
        ":eignlayr-contracts/=lib/eignlayr-contracts/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/eignlayr-contracts/lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/eignlayr-contracts/lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/core/EigenLayrDelegation.sol": "EigenLayrDelegation"
      },
      "libraries": {}
    },
    "sources": {
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/core/EigenLayrDelegation.sol": {
        "keccak256": "0x978897da9872d064fca4e0d9a3dfb9ae45307398d579ddb529ddf422f9714657",
        "urls": [
          "bzz-raw://269496038010d6b42f949206d388d177b79a5f1f711e460869d095ff074e60b6",
          "dweb:/ipfs/QmPytBkymcwqywFTJ3HsCHjJGdEAVfjihd3mXrzSZbhgX6"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/core/EigenLayrDelegationStorage.sol": {
        "keccak256": "0xa465771a204d2226bedec6ba83ea7cafcb5851caf7b1fdf274070d411838a637",
        "urls": [
          "bzz-raw://db4829529f094a305a5064a28aebc6936bfd997e82230aea990b4e7a2830642f",
          "dweb:/ipfs/QmW8hc8uNEUTWLZteUn88n2LGe6r6pQHELzBBB3M2hLoia"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IEigenLayrDelegation.sol": {
        "keccak256": "0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e",
        "urls": [
          "bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21",
          "dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IInvestmentManager.sol": {
        "keccak256": "0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100",
        "urls": [
          "bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34",
          "dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IInvestmentStrategy.sol": {
        "keccak256": "0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb",
        "urls": [
          "bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52",
          "dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975",
        "urls": [
          "bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c",
          "dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IRegistryPermission.sol": {
        "keccak256": "0x5a19ffe942fa540af5b4989590e7378ebbdfec7234a8e64b70d15dd57b4beed3",
        "urls": [
          "bzz-raw://dbfd03c6d589513cdfcf11814461d28fc5af5c705b48ac7507073cd8f8eacc2b",
          "dweb:/ipfs/QmddUJh6nU7twBfYheBXX5rVHHHkgNJrrcEPW5QCKGZcyQ"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IServiceManager.sol": {
        "keccak256": "0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4",
        "urls": [
          "bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2",
          "dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04",
        "urls": [
          "bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32",
          "dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr"
        ],
        "license": "UNLICENSED"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/core/EigenLayrDelegation.sol",
    "id": 6151,
    "exportedSymbols": {
      "AddressUpgradeable": [
        39135
      ],
      "Context": [
        41630
      ],
      "ContextUpgradeable": [
        39177
      ],
      "ECDSA": [
        42226
      ],
      "EigenLayrDelegation": [
        6150
      ],
      "EigenLayrDelegationStorage": [
        6211
      ],
      "IERC20": [
        40863
      ],
      "IEigenLayrDelegation": [
        7256
      ],
      "IInvestmentManager": [
        7364
      ],
      "IInvestmentStrategy": [
        7458
      ],
      "IPauserRegistry": [
        7474
      ],
      "IRegistryPermission": [
        7710
      ],
      "IServiceManager": [
        7740
      ],
      "Initializable": [
        38778
      ],
      "Math": [
        43103
      ],
      "Ownable": [
        39290
      ],
      "OwnableUpgradeable": [
        38609
      ],
      "Pausable": [
        12396
      ],
      "Strings": [
        41865
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9765:35",
    "nodes": [
      {
        "id": 5591,
        "nodeType": "PragmaDirective",
        "src": "39:23:35",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 5592,
        "nodeType": "ImportDirective",
        "src": "64:56:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6151,
        "sourceUnit": 40864,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5593,
        "nodeType": "ImportDirective",
        "src": "121:52:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6151,
        "sourceUnit": 39291,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5594,
        "nodeType": "ImportDirective",
        "src": "174:72:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6151,
        "sourceUnit": 38610,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5595,
        "nodeType": "ImportDirective",
        "src": "247:72:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6151,
        "sourceUnit": 38779,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5596,
        "nodeType": "ImportDirective",
        "src": "320:62:35",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6151,
        "sourceUnit": 42227,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5597,
        "nodeType": "ImportDirective",
        "src": "383:42:35",
        "nodes": [],
        "absolutePath": "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/core/EigenLayrDelegationStorage.sol",
        "file": "./EigenLayrDelegationStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6151,
        "sourceUnit": 6212,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5598,
        "nodeType": "ImportDirective",
        "src": "426:37:35",
        "nodes": [],
        "absolutePath": "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6151,
        "sourceUnit": 12397,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5599,
        "nodeType": "ImportDirective",
        "src": "464:47:35",
        "nodes": [],
        "absolutePath": "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IRegistryPermission.sol",
        "file": "../interfaces/IRegistryPermission.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6151,
        "sourceUnit": 7711,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6150,
        "nodeType": "ContractDefinition",
        "src": "1136:8667:35",
        "nodes": [
          {
            "id": 5611,
            "nodeType": "VariableDeclaration",
            "src": "1246:49:35",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_NEW_DELEGATION",
            "nameLocation": "1270:21:35",
            "scope": 6150,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 5609,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1246:5:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 5610,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1294:1:35",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 5615,
            "nodeType": "VariableDeclaration",
            "src": "1372:54:35",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 5612,
              "nodeType": "StructuredDocumentation",
              "src": "1302:65:35",
              "text": "@notice contract used for manage operator register permission"
            },
            "functionSelector": "cc7a2049",
            "mutability": "immutable",
            "name": "permissionManager",
            "nameLocation": "1409:17:35",
            "scope": 6150,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRegistryPermission_$7710",
              "typeString": "contract IRegistryPermission"
            },
            "typeName": {
              "id": 5614,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 5613,
                "name": "IRegistryPermission",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7710,
                "src": "1372:19:35"
              },
              "referencedDeclaration": 7710,
              "src": "1372:19:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRegistryPermission_$7710",
                "typeString": "contract IRegistryPermission"
              }
            },
            "visibility": "public"
          },
          {
            "id": 5631,
            "nodeType": "ModifierDefinition",
            "src": "1539:135:35",
            "nodes": [],
            "body": {
              "id": 5630,
              "nodeType": "Block",
              "src": "1572:102:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5619,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1590:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1590:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 5623,
                              "name": "investmentManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6180,
                              "src": "1612:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                                "typeString": "contract IInvestmentManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                                "typeString": "contract IInvestmentManager"
                              }
                            ],
                            "id": 5622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1604:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5621,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1604:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1604:26:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1590:40:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79496e766573746d656e744d616e61676572",
                        "id": 5626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1632:23:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cd7fb14ed625180fca63e29defc0cca46b08e783d2f359fd57c9e306d8e0878",
                          "typeString": "literal_string \"onlyInvestmentManager\""
                        },
                        "value": "onlyInvestmentManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cd7fb14ed625180fca63e29defc0cca46b08e783d2f359fd57c9e306d8e0878",
                          "typeString": "literal_string \"onlyInvestmentManager\""
                        }
                      ],
                      "id": 5618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1582:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1582:74:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5628,
                  "nodeType": "ExpressionStatement",
                  "src": "1582:74:35"
                },
                {
                  "id": 5629,
                  "nodeType": "PlaceholderStatement",
                  "src": "1666:1:35"
                }
              ]
            },
            "documentation": {
              "id": 5616,
              "nodeType": "StructuredDocumentation",
              "src": "1433:101:35",
              "text": "@notice Simple permission for functions that are only callable by the InvestmentManager contract."
            },
            "name": "onlyInvestmentManager",
            "nameLocation": "1548:21:35",
            "parameters": {
              "id": 5617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1569:2:35"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 5651,
            "nodeType": "FunctionDefinition",
            "src": "1710:238:35",
            "nodes": [],
            "body": {
              "id": 5650,
              "nodeType": "Block",
              "src": "1861:87:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5643,
                      "name": "permissionManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5615,
                      "src": "1871:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRegistryPermission_$7710",
                        "typeString": "contract IRegistryPermission"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5644,
                      "name": "_permissionManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5637,
                      "src": "1891:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRegistryPermission_$7710",
                        "typeString": "contract IRegistryPermission"
                      }
                    },
                    "src": "1871:38:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryPermission_$7710",
                      "typeString": "contract IRegistryPermission"
                    }
                  },
                  "id": 5646,
                  "nodeType": "ExpressionStatement",
                  "src": "1871:38:35"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 5647,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38759,
                      "src": "1919:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 5648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1919:22:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5649,
                  "nodeType": "ExpressionStatement",
                  "src": "1919:22:35"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 5640,
                    "name": "_investmentManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5634,
                    "src": "1837:18:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                      "typeString": "contract IInvestmentManager"
                    }
                  }
                ],
                "id": 5641,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 5639,
                  "name": "EigenLayrDelegationStorage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6211,
                  "src": "1810:26:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "1810:46:35"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 5638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5634,
                  "mutability": "mutable",
                  "name": "_investmentManager",
                  "nameLocation": "1741:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5651,
                  "src": "1722:37:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                    "typeString": "contract IInvestmentManager"
                  },
                  "typeName": {
                    "id": 5633,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5632,
                      "name": "IInvestmentManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7364,
                      "src": "1722:18:35"
                    },
                    "referencedDeclaration": 7364,
                    "src": "1722:18:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5637,
                  "mutability": "mutable",
                  "name": "_permissionManager",
                  "nameLocation": "1782:18:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5651,
                  "src": "1762:38:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRegistryPermission_$7710",
                    "typeString": "contract IRegistryPermission"
                  },
                  "typeName": {
                    "id": 5636,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5635,
                      "name": "IRegistryPermission",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7710,
                      "src": "1762:19:35"
                    },
                    "referencedDeclaration": 7710,
                    "src": "1762:19:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRegistryPermission_$7710",
                      "typeString": "contract IRegistryPermission"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1721:80:35"
            },
            "returnParameters": {
              "id": 5642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1861:0:35"
            },
            "scope": 6150,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5690,
            "nodeType": "FunctionDefinition",
            "src": "1954:339:35",
            "nodes": [],
            "body": {
              "id": 5689,
              "nodeType": "Block",
              "src": "2070:223:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5662,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5654,
                        "src": "2098:15:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7474",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 5663,
                        "name": "UNPAUSE_ALL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12175,
                        "src": "2115:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7474",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5661,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12299,
                      "src": "2080:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$7474_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 5664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:47:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5665,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:47:35"
                },
                {
                  "expression": {
                    "id": 5683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5666,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6176,
                      "src": "2137:16:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 5670,
                              "name": "DOMAIN_TYPEHASH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6167,
                              "src": "2177:15:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "456967656e4c617972",
                                  "id": 5673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2200:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b07a8ec0e7c0f3d2ba4c3aecac5f9da67088461726d8a9c93842eda707acf41e",
                                    "typeString": "literal_string \"EigenLayr\""
                                  },
                                  "value": "EigenLayr"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_b07a8ec0e7c0f3d2ba4c3aecac5f9da67088461726d8a9c93842eda707acf41e",
                                    "typeString": "literal_string \"EigenLayr\""
                                  }
                                ],
                                "id": 5672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2194:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 5671,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2194:5:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2194:18:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 5675,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2214:5:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 5676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "chainid",
                              "nodeType": "MemberAccess",
                              "src": "2214:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 5679,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2237:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_EigenLayrDelegation_$6150",
                                    "typeString": "contract EigenLayrDelegation"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_EigenLayrDelegation_$6150",
                                    "typeString": "contract EigenLayrDelegation"
                                  }
                                ],
                                "id": 5678,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2229:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5677,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2229:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2229:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5668,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2166:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 5669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "2166:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 5681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2166:77:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 5667,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "2156:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 5682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2156:88:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2137:107:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 5684,
                  "nodeType": "ExpressionStatement",
                  "src": "2137:107:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5686,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5656,
                        "src": "2273:12:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5685,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38603,
                      "src": "2254:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 5687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:32:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5688,
                  "nodeType": "ExpressionStatement",
                  "src": "2254:32:35"
                }
              ]
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5659,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5658,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38680,
                  "src": "2054:11:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "2054:11:35"
              }
            ],
            "name": "initialize",
            "nameLocation": "1963:10:35",
            "parameters": {
              "id": 5657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5654,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "1990:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5690,
                  "src": "1974:31:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$7474",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 5653,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5652,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7474,
                      "src": "1974:15:35"
                    },
                    "referencedDeclaration": 7474,
                    "src": "1974:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$7474",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5656,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "2015:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5690,
                  "src": "2007:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2007:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1973:55:35"
            },
            "returnParameters": {
              "id": 5660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:0:35"
            },
            "scope": 6150,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5735,
            "nodeType": "FunctionDefinition",
            "src": "2553:678:35",
            "nodes": [],
            "body": {
              "id": 5734,
              "nodeType": "Block",
              "src": "2620:611:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 5699,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2699:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2699:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5697,
                              "name": "permissionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5615,
                              "src": "2651:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$7710",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 5698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getOperatorRegisterPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7688,
                            "src": "2651:47:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 5701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2651:59:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 5702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2714:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2651:67:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e726567697374657241734f70657261746f723a204f70657261746f7220646f6573206e6f74207065726d697373696f6e20746f207265676973746572206173206f70657261746f72",
                        "id": 5704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2732:94:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c857db208ecaf46d9e32739ce9eaf380d447a7d14d7f11aeac9c84a6e2494462",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: Operator does not permission to register as operator\""
                        },
                        "value": "EigenLayrDelegation.registerAsOperator: Operator does not permission to register as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c857db208ecaf46d9e32739ce9eaf380d447a7d14d7f11aeac9c84a6e2494462",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: Operator does not permission to register as operator\""
                        }
                      ],
                      "id": 5696,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2630:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2630:206:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5706,
                  "nodeType": "ExpressionStatement",
                  "src": "2630:206:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 5708,
                            "name": "operatorReceiverRewardAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6191,
                            "src": "2867:29:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 5711,
                          "indexExpression": {
                            "expression": {
                              "id": 5709,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2897:3:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5710,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2897:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2867:41:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2920:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2912:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5712,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2912:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2912:10:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2867:55:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e726567697374657241734f70657261746f723a206f70657261746f722068617320616c72656164792072656769737465726564",
                        "id": 5717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2936:73:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_707de6bdd662fd924936555586832cd7e1169328bee03a67ddede80803a5d4a7",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: operator has already registered\""
                        },
                        "value": "EigenLayrDelegation.registerAsOperator: operator has already registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_707de6bdd662fd924936555586832cd7e1169328bee03a67ddede80803a5d4a7",
                          "typeString": "literal_string \"EigenLayrDelegation.registerAsOperator: operator has already registered\""
                        }
                      ],
                      "id": 5707,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2846:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2846:173:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5719,
                  "nodeType": "ExpressionStatement",
                  "src": "2846:173:35"
                },
                {
                  "expression": {
                    "id": 5725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5720,
                        "name": "operatorReceiverRewardAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6191,
                        "src": "3117:29:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 5723,
                      "indexExpression": {
                        "expression": {
                          "id": 5721,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3147:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3147:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3117:41:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5724,
                      "name": "rewardReceiveAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5693,
                      "src": "3161:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3117:64:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5726,
                  "nodeType": "ExpressionStatement",
                  "src": "3117:64:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5728,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3201:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3201:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 5730,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3213:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3213:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5727,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6093,
                      "src": "3191:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 5732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3191:33:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5733,
                  "nodeType": "ExpressionStatement",
                  "src": "3191:33:35"
                }
              ]
            },
            "baseFunctions": [
              7154
            ],
            "documentation": {
              "id": 5691,
              "nodeType": "StructuredDocumentation",
              "src": "2325:223:35",
              "text": " @notice This will be called by an operator to register itself as an operator that stakers can choose to delegate to.\n @param  rewardReceiveAddress another EOA address for receive from mantle network"
            },
            "functionSelector": "bd44e403",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAsOperator",
            "nameLocation": "2562:18:35",
            "parameters": {
              "id": 5694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5693,
                  "mutability": "mutable",
                  "name": "rewardReceiveAddress",
                  "nameLocation": "2589:20:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5735,
                  "src": "2581:28:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2580:30:35"
            },
            "returnParameters": {
              "id": 5695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2620:0:35"
            },
            "scope": 6150,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5759,
            "nodeType": "FunctionDefinition",
            "src": "3435:296:35",
            "nodes": [],
            "body": {
              "id": 5758,
              "nodeType": "Block",
              "src": "3482:249:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 5744,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3554:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5745,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3554:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5742,
                              "name": "permissionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5615,
                              "src": "3513:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$7710",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 5743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getDelegatorPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7709,
                            "src": "3513:40:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 5746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3513:52:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 5747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3569:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "3513:60:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e744d616e616765722e6465706f736974496e746f53747261746567793a2064656c656761746f7220686173206e6f74207065726d697373696f6e20657865632064656c656761746520746f",
                        "id": 5749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3587:86:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        },
                        "value": "InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        }
                      ],
                      "id": 5741,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3492:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3492:191:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5751,
                  "nodeType": "ExpressionStatement",
                  "src": "3492:191:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 5753,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3703:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3703:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5755,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5738,
                        "src": "3715:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5752,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6093,
                      "src": "3693:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 5756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3693:31:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5757,
                  "nodeType": "ExpressionStatement",
                  "src": "3693:31:35"
                }
              ]
            },
            "baseFunctions": [
              7160
            ],
            "documentation": {
              "id": 5736,
              "nodeType": "StructuredDocumentation",
              "src": "3237:193:35",
              "text": "  @notice This will be called by a staker to delegate its assets to some operator.\n  @param operator is the operator to whom staker (msg.sender) is delegating its assets"
            },
            "functionSelector": "ac637c7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateTo",
            "nameLocation": "3444:10:35",
            "parameters": {
              "id": 5739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5738,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3463:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5759,
                  "src": "3455:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3454:18:35"
            },
            "returnParameters": {
              "id": 5740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3482:0:35"
            },
            "scope": 6150,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5845,
            "nodeType": "FunctionDefinition",
            "src": "3924:964:35",
            "nodes": [],
            "body": {
              "id": 5844,
              "nodeType": "Block",
              "src": "4049:839:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 5776,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4121:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4121:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 5774,
                              "name": "permissionManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5615,
                              "src": "4080:17:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRegistryPermission_$7710",
                                "typeString": "contract IRegistryPermission"
                              }
                            },
                            "id": 5775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getDelegatorPermission",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7709,
                            "src": "4080:40:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 5778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4080:52:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 5779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4136:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4080:60:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e744d616e616765722e6465706f736974496e746f53747261746567793a2064656c656761746f7220686173206e6f74207065726d697373696f6e20657865632064656c656761746520746f",
                        "id": 5781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4154:86:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        },
                        "value": "InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df81f0ceaa9c7a91c77578e9d59c4dccde8a74629b5646ed12f1130da8ed3c5",
                          "typeString": "literal_string \"InvestmentManager.depositIntoStrategy: delegator has not permission exec delegate to\""
                        }
                      ],
                      "id": 5773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4059:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4059:191:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5783,
                  "nodeType": "ExpressionStatement",
                  "src": "4059:191:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 5792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5785,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5766,
                            "src": "4268:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 5786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4278:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4268:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5788,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5766,
                            "src": "4283:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "expression": {
                              "id": 5789,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4293:5:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 5790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4293:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4283:25:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4268:40:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "64656c65676174696f6e207369676e61747572652065787069726564",
                        "id": 5793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4310:30:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5723ff926e7a17485b1ef32885df3f570581df71cfe67ad788f26084f37a3ff9",
                          "typeString": "literal_string \"delegation signature expired\""
                        },
                        "value": "delegation signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5723ff926e7a17485b1ef32885df3f570581df71cfe67ad788f26084f37a3ff9",
                          "typeString": "literal_string \"delegation signature expired\""
                        }
                      ],
                      "id": 5784,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4260:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4260:81:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5795,
                  "nodeType": "ExpressionStatement",
                  "src": "4260:81:35"
                },
                {
                  "assignments": [
                    5797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5797,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "4425:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 5844,
                      "src": "4417:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5796,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4417:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5811,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5801,
                            "name": "DELEGATION_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6173,
                            "src": "4459:19:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 5802,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5762,
                            "src": "4480:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5803,
                            "name": "operator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5764,
                            "src": "4488:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4498:16:35",
                            "subExpression": {
                              "baseExpression": {
                                "id": 5804,
                                "name": "nonces",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6199,
                                "src": "4498:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 5806,
                              "indexExpression": {
                                "id": 5805,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5762,
                                "src": "4505:6:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "4498:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 5808,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5766,
                            "src": "4516:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 5799,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4448:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "4448:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4448:75:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5798,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4438:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4438:86:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4417:107:35"
                },
                {
                  "assignments": [
                    5813
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5813,
                      "mutability": "mutable",
                      "name": "digestHash",
                      "nameLocation": "4542:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 5844,
                      "src": "4534:18:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5812,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4534:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5822,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "1901",
                            "id": 5817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4582:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            "value": "\u0019\u0001"
                          },
                          {
                            "id": 5818,
                            "name": "DOMAIN_SEPARATOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6176,
                            "src": "4594:16:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 5819,
                            "name": "structHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5797,
                            "src": "4612:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                              "typeString": "literal_string hex\"1901\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 5815,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4565:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "4565:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4565:58:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5814,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4555:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4555:69:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4534:90:35"
                },
                {
                  "assignments": [
                    5824
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5824,
                      "mutability": "mutable",
                      "name": "recoveredAddress",
                      "nameLocation": "4681:16:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 5844,
                      "src": "4673:24:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5823,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4673:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5831,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5827,
                        "name": "digestHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5813,
                        "src": "4714:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5828,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5768,
                        "src": "4726:1:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 5829,
                        "name": "vs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5770,
                        "src": "4729:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 5825,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42226,
                        "src": "4700:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$42226_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 5826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42069,
                      "src": "4700:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 5830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4700:32:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4673:59:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5833,
                          "name": "recoveredAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5824,
                          "src": "4751:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5834,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5762,
                          "src": "4771:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4751:26:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e64656c6567617465546f42795369676e61747572653a20736967206e6f742066726f6d207374616b6572",
                        "id": 5836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4779:64:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fdbf1f36a92f7f27a6882acd331e2541d7c7e084418a282ad266d51ce1c3ccf2",
                          "typeString": "literal_string \"EigenLayrDelegation.delegateToBySignature: sig not from staker\""
                        },
                        "value": "EigenLayrDelegation.delegateToBySignature: sig not from staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fdbf1f36a92f7f27a6882acd331e2541d7c7e084418a282ad266d51ce1c3ccf2",
                          "typeString": "literal_string \"EigenLayrDelegation.delegateToBySignature: sig not from staker\""
                        }
                      ],
                      "id": 5832,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4743:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4743:101:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5838,
                  "nodeType": "ExpressionStatement",
                  "src": "4743:101:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5840,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5762,
                        "src": "4864:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5841,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5764,
                        "src": "4872:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5839,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6093,
                      "src": "4854:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 5842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4854:27:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5843,
                  "nodeType": "ExpressionStatement",
                  "src": "4854:27:35"
                }
              ]
            },
            "baseFunctions": [
              7174
            ],
            "documentation": {
              "id": 5760,
              "nodeType": "StructuredDocumentation",
              "src": "3737:182:35",
              "text": " @notice Delegates from `staker` to `operator`.\n @dev requires that r, vs are a valid ECSDA signature from `staker` indicating their intention for this action"
            },
            "functionSelector": "b41b394b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegateToBySignature",
            "nameLocation": "3933:21:35",
            "parameters": {
              "id": 5771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5762,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "3963:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5845,
                  "src": "3955:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5761,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3955:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5764,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3979:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5845,
                  "src": "3971:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3971:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5766,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "3997:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5845,
                  "src": "3989:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3989:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5768,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "4013:1:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5845,
                  "src": "4005:9:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5767,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4005:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5770,
                  "mutability": "mutable",
                  "name": "vs",
                  "nameLocation": "4024:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5845,
                  "src": "4016:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5769,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4016:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3954:73:35"
            },
            "returnParameters": {
              "id": 5772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4049:0:35"
            },
            "scope": 6150,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5871,
            "nodeType": "FunctionDefinition",
            "src": "5153:233:35",
            "nodes": [],
            "body": {
              "id": 5870,
              "nodeType": "Block",
              "src": "5220:166:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5238:19:35",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 5855,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5848,
                              "src": "5250:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5854,
                            "name": "isOperator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6149,
                            "src": "5239:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 5856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5239:18:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e756e64656c65676174653a206f70657261746f72732063616e6e6f7420756e64656c65676174652066726f6d207468656d73656c766573",
                        "id": 5858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5259:77:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f680da10f74b9eb5c16c35bd020ea3f2f0d1c05c7dc0fd53612d7993ca300be8",
                          "typeString": "literal_string \"EigenLayrDelegation.undelegate: operators cannot undelegate from themselves\""
                        },
                        "value": "EigenLayrDelegation.undelegate: operators cannot undelegate from themselves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f680da10f74b9eb5c16c35bd020ea3f2f0d1c05c7dc0fd53612d7993ca300be8",
                          "typeString": "literal_string \"EigenLayrDelegation.undelegate: operators cannot undelegate from themselves\""
                        }
                      ],
                      "id": 5853,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5230:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5230:107:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5860,
                  "nodeType": "ExpressionStatement",
                  "src": "5230:107:35"
                },
                {
                  "expression": {
                    "id": 5868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5861,
                        "name": "delegatedTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6195,
                        "src": "5347:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 5863,
                      "indexExpression": {
                        "id": 5862,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5848,
                        "src": "5359:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5347:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 5866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5377:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 5865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5369:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 5864,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5369:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 5867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5369:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5347:32:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5869,
                  "nodeType": "ExpressionStatement",
                  "src": "5347:32:35"
                }
              ]
            },
            "baseFunctions": [
              7180
            ],
            "documentation": {
              "id": 5846,
              "nodeType": "StructuredDocumentation",
              "src": "4894:254:35",
              "text": " @notice Undelegates `staker` from the operator who they are delegated to.\n @notice Callable only by the InvestmentManager\n @dev Should only ever be called in the event that the `staker` has no active deposits in EigenLayer."
            },
            "functionSelector": "da8be864",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5851,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5850,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5631,
                  "src": "5198:21:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "5198:21:35"
              }
            ],
            "name": "undelegate",
            "nameLocation": "5162:10:35",
            "parameters": {
              "id": 5849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5848,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "5181:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5871,
                  "src": "5173:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5173:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5172:16:35"
            },
            "returnParameters": {
              "id": 5852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5220:0:35"
            },
            "scope": 6150,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5884,
            "nodeType": "FunctionDefinition",
            "src": "5523:146:35",
            "nodes": [],
            "body": {
              "id": 5883,
              "nodeType": "Block",
              "src": "5606:63:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5879,
                      "name": "operatorReceiverRewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6191,
                      "src": "5623:29:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 5881,
                    "indexExpression": {
                      "id": 5880,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5874,
                      "src": "5653:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5623:39:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5878,
                  "id": 5882,
                  "nodeType": "Return",
                  "src": "5616:46:35"
                }
              ]
            },
            "baseFunctions": [
              7196
            ],
            "documentation": {
              "id": 5872,
              "nodeType": "StructuredDocumentation",
              "src": "5392:126:35",
              "text": "@notice returns the eoa address of the `operator`, which may mediate their interactions with stakers who delegate to them."
            },
            "functionSelector": "ee4ea66a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOperatorRewardAddress",
            "nameLocation": "5532:24:35",
            "parameters": {
              "id": 5875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5874,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5565:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5884,
                  "src": "5557:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5557:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5556:18:35"
            },
            "returnParameters": {
              "id": 5878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5884,
                  "src": "5598:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5598:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5597:9:35"
            },
            "scope": 6150,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 5952,
            "nodeType": "FunctionDefinition",
            "src": "5894:649:35",
            "nodes": [],
            "body": {
              "id": 5951,
              "nodeType": "Block",
              "src": "6040:503:35",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 5898,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5887,
                        "src": "6118:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5897,
                      "name": "isDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6112,
                      "src": "6106:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 5899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6106:19:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5950,
                  "nodeType": "IfStatement",
                  "src": "6102:435:35",
                  "trueBody": {
                    "id": 5949,
                    "nodeType": "Block",
                    "src": "6127:410:35",
                    "statements": [
                      {
                        "assignments": [
                          5901
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5901,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "6149:8:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 5949,
                            "src": "6141:16:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 5900,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6141:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5905,
                        "initialValue": {
                          "baseExpression": {
                            "id": 5902,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6195,
                            "src": "6160:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 5904,
                          "indexExpression": {
                            "id": 5903,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5887,
                            "src": "6172:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6160:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6141:38:35"
                      },
                      {
                        "expression": {
                          "id": 5912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 5906,
                                "name": "operatorShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6187,
                                "src": "6250:14:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IInvestmentStrategy_$7458_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IInvestmentStrategy => uint256))"
                                }
                              },
                              "id": 5909,
                              "indexExpression": {
                                "id": 5907,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5901,
                                "src": "6265:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6250:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IInvestmentStrategy_$7458_$_t_uint256_$",
                                "typeString": "mapping(contract IInvestmentStrategy => uint256)"
                              }
                            },
                            "id": 5910,
                            "indexExpression": {
                              "id": 5908,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5890,
                              "src": "6275:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                                "typeString": "contract IInvestmentStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6250:34:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 5911,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5892,
                            "src": "6288:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6250:44:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5913,
                        "nodeType": "ExpressionStatement",
                        "src": "6250:44:35"
                      },
                      {
                        "assignments": [
                          5918
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5918,
                            "mutability": "mutable",
                            "name": "investorStrats",
                            "nameLocation": "6338:14:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 5949,
                            "src": "6309:43:35",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_memory_ptr",
                              "typeString": "contract IInvestmentStrategy[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 5916,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 5915,
                                  "name": "IInvestmentStrategy",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 7458,
                                  "src": "6309:19:35"
                                },
                                "referencedDeclaration": 7458,
                                "src": "6309:19:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                                  "typeString": "contract IInvestmentStrategy"
                                }
                              },
                              "id": 5917,
                              "nodeType": "ArrayTypeName",
                              "src": "6309:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_storage_ptr",
                                "typeString": "contract IInvestmentStrategy[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5925,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 5923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6381:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 5922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6355:25:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (contract IInvestmentStrategy[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 5920,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 5919,
                                  "name": "IInvestmentStrategy",
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 7458,
                                  "src": "6359:19:35"
                                },
                                "referencedDeclaration": 7458,
                                "src": "6359:19:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                                  "typeString": "contract IInvestmentStrategy"
                                }
                              },
                              "id": 5921,
                              "nodeType": "ArrayTypeName",
                              "src": "6359:21:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_storage_ptr",
                                "typeString": "contract IInvestmentStrategy[]"
                              }
                            }
                          },
                          "id": 5924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6355:28:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_memory_ptr",
                            "typeString": "contract IInvestmentStrategy[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6309:74:35"
                      },
                      {
                        "assignments": [
                          5930
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5930,
                            "mutability": "mutable",
                            "name": "investorShares",
                            "nameLocation": "6414:14:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 5949,
                            "src": "6397:31:35",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 5928,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6397:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5929,
                              "nodeType": "ArrayTypeName",
                              "src": "6397:9:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5936,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "31",
                              "id": 5934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6442:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "id": 5933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6431:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 5931,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6435:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5932,
                              "nodeType": "ArrayTypeName",
                              "src": "6435:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 5935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6431:13:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6397:47:35"
                      },
                      {
                        "expression": {
                          "id": 5941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 5937,
                              "name": "investorStrats",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5918,
                              "src": "6458:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_memory_ptr",
                                "typeString": "contract IInvestmentStrategy[] memory"
                              }
                            },
                            "id": 5939,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 5938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6473:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6458:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                              "typeString": "contract IInvestmentStrategy"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5940,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5890,
                            "src": "6478:8:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                              "typeString": "contract IInvestmentStrategy"
                            }
                          },
                          "src": "6458:28:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                            "typeString": "contract IInvestmentStrategy"
                          }
                        },
                        "id": 5942,
                        "nodeType": "ExpressionStatement",
                        "src": "6458:28:35"
                      },
                      {
                        "expression": {
                          "id": 5947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 5943,
                              "name": "investorShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5930,
                              "src": "6500:14:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 5945,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 5944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6515:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6500:17:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5946,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5892,
                            "src": "6520:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6500:26:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5948,
                        "nodeType": "ExpressionStatement",
                        "src": "6500:26:35"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              7218
            ],
            "documentation": {
              "id": 5885,
              "nodeType": "StructuredDocumentation",
              "src": "5675:214:35",
              "text": " @notice Increases the `staker`'s delegated shares in `strategy` by `shares, typically called when the staker has further deposits into EigenLayr\n @dev Callable only by the InvestmentManager"
            },
            "functionSelector": "28a573ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5895,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5894,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5631,
                  "src": "6014:21:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "6014:21:35"
              }
            ],
            "name": "increaseDelegatedShares",
            "nameLocation": "5903:23:35",
            "parameters": {
              "id": 5893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5887,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "5935:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5952,
                  "src": "5927:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5927:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5890,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "5963:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5952,
                  "src": "5943:28:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                    "typeString": "contract IInvestmentStrategy"
                  },
                  "typeName": {
                    "id": 5889,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5888,
                      "name": "IInvestmentStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7458,
                      "src": "5943:19:35"
                    },
                    "referencedDeclaration": 7458,
                    "src": "5943:19:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                      "typeString": "contract IInvestmentStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5892,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "5981:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 5952,
                  "src": "5973:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5973:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5926:62:35"
            },
            "returnParameters": {
              "id": 5896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6040:0:35"
            },
            "scope": 6150,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6009,
            "nodeType": "FunctionDefinition",
            "src": "6792:629:35",
            "nodes": [],
            "body": {
              "id": 6008,
              "nodeType": "Block",
              "src": "6992:429:35",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 5968,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5955,
                        "src": "7018:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 5967,
                      "name": "isDelegated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6112,
                      "src": "7006:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 5969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7006:19:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6007,
                  "nodeType": "IfStatement",
                  "src": "7002:413:35",
                  "trueBody": {
                    "id": 6006,
                    "nodeType": "Block",
                    "src": "7027:388:35",
                    "statements": [
                      {
                        "assignments": [
                          5971
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5971,
                            "mutability": "mutable",
                            "name": "operator",
                            "nameLocation": "7049:8:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 6006,
                            "src": "7041:16:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 5970,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7041:7:35",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5975,
                        "initialValue": {
                          "baseExpression": {
                            "id": 5972,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6195,
                            "src": "7060:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 5974,
                          "indexExpression": {
                            "id": 5973,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5955,
                            "src": "7072:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7060:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7041:38:35"
                      },
                      {
                        "assignments": [
                          5977
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5977,
                            "mutability": "mutable",
                            "name": "stratsLength",
                            "nameLocation": "7164:12:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 6006,
                            "src": "7156:20:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5976,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7156:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5980,
                        "initialValue": {
                          "expression": {
                            "id": 5978,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5959,
                            "src": "7179:10:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_calldata_ptr",
                              "typeString": "contract IInvestmentStrategy[] calldata"
                            }
                          },
                          "id": 5979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7179:17:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7156:40:35"
                      },
                      {
                        "body": {
                          "id": 6004,
                          "nodeType": "Block",
                          "src": "7249:156:35",
                          "statements": [
                            {
                              "expression": {
                                "id": 5998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 5988,
                                      "name": "operatorShares",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 6187,
                                      "src": "7267:14:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IInvestmentStrategy_$7458_$_t_uint256_$_$",
                                        "typeString": "mapping(address => mapping(contract IInvestmentStrategy => uint256))"
                                      }
                                    },
                                    "id": 5993,
                                    "indexExpression": {
                                      "id": 5989,
                                      "name": "operator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5971,
                                      "src": "7282:8:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7267:24:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IInvestmentStrategy_$7458_$_t_uint256_$",
                                      "typeString": "mapping(contract IInvestmentStrategy => uint256)"
                                    }
                                  },
                                  "id": 5994,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 5990,
                                      "name": "strategies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5959,
                                      "src": "7292:10:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_calldata_ptr",
                                        "typeString": "contract IInvestmentStrategy[] calldata"
                                      }
                                    },
                                    "id": 5992,
                                    "indexExpression": {
                                      "id": 5991,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5982,
                                      "src": "7303:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "7292:13:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                                      "typeString": "contract IInvestmentStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "7267:39:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 5995,
                                    "name": "shares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5962,
                                    "src": "7310:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                      "typeString": "uint256[] calldata"
                                    }
                                  },
                                  "id": 5997,
                                  "indexExpression": {
                                    "id": 5996,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5982,
                                    "src": "7317:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7310:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7267:52:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5999,
                              "nodeType": "ExpressionStatement",
                              "src": "7267:52:35"
                            },
                            {
                              "id": 6003,
                              "nodeType": "UncheckedBlock",
                              "src": "7337:54:35",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 6001,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "7369:3:35",
                                    "subExpression": {
                                      "id": 6000,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 5982,
                                      "src": "7371:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 6002,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7369:3:35"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5985,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5982,
                            "src": "7230:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 5986,
                            "name": "stratsLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5977,
                            "src": "7234:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7230:16:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 6005,
                        "initializationExpression": {
                          "assignments": [
                            5982
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 5982,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "7223:1:35",
                              "nodeType": "VariableDeclaration",
                              "scope": 6005,
                              "src": "7215:9:35",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 5981,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "7215:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 5984,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 5983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7227:1:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7215:13:35"
                        },
                        "nodeType": "ForStatement",
                        "src": "7210:195:35"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              7231
            ],
            "documentation": {
              "id": 5953,
              "nodeType": "StructuredDocumentation",
              "src": "6549:238:35",
              "text": " @notice Decreases the `staker`'s delegated shares in each entry of `strategies` by its respective `shares[i]`, typically called when the staker withdraws from EigenLayr\n @dev Callable only by the InvestmentManager"
            },
            "functionSelector": "5820491c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5965,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5964,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5631,
                  "src": "6966:21:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "6966:21:35"
              }
            ],
            "name": "decreaseDelegatedShares",
            "nameLocation": "6801:23:35",
            "parameters": {
              "id": 5963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5955,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "6842:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6009,
                  "src": "6834:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6834:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5959,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "6889:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6009,
                  "src": "6858:41:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_calldata_ptr",
                    "typeString": "contract IInvestmentStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5957,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5956,
                        "name": "IInvestmentStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 7458,
                        "src": "6858:19:35"
                      },
                      "referencedDeclaration": 7458,
                      "src": "6858:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                        "typeString": "contract IInvestmentStrategy"
                      }
                    },
                    "id": 5958,
                    "nodeType": "ArrayTypeName",
                    "src": "6858:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_storage_ptr",
                      "typeString": "contract IInvestmentStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5962,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "6928:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6009,
                  "src": "6909:25:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5960,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6909:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 5961,
                    "nodeType": "ArrayTypeName",
                    "src": "6909:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6824:116:35"
            },
            "returnParameters": {
              "id": 5966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6992:0:35"
            },
            "scope": 6150,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6093,
            "nodeType": "FunctionDefinition",
            "src": "7972:1111:35",
            "nodes": [],
            "body": {
              "id": 6092,
              "nodeType": "Block",
              "src": "8075:1008:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6021,
                      "mutability": "mutable",
                      "name": "rewardAddress",
                      "nameLocation": "8093:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6092,
                      "src": "8085:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6020,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8085:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6025,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6022,
                      "name": "operatorReceiverRewardAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6191,
                      "src": "8109:29:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 6024,
                    "indexExpression": {
                      "id": 6023,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6014,
                      "src": "8139:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8109:39:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8085:63:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6027,
                          "name": "rewardAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6021,
                          "src": "8179:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8204:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8196:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6028,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8196:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8196:10:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8179:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a206f70657261746f7220686173206e6f7420796574207265676973746572656420617320612064656c6567617465",
                        "id": 6033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8208:78:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_076b77285ae9dd8b0c14123f78d158756024dca0c7de99dc9436071e6c0dc729",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: operator has not yet registered as a delegate\""
                        },
                        "value": "EigenLayrDelegation._delegate: operator has not yet registered as a delegate"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_076b77285ae9dd8b0c14123f78d158756024dca0c7de99dc9436071e6c0dc729",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: operator has not yet registered as a delegate\""
                        }
                      ],
                      "id": 6026,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8158:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8158:138:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6035,
                  "nodeType": "ExpressionStatement",
                  "src": "8158:138:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6038,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6012,
                            "src": "8330:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6037,
                          "name": "isNotDelegated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6131,
                          "src": "8315:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 6039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8315:22:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456967656e4c61797244656c65676174696f6e2e5f64656c65676174653a207374616b657220686173206578697374696e672064656c65676174696f6e",
                        "id": 6040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8339:63:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1022491f5cd71f1822fc6bb0f89913349e9ef8529a8261768e2e541f03c88ff",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: staker has existing delegation\""
                        },
                        "value": "EigenLayrDelegation._delegate: staker has existing delegation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1022491f5cd71f1822fc6bb0f89913349e9ef8529a8261768e2e541f03c88ff",
                          "typeString": "literal_string \"EigenLayrDelegation._delegate: staker has existing delegation\""
                        }
                      ],
                      "id": 6036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8307:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8307:96:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6042,
                  "nodeType": "ExpressionStatement",
                  "src": "8307:96:35"
                },
                {
                  "expression": {
                    "id": 6047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6043,
                        "name": "delegatedTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6195,
                        "src": "8484:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6045,
                      "indexExpression": {
                        "id": 6044,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6012,
                        "src": "8496:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8484:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6046,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6014,
                      "src": "8506:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8484:30:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6048,
                  "nodeType": "ExpressionStatement",
                  "src": "8484:30:35"
                },
                {
                  "assignments": [
                    6053,
                    6056
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6053,
                      "mutability": "mutable",
                      "name": "strategies",
                      "nameLocation": "8635:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6092,
                      "src": "8606:39:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_memory_ptr",
                        "typeString": "contract IInvestmentStrategy[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6051,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6050,
                            "name": "IInvestmentStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 7458,
                            "src": "8606:19:35"
                          },
                          "referencedDeclaration": 7458,
                          "src": "8606:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                            "typeString": "contract IInvestmentStrategy"
                          }
                        },
                        "id": 6052,
                        "nodeType": "ArrayTypeName",
                        "src": "8606:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_storage_ptr",
                          "typeString": "contract IInvestmentStrategy[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6056,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "8664:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6092,
                      "src": "8647:23:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 6054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8647:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6055,
                        "nodeType": "ArrayTypeName",
                        "src": "8647:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6061,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6059,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6012,
                        "src": "8704:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6057,
                        "name": "investmentManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6180,
                        "src": "8674:17:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                          "typeString": "contract IInvestmentManager"
                        }
                      },
                      "id": 6058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getDeposits",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7348,
                      "src": "8674:29:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) view external returns (contract IInvestmentStrategy[] memory,uint256[] memory)"
                      }
                    },
                    "id": 6060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8674:37:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(contract IInvestmentStrategy[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8605:106:35"
                },
                {
                  "assignments": [
                    6063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6063,
                      "mutability": "mutable",
                      "name": "stratsLength",
                      "nameLocation": "8782:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6092,
                      "src": "8774:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6062,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8774:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6066,
                  "initialValue": {
                    "expression": {
                      "id": 6064,
                      "name": "strategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6053,
                      "src": "8797:10:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_memory_ptr",
                        "typeString": "contract IInvestmentStrategy[] memory"
                      }
                    },
                    "id": 6065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8797:17:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8774:40:35"
                },
                {
                  "body": {
                    "id": 6090,
                    "nodeType": "Block",
                    "src": "8863:214:35",
                    "statements": [
                      {
                        "expression": {
                          "id": 6084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 6074,
                                "name": "operatorShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6187,
                                "src": "8955:14:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IInvestmentStrategy_$7458_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IInvestmentStrategy => uint256))"
                                }
                              },
                              "id": 6079,
                              "indexExpression": {
                                "id": 6075,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6014,
                                "src": "8970:8:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8955:24:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IInvestmentStrategy_$7458_$_t_uint256_$",
                                "typeString": "mapping(contract IInvestmentStrategy => uint256)"
                              }
                            },
                            "id": 6080,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 6076,
                                "name": "strategies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6053,
                                "src": "8980:10:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IInvestmentStrategy_$7458_$dyn_memory_ptr",
                                  "typeString": "contract IInvestmentStrategy[] memory"
                                }
                              },
                              "id": 6078,
                              "indexExpression": {
                                "id": 6077,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6068,
                                "src": "8991:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8980:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                                "typeString": "contract IInvestmentStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8955:39:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 6081,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6056,
                              "src": "8998:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 6083,
                            "indexExpression": {
                              "id": 6082,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6068,
                              "src": "9005:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8998:9:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8955:52:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6085,
                        "nodeType": "ExpressionStatement",
                        "src": "8955:52:35"
                      },
                      {
                        "id": 6089,
                        "nodeType": "UncheckedBlock",
                        "src": "9021:46:35",
                        "statements": [
                          {
                            "expression": {
                              "id": 6087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "9049:3:35",
                              "subExpression": {
                                "id": 6086,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6068,
                                "src": "9051:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 6088,
                            "nodeType": "ExpressionStatement",
                            "src": "9049:3:35"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6071,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6068,
                      "src": "8844:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6072,
                      "name": "stratsLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6063,
                      "src": "8848:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8844:16:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6091,
                  "initializationExpression": {
                    "assignments": [
                      6068
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6068,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "8837:1:35",
                        "nodeType": "VariableDeclaration",
                        "scope": 6091,
                        "src": "8829:9:35",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6067,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8829:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 6070,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 6069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8841:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8829:13:35"
                  },
                  "nodeType": "ForStatement",
                  "src": "8824:253:35"
                }
              ]
            },
            "documentation": {
              "id": 6010,
              "nodeType": "StructuredDocumentation",
              "src": "7427:540:35",
              "text": " @notice Internal function implementing the delegation *from* `staker` *to* `operator`.\n @param staker The address to delegate *from* -- this address is delegating control of its own assets.\n @param operator The address to delegate *to* -- this address is being given power to place the `staker`'s assets at risk on services\n @dev Ensures that the operator has registered as a delegate (`address(dt) != address(0)`), verifies that `staker` is not already\n delegated, and records the new delegation."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6017,
                    "name": "PAUSED_NEW_DELEGATION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5611,
                    "src": "8052:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 6018,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6016,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12252,
                  "src": "8034:17:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "8034:40:35"
              }
            ],
            "name": "_delegate",
            "nameLocation": "7981:9:35",
            "parameters": {
              "id": 6015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6012,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "7999:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6093,
                  "src": "7991:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7991:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6014,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "8015:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6093,
                  "src": "8007:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8007:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7990:34:35"
            },
            "returnParameters": {
              "id": 6019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8075:0:35"
            },
            "scope": 6150,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 6112,
            "nodeType": "FunctionDefinition",
            "src": "9202:123:35",
            "nodes": [],
            "body": {
              "id": 6111,
              "nodeType": "Block",
              "src": "9266:59:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 6101,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6195,
                            "src": "9284:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 6103,
                          "indexExpression": {
                            "id": 6102,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6096,
                            "src": "9296:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9284:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9315:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9307:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6104,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9307:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9307:10:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9284:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 6109,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9283:35:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6100,
                  "id": 6110,
                  "nodeType": "Return",
                  "src": "9276:42:35"
                }
              ]
            },
            "baseFunctions": [
              7239
            ],
            "documentation": {
              "id": 6094,
              "nodeType": "StructuredDocumentation",
              "src": "9111:86:35",
              "text": "@notice Returns 'true' if `staker` *is* actively delegated, and 'false' otherwise."
            },
            "functionSelector": "3e28391d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDelegated",
            "nameLocation": "9211:11:35",
            "parameters": {
              "id": 6097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6096,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "9231:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6112,
                  "src": "9223:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9223:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9222:16:35"
            },
            "returnParameters": {
              "id": 6100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6099,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6112,
                  "src": "9260:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6098,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9260:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9259:6:35"
            },
            "scope": 6150,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6131,
            "nodeType": "FunctionDefinition",
            "src": "9426:126:35",
            "nodes": [],
            "body": {
              "id": 6130,
              "nodeType": "Block",
              "src": "9493:59:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 6120,
                            "name": "delegatedTo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6195,
                            "src": "9511:11:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 6122,
                          "indexExpression": {
                            "id": 6121,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6115,
                            "src": "9523:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9511:19:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9542:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9534:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6123,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9534:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9534:10:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9511:33:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 6128,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "9510:35:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6119,
                  "id": 6129,
                  "nodeType": "Return",
                  "src": "9503:42:35"
                }
              ]
            },
            "baseFunctions": [
              7247
            ],
            "documentation": {
              "id": 6113,
              "nodeType": "StructuredDocumentation",
              "src": "9331:90:35",
              "text": "@notice Returns 'true' if `staker` is *not* actively delegated, and 'false' otherwise."
            },
            "functionSelector": "1d3696b7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isNotDelegated",
            "nameLocation": "9435:14:35",
            "parameters": {
              "id": 6116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6115,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "9458:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6131,
                  "src": "9450:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9450:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9449:16:35"
            },
            "returnParameters": {
              "id": 6119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6118,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6131,
                  "src": "9487:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6117,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9487:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9486:6:35"
            },
            "scope": 6150,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6149,
            "nodeType": "FunctionDefinition",
            "src": "9659:142:35",
            "nodes": [],
            "body": {
              "id": 6148,
              "nodeType": "Block",
              "src": "9724:77:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 6139,
                        "name": "operatorReceiverRewardAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6191,
                        "src": "9741:29:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6141,
                      "indexExpression": {
                        "id": 6140,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6134,
                        "src": "9771:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9741:39:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 6144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9792:1:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9784:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6142,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9784:7:35",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9784:10:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9741:53:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6138,
                  "id": 6147,
                  "nodeType": "Return",
                  "src": "9734:60:35"
                }
              ]
            },
            "baseFunctions": [
              7255
            ],
            "documentation": {
              "id": 6132,
              "nodeType": "StructuredDocumentation",
              "src": "9558:96:35",
              "text": "@notice Returns if an operator can be delegated to, i.e. it has called `registerAsOperator`."
            },
            "functionSelector": "6d70f7ae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperator",
            "nameLocation": "9668:10:35",
            "parameters": {
              "id": 6135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6134,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9687:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6149,
                  "src": "9679:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9679:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9678:18:35"
            },
            "returnParameters": {
              "id": 6138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6137,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6149,
                  "src": "9718:4:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6136,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9718:4:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9717:6:35"
            },
            "scope": 6150,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5601,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38778,
              "src": "1168:13:35"
            },
            "id": 5602,
            "nodeType": "InheritanceSpecifier",
            "src": "1168:13:35"
          },
          {
            "baseName": {
              "id": 5603,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38609,
              "src": "1183:18:35"
            },
            "id": 5604,
            "nodeType": "InheritanceSpecifier",
            "src": "1183:18:35"
          },
          {
            "baseName": {
              "id": 5605,
              "name": "EigenLayrDelegationStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6211,
              "src": "1203:26:35"
            },
            "id": 5606,
            "nodeType": "InheritanceSpecifier",
            "src": "1203:26:35"
          },
          {
            "baseName": {
              "id": 5607,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12396,
              "src": "1231:8:35"
            },
            "id": 5608,
            "nodeType": "InheritanceSpecifier",
            "src": "1231:8:35"
          }
        ],
        "canonicalName": "EigenLayrDelegation",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5600,
          "nodeType": "StructuredDocumentation",
          "src": "513:622:35",
          "text": " @title The primary delegation contract for EigenLayr.\n @author Layr Labs, Inc.\n @notice  This is the contract for delegation in EigenLayr. The main functionalities of this contract are\n - enabling anyone to register as an operator in EigenLayr\n - allowing new operators to provide a another eoa address, which may mediate their interactions with stakers who delegate to them\n - enabling any staker to delegate its stake to the operator of its choice\n - enabling a staker to undelegate its assets from an operator (performed as part of the withdrawal process, initiated through the InvestmentManager)"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6150,
          12396,
          6211,
          7256,
          38609,
          39177,
          38778
        ],
        "name": "EigenLayrDelegation",
        "nameLocation": "1145:19:35",
        "scope": 6151,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 35
}