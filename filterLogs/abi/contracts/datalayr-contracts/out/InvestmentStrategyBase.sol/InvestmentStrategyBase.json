{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "_investmentManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newShares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "explanation",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_underlyingToken",
          "type": "address"
        },
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentManager",
      "outputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "sharesToUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "sharesToUnderlyingView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "underlyingToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "underlyingToSharesView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userUnderlyingView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161154338038061154383398101604081905261002f9161010a565b6001600160a01b03811660805261004461004a565b5061013a565b600054610100900460ff16156100b65760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015610108576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60006020828403121561011c57600080fd5b81516001600160a01b038116811461013357600080fd5b9392505050565b6080516113d961016a600039600081816101ad015281816104e3015281816107e801526108b301526113d96000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637a8b2637116100ad578063ce7c2ac211610071578063ce7c2ac214610280578063d9caed1214610293578063e3dae51c146102a6578063f3e73875146102b9578063fabc1cbc146102cc57600080fd5b80637a8b263714610219578063886f11951461022c5780638c871019146102455780638f6a624014610258578063ab5921e11461026b57600080fd5b8063485cc955116100f4578063485cc955146101955780634b31bb10146101a8578063553ca5f8146101cf5780635ac86ab7146101e25780635c975abb1461021157600080fd5b8063136439dd146101265780632495a5991461013b5780633a98ef391461016b57806347e7ef2414610182575b600080fd5b61013961013436600461108c565b6102df565b005b60025461014e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61017460035481565b604051908152602001610162565b6101746101903660046110bd565b610483565b6101396101a33660046110e9565b610611565b61014e7f000000000000000000000000000000000000000000000000000000000000000081565b6101746101dd366004611122565b610742565b6102016101f036600461113f565b6001805460ff9092161b9081161490565b6040519015158152602001610162565b600154610174565b61017461022736600461108c565b610756565b60005461014e906201000090046001600160a01b031681565b61017461025336600461108c565b610787565b610174610266366004611122565b610792565b6102736107a0565b6040516101629190611192565b61017461028e366004611122565b6107c0565b6101396102a13660046111c5565b610855565b6101746102b436600461108c565b610a82565b6101746102c736600461108c565b610ac8565b6101396102da36600461108c565b610ad3565b600060029054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190611206565b6001600160a01b0316336001600160a01b0316146103cc5760405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b60648201526084015b60405180910390fd5b600154818116146104455760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016103c3565b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b600180546000918291811614156104d85760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016103c3565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105205760405162461bcd60e51b81526004016103c390611223565b6002546001600160a01b038581169116146105a5576040805162461bcd60e51b81526020600482015260248101919091527f496e766573746d656e745374726174656779426173652e6465706f7369743a2060448201527f43616e206f6e6c79206465706f73697420756e6465726c79696e67546f6b656e60648201526084016103c3565b6000836105b0610c72565b6105ba9190611285565b90508015806105c95750600354155b156105d6578392506105f2565b80600354856105e5919061129c565b6105ef91906112bb565b92505b826003600082825461060491906112dd565b9091555050505092915050565b600054610100900460ff16158080156106315750600054600160ff909116105b8061064b5750303b15801561064b575060005460ff166001145b6106ae5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103c3565b6000805460ff1916600117905580156106d1576000805461ff0019166101001790555b600280546001600160a01b0319166001600160a01b0385161790556106f7826000610ce4565b801561073d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6000610750610227836107c0565b92915050565b600060035460001415610767575090565b60035482610773610c72565b61077d919061129c565b61075091906112bb565b600061075082610a82565b60006107506102c7836107c0565b606060405180608001604052806057815260200161134d60579139905090565b604051636be2343f60e01b81526001600160a01b0382811660048301523060248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690636be2343f90604401602060405180830381865afa158015610831573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075091906112f5565b60018054600290811614156108a85760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016103c3565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108f05760405162461bcd60e51b81526004016103c390611223565b6002546001600160a01b038481169116146109815760405162461bcd60e51b815260206004820152604560248201527f496e766573746d656e745374726174656779426173652e77697468647261773a60448201527f2043616e206f6e6c7920776974686472617720746865207374726174656779206064820152643a37b5b2b760d91b608482015260a4016103c3565b600354821115610a1f5760405162461bcd60e51b815260206004820152605760248201527f496e766573746d656e745374726174656779426173652e77697468647261773a60448201527f20616d6f756e74536861726573206d757374206265206c657373207468616e2060648201527f6f7220657175616c20746f20746f74616c536861726573000000000000000000608482015260a4016103c3565b60038054838103909155600083821415610a4257610a3b610c72565b9050610a63565b8184610a4c610c72565b610a56919061129c565b610a6091906112bb565b90505b600254610a7a906001600160a01b03168783610df2565b505050505050565b600080610a8d610c72565b9050801580610a9c5750600354155b15610aa8575090919050565b8060035484610ab7919061129c565b610ac191906112bb565b9392505050565b600061075082610756565b600060029054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a9190611206565b6001600160a01b0316336001600160a01b031614610bbd5760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b60648201526084016103c3565b600154198119600154191614610c3b5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016103c3565b600181905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610478565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf91906112f5565b905090565b6000546201000090046001600160a01b0316158015610d0b57506001600160a01b03821615155b610d8d5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016103c3565b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261073d92869291600091610e82918516908490610eff565b80519091501561073d5780806020019051810190610ea0919061130e565b61073d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103c3565b6060610f0e8484600085610f16565b949350505050565b606082471015610f775760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103c3565b600080866001600160a01b03168587604051610f939190611330565b60006040518083038185875af1925050503d8060008114610fd0576040519150601f19603f3d011682016040523d82523d6000602084013e610fd5565b606091505b5091509150610fe687838387610ff1565b979650505050505050565b6060831561105d578251611056576001600160a01b0385163b6110565760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c3565b5081610f0e565b610f0e83838151156110725781518083602001fd5b8060405162461bcd60e51b81526004016103c39190611192565b60006020828403121561109e57600080fd5b5035919050565b6001600160a01b03811681146110ba57600080fd5b50565b600080604083850312156110d057600080fd5b82356110db816110a5565b946020939093013593505050565b600080604083850312156110fc57600080fd5b8235611107816110a5565b91506020830135611117816110a5565b809150509250929050565b60006020828403121561113457600080fd5b8135610ac1816110a5565b60006020828403121561115157600080fd5b813560ff81168114610ac157600080fd5b60005b8381101561117d578181015183820152602001611165565b8381111561118c576000848401525b50505050565b60208152600082518060208401526111b1816040850160208701611162565b601f01601f19169190910160400192915050565b6000806000606084860312156111da57600080fd5b83356111e5816110a5565b925060208401356111f5816110a5565b929592945050506040919091013590565b60006020828403121561121857600080fd5b8151610ac1816110a5565b6020808252602c908201527f496e766573746d656e745374726174656779426173652e6f6e6c79496e76657360408201526b3a36b2b73a26b0b730b3b2b960a11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156112975761129761126f565b500390565b60008160001904831182151516156112b6576112b661126f565b500290565b6000826112d857634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156112f0576112f061126f565b500190565b60006020828403121561130757600080fd5b5051919050565b60006020828403121561132057600080fd5b81518015158114610ac157600080fd5b60008251611342818460208701611162565b919091019291505056fe4261736520496e766573746d656e74537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73a264697066735822122032098095d321224b4be7e87000dcb60c7379c0ab18534ed85e6c8bb8bfcd628a64736f6c634300080c0033",
    "sourceMap": "836:9194:61:-:0;;;1839:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1900:38:61;;;;1948:22;:20;:22::i;:::-;1839:138;836:9194;;5928:279:82;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:82;;538:2:128;5987:66:82;;;520:21:128;577:2;557:18;;;550:30;616:34;596:18;;;589:62;-1:-1:-1;;;667:18:128;;;660:37;714:19;;5987:66:82;;;;;;;;6067:12;;6082:15;6067:12;;;:30;6063:138;;;6113:12;:30;;-1:-1:-1;;6113:30:82;6128:15;6113:30;;;;;;6162:28;;886:36:128;;;6162:28:82;;874:2:128;859:18;6162:28:82;;;;;;;6063:138;5928:279::o;14:317:128:-;111:6;164:2;152:9;143:7;139:23;135:32;132:52;;;180:1;177;170:12;132:52;206:16;;-1:-1:-1;;;;;251:31:128;;241:42;;231:70;;297:1;294;287:12;231:70;320:5;14:317;-1:-1:-1;;;14:317:128:o;744:184::-;836:9194:61;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "836:9194:61:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:392:59;;;;;;:::i;:::-;;:::i;:::-;;1248:29:61;;;;;-1:-1:-1;;;;;1248:29:61;;;;;;-1:-1:-1;;;;;379:32:128;;;361:51;;349:2;334:18;1248:29:61;;;;;;;;1361:26;;;;;;;;;569:25:128;;;557:2;542:18;1361:26:61;423:177:128;2807:938:61;;;;;;:::i;:::-;;:::i;2065:205::-;;;;;;:::i;:::-;;:::i;1113:53::-;;;;;8871:142;;;;;;:::i;:::-;;:::i;4796:149:59:-;;;;;;:::i;:::-;4885:1;4914:7;;4885:10;;;;;4914:14;;;4913:24;;4796:149;;;;2476:14:128;;2469:22;2451:41;;2439:2;2424:18;4796:149:59;2311:187:128;4608:87:59;4681:7;;4608:87;;6341:267:61;;;;;;:::i;:::-;;:::i;906:37:59:-;;;;;;;;-1:-1:-1;;;;;906:37:59;;;8477:158:61;;;;;;:::i;:::-;;:::i;9252:129::-;;;;;;:::i;:::-;;:::i;5700:191::-;;;:::i;:::-;;;;;;;:::i;9557:::-;;;;;;:::i;:::-;;:::i;4220:1272::-;;;;;;:::i;:::-;;:::i;7678:336::-;;;;;;:::i;:::-;;:::i;7061:157::-;;;;;;:::i;:::-;;:::i;4135:403:59:-;;;;;;:::i;:::-;;:::i;3259:392::-;1557:14;;;;;;;;;-1:-1:-1;;;;;1557:14:59;-1:-1:-1;;;;;1557:21:59;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1543:37:59;:10;-1:-1:-1;;;;;1543:37:59;;1535:90;;;;-1:-1:-1;;;1535:90:59;;4345:2:128;1535:90:59;;;4327:21:128;4384:2;4364:18;;;4357:30;4423:34;4403:18;;;4396:62;-1:-1:-1;;;4474:18:128;;;4467:38;4522:19;;1535:90:59;;;;;;;;;3491:7:::1;::::0;3461:25;;::::1;3460:38;3452:107;;;::::0;-1:-1:-1;;;3452:107:59;;4754:2:128;3452:107:59::1;::::0;::::1;4736:21:128::0;4793:2;4773:18;;;4766:30;4832:34;4812:18;;;4805:62;4903:26;4883:18;;;4876:54;4947:19;;3452:107:59::1;4552:420:128::0;3452:107:59::1;3569:7;:25:::0;;;3609:35:::1;::::0;569:25:128;;;3616:10:59::1;::::0;3609:35:::1;::::0;557:2:128;542:18;3609:35:59::1;;;;;;;;3259:392:::0;:::o;2807:938:61:-;4885:1:59;4914:7;;2994:17:61;;;;4914:14:59;;4913:24;2187:14;2179:52;;;;-1:-1:-1;;;2179:52:59;;5179:2:128;2179:52:59;;;5161:21:128;5218:2;5198:18;;;5191:30;-1:-1:-1;;;5237:18:128;;;5230:55;5302:18;;2179:52:59;4977:349:128;2179:52:59;1579:10:61::1;-1:-1:-1::0;;;;;1601:17:61::1;1579:40;;1571:97;;;;-1:-1:-1::0;;;1571:97:61::1;;;;;;;:::i;:::-;3044:15:::2;::::0;-1:-1:-1;;;;;3035:24:61;;::::2;3044:15:::0;::::2;3035:24;3027:101;;;::::0;;-1:-1:-1;;;3027:101:61;;5946:2:128;3027:101:61::2;::::0;::::2;5928:21:128::0;5965:18;;;5958:30;;;;6024:34;6004:18;;;5997:62;6095:34;6075:18;;;6068:62;6147:19;;3027:101:61::2;5744:428:128::0;3027:101:61::2;3440:25;3486:6;3468:15;:13;:15::i;:::-;:24;;;;:::i;:::-;3440:52:::0;-1:-1:-1;3506:22:61;;;:42:::2;;-1:-1:-1::0;3532:11:61::2;::::0;:16;3506:42:::2;3502:176;;;3576:6;3564:18;;3502:176;;;3650:17;3635:11;;3626:6;:20;;;;:::i;:::-;3625:42;;;;:::i;:::-;3613:54;;3502:176;3703:9;3688:11;;:24;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;2807:938:61;;;;;:::o;2065:205::-;3268:19:82;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:82;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:82;1476:19:84;:23;;;3376:66:82;;-1:-1:-1;3425:12:82;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:82;;7169:2:128;3314:201:82;;;7151:21:128;7208:2;7188:18;;;7181:30;7247:34;7227:18;;;7220:62;-1:-1:-1;;;7298:18:128;;;7291:44;7352:19;;3314:201:82;6967:410:128;3314:201:82;3525:12;:16;;-1:-1:-1;;3525:16:82;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:82;;;;;3551:65;2172:15:61::1;:34:::0;;-1:-1:-1;;;;;;2172:34:61::1;-1:-1:-1::0;;;;;2172:34:61;::::1;;::::0;;2216:47:::1;2234:15:::0;-1:-1:-1;2216:17:61::1;:47::i;:::-;3640:14:82::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:82;;;3710:14;;-1:-1:-1;7534:36:128;;3710:14:82;;7522:2:128;7507:18;3710:14:82;;;;;;;3636:99;3258:483;2065:205:61;;:::o;8871:142::-;8944:7;8970:36;8993:12;9000:4;8993:6;:12::i;8970:36::-;8963:43;8871:142;-1:-1:-1;;8871:142:61:o;6341:267::-;6433:7;6456:11;;6471:1;6456:16;6452:150;;;-1:-1:-1;6495:12:61;6341:267::o;6452:150::-;6580:11;;6564:12;6546:15;:13;:15::i;:::-;:30;;;;:::i;:::-;6545:46;;;;:::i;8477:158::-;8562:7;8588:40;8611:16;8588:22;:40::i;9252:129::-;9316:7;9342:32;9361:12;9368:4;9361:6;:12::i;5700:191::-;5763:13;5788:96;;;;;;;;;;;;;;;;;;;5700:191;:::o;9557:::-;9642:99;;-1:-1:-1;;;9642:99:61;;-1:-1:-1;;;;;7839:15:128;;;9642:99:61;;;7821:34:128;9734:4:61;7871:18:128;;;7864:43;9616:7:61;;9661:17;9642:57;;;;;;7756:18:128;;9642:99:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4220:1272::-;1049:1;4914:7:59;;4885:10;4914:14;;;4913:24;2187:14;2179:52;;;;-1:-1:-1;;;2179:52:59;;5179:2:128;2179:52:59;;;5161:21:128;5218:2;5198:18;;;5191:30;-1:-1:-1;;;5237:18:128;;;5230:55;5302:18;;2179:52:59;4977:349:128;2179:52:59;1579:10:61::1;-1:-1:-1::0;;;;;1601:17:61::1;1579:40;;1571:97;;;;-1:-1:-1::0;;;1571:97:61::1;;;;;;;:::i;:::-;4450:15:::2;::::0;-1:-1:-1;;;;;4441:24:61;;::::2;4450:15:::0;::::2;4441:24;4433:106;;;::::0;-1:-1:-1;;;4433:106:61;;8309:2:128;4433:106:61::2;::::0;::::2;8291:21:128::0;8348:2;8328:18;;;8321:30;8387:34;8367:18;;;8360:62;8458:34;8438:18;;;8431:62;-1:-1:-1;;;8509:19:128;;;8502:36;8555:19;;4433:106:61::2;8107:473:128::0;4433:106:61::2;4586:11;;4570:12;:27;;4549:161;;;::::0;-1:-1:-1;;;4549:161:61;;8787:2:128;4549:161:61::2;::::0;::::2;8769:21:128::0;8826:2;8806:18;;;8799:30;8865:34;8845:18;;;8838:62;8936:34;8916:18;;;8909:62;9008:25;8987:19;;;8980:54;9051:19;;4549:161:61::2;8585:491:128::0;4549:161:61::2;4801:11;::::0;;4958:27;;::::2;::::0;;;4774:24:::2;5237:32:::0;;::::2;5233:190;;;5300:15;:13;:15::i;:::-;5285:30;;5233:190;;;5396:16;5380:12;5362:15;:13;:15::i;:::-;:30;;;;:::i;:::-;5361:51;;;;:::i;:::-;5346:66;;5233:190;5432:15;::::0;:53:::2;::::0;-1:-1:-1;;;;;5432:15:61::2;5461:9:::0;5472:12;5432:28:::2;:53::i;:::-;4423:1069;;4220:1272:::0;;;;:::o;7678:336::-;7765:7;7784:20;7807:15;:13;:15::i;:::-;7784:38;-1:-1:-1;7836:17:61;;;:37;;-1:-1:-1;7857:11:61;;:16;7836:37;7832:176;;;-1:-1:-1;7896:16:61;;7678:336;-1:-1:-1;7678:336:61:o;7832:176::-;7985:12;7970:11;;7951:16;:30;;;;:::i;:::-;7950:47;;;;:::i;:::-;7943:54;7678:336;-1:-1:-1;;;7678:336:61:o;7061:157::-;7149:7;7175:36;7198:12;7175:22;:36::i;4135:403:59:-;1705:14;;;;;;;;;-1:-1:-1;;;;;1705:14:59;-1:-1:-1;;;;;1705:23:59;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1691:39:59;:10;-1:-1:-1;;;;;1691:39:59;;1683:94;;;;-1:-1:-1;;;1683:94:59;;9283:2:128;1683:94:59;;;9265:21:128;9322:2;9302:18;;;9295:30;9361:34;9341:18;;;9334:62;-1:-1:-1;;;9412:18:128;;;9405:40;9462:19;;1683:94:59;9081:406:128;1683:94:59;4375:7:::1;;4374:8;4352:15;4351:16;4339:7;;4338:8;4337:31;4336:47;4328:116;;;::::0;-1:-1:-1;;;4328:116:59;;9694:2:128;4328:116:59::1;::::0;::::1;9676:21:128::0;9733:2;9713:18;;;9706:30;9772:34;9752:18;;;9745:62;9843:26;9823:18;;;9816:54;9887:19;;4328:116:59::1;9492:420:128::0;4328:116:59::1;4454:7;:25:::0;;;4494:37:::1;::::0;569:25:128;;;4503:10:59::1;::::0;4494:37:::1;::::0;557:2:128;542:18;4494:37:59::1;423:177:128::0;9899:129:61;9981:15;;:40;;-1:-1:-1;;;9981:40:61;;10015:4;9981:40;;;361:51:128;9955:7:61;;-1:-1:-1;;;;;9981:15:61;;:25;;334:18:128;;9981:40:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9974:47;;9899:129;:::o;2363:438:59:-;2524:1;2497:14;;;;-1:-1:-1;;;;;2497:14:59;2489:37;:79;;;;-1:-1:-1;;;;;;2530:38:59;;;;2489:79;2468:197;;;;-1:-1:-1;;;2468:197:59;;10327:2:128;2468:197:59;;;10309:21:128;10366:2;10346:18;;;10339:30;10405:34;10385:18;;;10378:62;10476:34;10456:18;;;10449:62;-1:-1:-1;;;10527:19:128;;;10520:38;10575:19;;2468:197:59;10125:475:128;2468:197:59;2675:7;:26;;;2716:36;;569:25:128;;;2723:10:59;;2716:36;;557:2:128;542:18;2716:36:59;;;;;;;-1:-1:-1;2762:14:59;:32;;-1:-1:-1;;;;;2762:32:59;;;;;-1:-1:-1;;;;;;2762:32:59;;;;;;;;;2363:438::o;763:205:102:-;902:58;;;-1:-1:-1;;;;;10797:32:128;;;902:58:102;;;10779:51:128;10846:18;;;;10839:34;;;902:58:102;;;;;;;;;;10752:18:128;;;;902:58:102;;;;;;;;-1:-1:-1;;;;;902:58:102;-1:-1:-1;;;902:58:102;;;4192:69;;;;;;;;;;;;;;;;875:86;;895:5;;902:58;-1:-1:-1;;4192:69:102;;:27;;;902:58;;4192:27;:69::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:102;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:102;;11368:2:128;4351:85:102;;;11350:21:128;11407:2;11387:18;;;11380:30;11446:34;11426:18;;;11419:62;-1:-1:-1;;;11497:18:128;;;11490:40;11547:19;;4351:85:102;11166:406:128;3873:223:103;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:103:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:103;;11779:2:128;5149:81:103;;;11761:21:128;11818:2;11798:18;;;11791:30;11857:34;11837:18;;;11830:62;-1:-1:-1;;;11908:18:128;;;11901:36;11954:19;;5149:81:103;11577:402:128;5149:81:103;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:103;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:103:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:17;;7697:286;;-1:-1:-1;;;;;1476:19:84;;;7908:60:103;;;;-1:-1:-1;;;7908:60:103;;12465:2:128;7908:60:103;;;12447:21:128;12504:2;12484:18;;;12477:30;12543:31;12523:18;;;12516:59;12592:18;;7908:60:103;12263:353:128;7908:60:103;-1:-1:-1;8003:10:103;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:103;;;;;;;;:::i;14:180:128:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:128;;14:180;-1:-1:-1;14:180:128:o;605:139::-;-1:-1:-1;;;;;688:31:128;;678:42;;668:70;;734:1;731;724:12;668:70;605:139;:::o;749:339::-;833:6;841;894:2;882:9;873:7;869:23;865:32;862:52;;;910:1;907;900:12;862:52;949:9;936:23;968:39;1001:5;968:39;:::i;:::-;1026:5;1078:2;1063:18;;;;1050:32;;-1:-1:-1;;;749:339:128:o;1093:444::-;1201:6;1209;1262:2;1250:9;1241:7;1237:23;1233:32;1230:52;;;1278:1;1275;1268:12;1230:52;1317:9;1304:23;1336:39;1369:5;1336:39;:::i;:::-;1394:5;-1:-1:-1;1451:2:128;1436:18;;1423:32;1464:41;1423:32;1464:41;:::i;:::-;1524:7;1514:17;;;1093:444;;;;;:::o;1777:255::-;1836:6;1889:2;1877:9;1868:7;1864:23;1860:32;1857:52;;;1905:1;1902;1895:12;1857:52;1944:9;1931:23;1963:39;1996:5;1963:39;:::i;2037:269::-;2094:6;2147:2;2135:9;2126:7;2122:23;2118:32;2115:52;;;2163:1;2160;2153:12;2115:52;2202:9;2189:23;2252:4;2245:5;2241:16;2234:5;2231:27;2221:55;;2272:1;2269;2262:12;2735:258;2807:1;2817:113;2831:6;2828:1;2825:13;2817:113;;;2907:11;;;2901:18;2888:11;;;2881:39;2853:2;2846:10;2817:113;;;2948:6;2945:1;2942:13;2939:48;;;2983:1;2974:6;2969:3;2965:16;2958:27;2939:48;;2735:258;;;:::o;2998:383::-;3147:2;3136:9;3129:21;3110:4;3179:6;3173:13;3222:6;3217:2;3206:9;3202:18;3195:34;3238:66;3297:6;3292:2;3281:9;3277:18;3272:2;3264:6;3260:15;3238:66;:::i;:::-;3365:2;3344:15;-1:-1:-1;;3340:29:128;3325:45;;;;3372:2;3321:54;;2998:383;-1:-1:-1;;2998:383:128:o;3386:488::-;3479:6;3487;3495;3548:2;3536:9;3527:7;3523:23;3519:32;3516:52;;;3564:1;3561;3554:12;3516:52;3603:9;3590:23;3622:39;3655:5;3622:39;:::i;:::-;3680:5;-1:-1:-1;3737:2:128;3722:18;;3709:32;3750:41;3709:32;3750:41;:::i;:::-;3386:488;;3810:7;;-1:-1:-1;;;3864:2:128;3849:18;;;;3836:32;;3386:488::o;3879:259::-;3949:6;4002:2;3990:9;3981:7;3977:23;3973:32;3970:52;;;4018:1;4015;4008:12;3970:52;4050:9;4044:16;4069:39;4102:5;4069:39;:::i;5331:408::-;5533:2;5515:21;;;5572:2;5552:18;;;5545:30;5611:34;5606:2;5591:18;;5584:62;-1:-1:-1;;;5677:2:128;5662:18;;5655:42;5729:3;5714:19;;5331:408::o;6177:127::-;6238:10;6233:3;6229:20;6226:1;6219:31;6269:4;6266:1;6259:15;6293:4;6290:1;6283:15;6309:125;6349:4;6377:1;6374;6371:8;6368:34;;;6382:18;;:::i;:::-;-1:-1:-1;6419:9:128;;6309:125::o;6439:168::-;6479:7;6545:1;6541;6537:6;6533:14;6530:1;6527:21;6522:1;6515:9;6508:17;6504:45;6501:71;;;6552:18;;:::i;:::-;-1:-1:-1;6592:9:128;;6439:168::o;6612:217::-;6652:1;6678;6668:132;;6722:10;6717:3;6713:20;6710:1;6703:31;6757:4;6754:1;6747:15;6785:4;6782:1;6775:15;6668:132;-1:-1:-1;6814:9:128;;6612:217::o;6834:128::-;6874:3;6905:1;6901:6;6898:1;6895:13;6892:39;;;6911:18;;:::i;:::-;-1:-1:-1;6947:9:128;;6834:128::o;7918:184::-;7988:6;8041:2;8029:9;8020:7;8016:23;8012:32;8009:52;;;8057:1;8054;8047:12;8009:52;-1:-1:-1;8080:16:128;;7918:184;-1:-1:-1;7918:184:128:o;10884:277::-;10951:6;11004:2;10992:9;10983:7;10979:23;10975:32;10972:52;;;11020:1;11017;11010:12;10972:52;11052:9;11046:16;11105:5;11098:13;11091:21;11084:5;11081:32;11071:60;;11127:1;11124;11117:12;11984:274;12113:3;12151:6;12145:13;12167:53;12213:6;12208:3;12201:4;12193:6;12189:17;12167:53;:::i;:::-;12236:16;;;;;11984:274;-1:-1:-1;;11984:274:128:o",
    "linkReferences": {},
    "immutableReferences": {
      "12565": [
        {
          "start": 429,
          "length": 32
        },
        {
          "start": 1251,
          "length": 32
        },
        {
          "start": 2024,
          "length": 32
        },
        {
          "start": 2227,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "deposit(address,uint256)": "47e7ef24",
    "explanation()": "ab5921e1",
    "initialize(address,address)": "485cc955",
    "investmentManager()": "4b31bb10",
    "pause(uint256)": "136439dd",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "shares(address)": "ce7c2ac2",
    "sharesToUnderlying(uint256)": "f3e73875",
    "sharesToUnderlyingView(uint256)": "7a8b2637",
    "totalShares()": "3a98ef39",
    "underlyingToShares(uint256)": "8c871019",
    "underlyingToSharesView(uint256)": "e3dae51c",
    "underlyingToken()": "2495a599",
    "unpause(uint256)": "fabc1cbc",
    "userUnderlying(address)": "8f6a6240",
    "userUnderlyingView(address)": "553ca5f8",
    "withdraw(address,address,uint256)": "d9caed12"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"_investmentManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"explanation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_underlyingToken\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentManager\",\"outputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToSharesView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"details\":\"This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's `depositIntoStrategy` function, and individual share balances are recorded in the investmentManager as well.\",\"params\":{\"amount\":\"is the amount of token being deposited\",\"token\":\"is the ERC20 token being deposited\"},\"returns\":{\"newShares\":\"is the number of new shares issued at the current exchange ratio.\"}},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"sharesToUnderlying(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"}},\"sharesToUnderlyingView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"}},\"underlyingToShares(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"}},\"underlyingToSharesView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"withdraw(address,address,uint256)\":{\"details\":\"This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's other functions, and individual share balances are recorded in the investmentManager as well.\",\"params\":{\"amountShares\":\"is the amount of shares being withdrawn\",\"token\":\"is the ERC20 token being transferred out\"}}},\"title\":\"Base implementation of `IInvestmentStrategy` interface, designed to be inherited from by more complex strategies.\",\"version\":1},\"userdoc\":{\"events\":{\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Since this contract is designed to be initializable, the constructor simply sets `investmentManager`, the only immutable variable.\"},\"deposit(address,uint256)\":{\"notice\":\"Used to deposit tokens into this InvestmentStrategy\"},\"explanation()\":{\"notice\":\"Currently returns a brief string explaining the strategy's goal & purpose, but for more complex strategies, may be a link to metadata that explains in more detail.\"},\"initialize(address,address)\":{\"notice\":\"Sets the `underlyingToken` and `pauserRegistry` for the strategy.\"},\"investmentManager()\":{\"notice\":\"EigenLayer's InvestmentManager contract\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"shares(address)\":{\"notice\":\"convenience function for fetching the current total shares of `user` in this strategy, by querying the `investmentManager` contract\"},\"sharesToUnderlying(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\"},\"sharesToUnderlyingView(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications\"},\"totalShares()\":{\"notice\":\"The total number of extant shares in thie InvestmentStrategy\"},\"underlyingToShares(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications\"},\"underlyingToSharesView(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications\"},\"underlyingToken()\":{\"notice\":\"The underyling token for shares in this InvestmentStrategy\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract.\"},\"userUnderlying(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications\"},\"userUnderlyingView(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Used to withdraw tokens from this InvestmentStrategy, to the `depositor`'s address\"}},\"notice\":\"Simple, basic, \\\"do-nothing\\\" InvestmentStrategy that holds a single underlying token and returns it on withdrawals. Implements minimal versions of the IInvestmentStrategy functions, this contract is designed to be inherited by more complex investment strategies, which can then override its functions as necessary.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/strategies/InvestmentStrategyBase.sol\":\"InvestmentStrategyBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer/=../eignlayr-contracts/src/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/eignlayr-contracts/lib/ds-test/src/\",\":eignlayr-contracts/=lib/eignlayr-contracts/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/eignlayr-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/eignlayr-contracts/lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IEigenLayrDelegation.sol\":{\"keccak256\":\"0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21\",\"dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IInvestmentManager.sol\":{\"keccak256\":\"0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34\",\"dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IInvestmentStrategy.sol\":{\"keccak256\":\"0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52\",\"dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c\",\"dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IServiceManager.sol\":{\"keccak256\":\"0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2\",\"dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32\",\"dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr\"]},\"/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/strategies/InvestmentStrategyBase.sol\":{\"keccak256\":\"0x12588adda1d1f38acc67e9ea4f20daa144a20e44c4f596e432cd335a837776e8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6a2707c597834660d841b49b4e74fd5a492dbd61fe98308389fc4034f569569c\",\"dweb:/ipfs/QmU8miWd1mr5UWrDwhzHoXYmxjnR7shwuJiPgxMhtMd35H\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "_investmentManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newShares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "explanation",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_underlyingToken",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "investmentManager",
          "outputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "shares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToSharesView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "userUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(address,uint256)": {
            "details": "This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's `depositIntoStrategy` function, and individual share balances are recorded in the investmentManager as well.",
            "params": {
              "amount": "is the amount of token being deposited",
              "token": "is the ERC20 token being deposited"
            },
            "returns": {
              "newShares": "is the number of new shares issued at the current exchange ratio."
            }
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "sharesToUnderlying(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            }
          },
          "sharesToUnderlyingView(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            }
          },
          "underlyingToShares(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            }
          },
          "underlyingToSharesView(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "withdraw(address,address,uint256)": {
            "details": "This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's other functions, and individual share balances are recorded in the investmentManager as well.",
            "params": {
              "amountShares": "is the amount of shares being withdrawn",
              "token": "is the ERC20 token being transferred out"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Since this contract is designed to be initializable, the constructor simply sets `investmentManager`, the only immutable variable."
          },
          "deposit(address,uint256)": {
            "notice": "Used to deposit tokens into this InvestmentStrategy"
          },
          "explanation()": {
            "notice": "Currently returns a brief string explaining the strategy's goal & purpose, but for more complex strategies, may be a link to metadata that explains in more detail."
          },
          "initialize(address,address)": {
            "notice": "Sets the `underlyingToken` and `pauserRegistry` for the strategy."
          },
          "investmentManager()": {
            "notice": "EigenLayer's InvestmentManager contract"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "shares(address)": {
            "notice": "convenience function for fetching the current total shares of `user` in this strategy, by querying the `investmentManager` contract"
          },
          "sharesToUnderlying(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications"
          },
          "sharesToUnderlyingView(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications"
          },
          "totalShares()": {
            "notice": "The total number of extant shares in thie InvestmentStrategy"
          },
          "underlyingToShares(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications"
          },
          "underlyingToSharesView(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications"
          },
          "underlyingToken()": {
            "notice": "The underyling token for shares in this InvestmentStrategy"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract."
          },
          "userUnderlying(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
          },
          "userUnderlyingView(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
          },
          "withdraw(address,address,uint256)": {
            "notice": "Used to withdraw tokens from this InvestmentStrategy, to the `depositor`'s address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@eigenlayer/=../eignlayr-contracts/src/",
        ":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/eignlayr-contracts/lib/ds-test/src/",
        ":eignlayr-contracts/=lib/eignlayr-contracts/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/eignlayr-contracts/lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/eignlayr-contracts/lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/strategies/InvestmentStrategyBase.sol": "InvestmentStrategyBase"
      },
      "libraries": {}
    },
    "sources": {
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IEigenLayrDelegation.sol": {
        "keccak256": "0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e",
        "urls": [
          "bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21",
          "dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IInvestmentManager.sol": {
        "keccak256": "0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100",
        "urls": [
          "bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34",
          "dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IInvestmentStrategy.sol": {
        "keccak256": "0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb",
        "urls": [
          "bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52",
          "dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975",
        "urls": [
          "bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c",
          "dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IServiceManager.sol": {
        "keccak256": "0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4",
        "urls": [
          "bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2",
          "dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04",
        "urls": [
          "bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32",
          "dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr"
        ],
        "license": "UNLICENSED"
      },
      "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/strategies/InvestmentStrategyBase.sol": {
        "keccak256": "0x12588adda1d1f38acc67e9ea4f20daa144a20e44c4f596e432cd335a837776e8",
        "urls": [
          "bzz-raw://6a2707c597834660d841b49b4e74fd5a492dbd61fe98308389fc4034f569569c",
          "dweb:/ipfs/QmU8miWd1mr5UWrDwhzHoXYmxjnR7shwuJiPgxMhtMd35H"
        ],
        "license": "UNLICENSED"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/strategies/InvestmentStrategyBase.sol",
    "id": 12925,
    "exportedSymbols": {
      "Address": [
        41608
      ],
      "AddressUpgradeable": [
        39135
      ],
      "IERC20": [
        40863
      ],
      "IERC20Permit": [
        40968
      ],
      "IEigenLayrDelegation": [
        7256
      ],
      "IInvestmentManager": [
        7364
      ],
      "IInvestmentStrategy": [
        7458
      ],
      "IPauserRegistry": [
        7474
      ],
      "IServiceManager": [
        7740
      ],
      "Initializable": [
        38778
      ],
      "InvestmentStrategyBase": [
        12924
      ],
      "Pausable": [
        12396
      ],
      "SafeERC20": [
        41278
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9992:61",
    "nodes": [
      {
        "id": 12539,
        "nodeType": "PragmaDirective",
        "src": "39:23:61",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 12540,
        "nodeType": "ImportDirective",
        "src": "64:46:61",
        "nodes": [],
        "absolutePath": "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/interfaces/IInvestmentManager.sol",
        "file": "../interfaces/IInvestmentManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12925,
        "sourceUnit": 7365,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12541,
        "nodeType": "ImportDirective",
        "src": "111:37:61",
        "nodes": [],
        "absolutePath": "/Users/dl00038ml/PKG/projects/blockChain/e_Tools/rde/mantle/datalayr/contracts/eignlayr-contracts/src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12925,
        "sourceUnit": 12397,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12542,
        "nodeType": "ImportDirective",
        "src": "149:56:61",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12925,
        "sourceUnit": 40864,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12543,
        "nodeType": "ImportDirective",
        "src": "206:65:61",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12925,
        "sourceUnit": 41279,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12544,
        "nodeType": "ImportDirective",
        "src": "272:72:61",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 12925,
        "sourceUnit": 38779,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 12924,
        "nodeType": "ContractDefinition",
        "src": "836:9194:61",
        "nodes": [
          {
            "id": 12555,
            "nodeType": "UsingForDirective",
            "src": "922:27:61",
            "nodes": [],
            "libraryName": {
              "id": 12552,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41278,
              "src": "928:9:61"
            },
            "typeName": {
              "id": 12554,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12553,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40863,
                "src": "942:6:61"
              },
              "referencedDeclaration": 40863,
              "src": "942:6:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$40863",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 12558,
            "nodeType": "VariableDeclaration",
            "src": "955:43:61",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_DEPOSITS",
            "nameLocation": "979:15:61",
            "scope": 12924,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 12556,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "955:5:61",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 12557,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "997:1:61",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 12561,
            "nodeType": "VariableDeclaration",
            "src": "1004:46:61",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_WITHDRAWALS",
            "nameLocation": "1028:18:61",
            "scope": 12924,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 12559,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1004:5:61",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 12560,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1049:1:61",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 12565,
            "nodeType": "VariableDeclaration",
            "src": "1113:53:61",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 12562,
              "nodeType": "StructuredDocumentation",
              "src": "1057:51:61",
              "text": "@notice EigenLayer's InvestmentManager contract"
            },
            "functionSelector": "4b31bb10",
            "mutability": "immutable",
            "name": "investmentManager",
            "nameLocation": "1149:17:61",
            "scope": 12924,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
              "typeString": "contract IInvestmentManager"
            },
            "typeName": {
              "id": 12564,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12563,
                "name": "IInvestmentManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7364,
                "src": "1113:18:61"
              },
              "referencedDeclaration": 7364,
              "src": "1113:18:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                "typeString": "contract IInvestmentManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12569,
            "nodeType": "VariableDeclaration",
            "src": "1248:29:61",
            "nodes": [],
            "baseFunctions": [
              7445
            ],
            "constant": false,
            "documentation": {
              "id": 12566,
              "nodeType": "StructuredDocumentation",
              "src": "1173:70:61",
              "text": "@notice The underyling token for shares in this InvestmentStrategy"
            },
            "functionSelector": "2495a599",
            "mutability": "mutable",
            "name": "underlyingToken",
            "nameLocation": "1262:15:61",
            "scope": 12924,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$40863",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 12568,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12567,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40863,
                "src": "1248:6:61"
              },
              "referencedDeclaration": 40863,
              "src": "1248:6:61",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$40863",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12572,
            "nodeType": "VariableDeclaration",
            "src": "1361:26:61",
            "nodes": [],
            "baseFunctions": [
              7451
            ],
            "constant": false,
            "documentation": {
              "id": 12570,
              "nodeType": "StructuredDocumentation",
              "src": "1284:72:61",
              "text": "@notice The total number of extant shares in thie InvestmentStrategy"
            },
            "functionSelector": "3a98ef39",
            "mutability": "mutable",
            "name": "totalShares",
            "nameLocation": "1376:11:61",
            "scope": 12924,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12571,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1361:7:61",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 12588,
            "nodeType": "ModifierDefinition",
            "src": "1528:158:61",
            "nodes": [],
            "body": {
              "id": 12587,
              "nodeType": "Block",
              "src": "1561:125:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 12576,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1579:3:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 12577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1579:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 12580,
                              "name": "investmentManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12565,
                              "src": "1601:17:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                                "typeString": "contract IInvestmentManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                                "typeString": "contract IInvestmentManager"
                              }
                            ],
                            "id": 12579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1593:7:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 12578,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1593:7:61",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 12581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1593:26:61",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1579:40:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e6f6e6c79496e766573746d656e744d616e61676572",
                        "id": 12583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1621:46:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ade1c97231e51a68f79b0420e31785a8d4f270b7332e8f1b995fd42c7737a72a",
                          "typeString": "literal_string \"InvestmentStrategyBase.onlyInvestmentManager\""
                        },
                        "value": "InvestmentStrategyBase.onlyInvestmentManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ade1c97231e51a68f79b0420e31785a8d4f270b7332e8f1b995fd42c7737a72a",
                          "typeString": "literal_string \"InvestmentStrategyBase.onlyInvestmentManager\""
                        }
                      ],
                      "id": 12575,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1571:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:97:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12585,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:97:61"
                },
                {
                  "id": 12586,
                  "nodeType": "PlaceholderStatement",
                  "src": "1678:1:61"
                }
              ]
            },
            "documentation": {
              "id": 12573,
              "nodeType": "StructuredDocumentation",
              "src": "1394:129:61",
              "text": "@notice Simply checks that the `msg.sender` is the `investmentManager`, which is an address stored immutably at construction."
            },
            "name": "onlyInvestmentManager",
            "nameLocation": "1537:21:61",
            "parameters": {
              "id": 12574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1558:2:61"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 12603,
            "nodeType": "FunctionDefinition",
            "src": "1839:138:61",
            "nodes": [],
            "body": {
              "id": 12602,
              "nodeType": "Block",
              "src": "1890:87:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12595,
                      "name": "investmentManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12565,
                      "src": "1900:17:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                        "typeString": "contract IInvestmentManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12596,
                      "name": "_investmentManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12592,
                      "src": "1920:18:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                        "typeString": "contract IInvestmentManager"
                      }
                    },
                    "src": "1900:38:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  "id": 12598,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:38:61"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12599,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38759,
                      "src": "1948:20:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 12600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1948:22:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12601,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:22:61"
                }
              ]
            },
            "documentation": {
              "id": 12589,
              "nodeType": "StructuredDocumentation",
              "src": "1692:142:61",
              "text": "@notice Since this contract is designed to be initializable, the constructor simply sets `investmentManager`, the only immutable variable."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 12593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12592,
                  "mutability": "mutable",
                  "name": "_investmentManager",
                  "nameLocation": "1870:18:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12603,
                  "src": "1851:37:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                    "typeString": "contract IInvestmentManager"
                  },
                  "typeName": {
                    "id": 12591,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12590,
                      "name": "IInvestmentManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7364,
                      "src": "1851:18:61"
                    },
                    "referencedDeclaration": 7364,
                    "src": "1851:18:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1850:39:61"
            },
            "returnParameters": {
              "id": 12594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:0:61"
            },
            "scope": 12924,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12625,
            "nodeType": "FunctionDefinition",
            "src": "2065:205:61",
            "nodes": [],
            "body": {
              "id": 12624,
              "nodeType": "Block",
              "src": "2162:108:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 12617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12615,
                      "name": "underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12569,
                      "src": "2172:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$40863",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12616,
                      "name": "_underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12607,
                      "src": "2190:16:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$40863",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2172:34:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$40863",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 12618,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:34:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12620,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12610,
                        "src": "2234:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7474",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 12621,
                        "name": "UNPAUSE_ALL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12175,
                        "src": "2251:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$7474",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12619,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12299,
                      "src": "2216:17:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$7474_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 12622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2216:47:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12623,
                  "nodeType": "ExpressionStatement",
                  "src": "2216:47:61"
                }
              ]
            },
            "documentation": {
              "id": 12604,
              "nodeType": "StructuredDocumentation",
              "src": "1983:77:61",
              "text": "@notice Sets the `underlyingToken` and `pauserRegistry` for the strategy."
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12613,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12612,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38680,
                  "src": "2150:11:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "2150:11:61"
              }
            ],
            "name": "initialize",
            "nameLocation": "2074:10:61",
            "parameters": {
              "id": 12611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12607,
                  "mutability": "mutable",
                  "name": "_underlyingToken",
                  "nameLocation": "2092:16:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12625,
                  "src": "2085:23:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$40863",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 12606,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12605,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40863,
                      "src": "2085:6:61"
                    },
                    "referencedDeclaration": 40863,
                    "src": "2085:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$40863",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12610,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "2126:15:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12625,
                  "src": "2110:31:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$7474",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 12609,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12608,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 7474,
                      "src": "2110:15:61"
                    },
                    "referencedDeclaration": 7474,
                    "src": "2110:15:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$7474",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2084:58:61"
            },
            "returnParameters": {
              "id": 12614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2162:0:61"
            },
            "scope": 12924,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 12687,
            "nodeType": "FunctionDefinition",
            "src": "2807:938:61",
            "nodes": [],
            "body": {
              "id": 12686,
              "nodeType": "Block",
              "src": "3017:728:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$40863",
                          "typeString": "contract IERC20"
                        },
                        "id": 12645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12643,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12629,
                          "src": "3035:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$40863",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 12644,
                          "name": "underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12569,
                          "src": "3044:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$40863",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "3035:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e6465706f7369743a2043616e206f6e6c79206465706f73697420756e6465726c79696e67546f6b656e",
                        "id": 12646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3061:66:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c8993c32c7ea45dc431c4c0aec3c353d9c5fd16285693d311f15a6f5ecc0144",
                          "typeString": "literal_string \"InvestmentStrategyBase.deposit: Can only deposit underlyingToken\""
                        },
                        "value": "InvestmentStrategyBase.deposit: Can only deposit underlyingToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c8993c32c7ea45dc431c4c0aec3c353d9c5fd16285693d311f15a6f5ecc0144",
                          "typeString": "literal_string \"InvestmentStrategyBase.deposit: Can only deposit underlyingToken\""
                        }
                      ],
                      "id": 12642,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3027:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:101:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12648,
                  "nodeType": "ExpressionStatement",
                  "src": "3027:101:61"
                },
                {
                  "assignments": [
                    12651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12651,
                      "mutability": "mutable",
                      "name": "priorTokenBalance",
                      "nameLocation": "3448:17:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 12686,
                      "src": "3440:25:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12650,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3440:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @notice calculation of newShares *mirrors* `underlyingToShares(amount)`, but is different since the balance of `underlyingToken`\n has already been increased due to the `investmentManager` transferring tokens to this strategy prior to calling this function",
                  "id": 12656,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 12652,
                        "name": "_tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12923,
                        "src": "3468:13:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 12653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3468:15:61",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 12654,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12631,
                      "src": "3486:6:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3468:24:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3440:52:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 12663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12657,
                        "name": "priorTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12651,
                        "src": "3506:17:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 12658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3527:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3506:22:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12660,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12572,
                        "src": "3532:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 12661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3547:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3532:16:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3506:42:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12678,
                    "nodeType": "Block",
                    "src": "3599:79:61",
                    "statements": [
                      {
                        "expression": {
                          "id": 12676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12669,
                            "name": "newShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12640,
                            "src": "3613:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 12672,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 12670,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12631,
                                    "src": "3626:6:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 12671,
                                    "name": "totalShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12572,
                                    "src": "3635:11:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3626:20:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 12673,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3625:22:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 12674,
                              "name": "priorTokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12651,
                              "src": "3650:17:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3625:42:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3613:54:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12677,
                        "nodeType": "ExpressionStatement",
                        "src": "3613:54:61"
                      }
                    ]
                  },
                  "id": 12679,
                  "nodeType": "IfStatement",
                  "src": "3502:176:61",
                  "trueBody": {
                    "id": 12668,
                    "nodeType": "Block",
                    "src": "3550:43:61",
                    "statements": [
                      {
                        "expression": {
                          "id": 12666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12664,
                            "name": "newShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12640,
                            "src": "3564:9:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 12665,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12631,
                            "src": "3576:6:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3564:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12667,
                        "nodeType": "ExpressionStatement",
                        "src": "3564:18:61"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 12682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12680,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12572,
                      "src": "3688:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 12681,
                      "name": "newShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12640,
                      "src": "3703:9:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3688:24:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12683,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:24:61"
                },
                {
                  "expression": {
                    "id": 12684,
                    "name": "newShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12640,
                    "src": "3729:9:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12641,
                  "id": 12685,
                  "nodeType": "Return",
                  "src": "3722:16:61"
                }
              ]
            },
            "baseFunctions": [
              7379
            ],
            "documentation": {
              "id": 12626,
              "nodeType": "StructuredDocumentation",
              "src": "2276:526:61",
              "text": " @notice Used to deposit tokens into this InvestmentStrategy\n @param token is the ERC20 token being deposited\n @param amount is the amount of token being deposited\n @dev This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's\n `depositIntoStrategy` function, and individual share balances are recorded in the investmentManager as well.\n @return newShares is the number of new shares issued at the current exchange ratio."
            },
            "functionSelector": "47e7ef24",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12635,
                    "name": "PAUSED_DEPOSITS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12558,
                    "src": "2930:15:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 12636,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12634,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12252,
                  "src": "2912:17:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "2912:34:61"
              },
              {
                "id": 12638,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12637,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12588,
                  "src": "2955:21:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "2955:21:61"
              }
            ],
            "name": "deposit",
            "nameLocation": "2816:7:61",
            "overrides": {
              "id": 12633,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2895:8:61"
            },
            "parameters": {
              "id": 12632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12629,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2831:5:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12687,
                  "src": "2824:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$40863",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 12628,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12627,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40863,
                      "src": "2824:6:61"
                    },
                    "referencedDeclaration": 40863,
                    "src": "2824:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$40863",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12631,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2846:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12687,
                  "src": "2838:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2823:30:61"
            },
            "returnParameters": {
              "id": 12641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12640,
                  "mutability": "mutable",
                  "name": "newShares",
                  "nameLocation": "3002:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12687,
                  "src": "2994:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2994:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2993:19:61"
            },
            "scope": 12924,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 12760,
            "nodeType": "FunctionDefinition",
            "src": "4220:1272:61",
            "nodes": [],
            "body": {
              "id": 12759,
              "nodeType": "Block",
              "src": "4423:1069:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$40863",
                          "typeString": "contract IERC20"
                        },
                        "id": 12707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12705,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12693,
                          "src": "4441:5:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$40863",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 12706,
                          "name": "underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12569,
                          "src": "4450:15:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$40863",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "4441:24:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e77697468647261773a2043616e206f6e6c792077697468647261772074686520737472617465677920746f6b656e",
                        "id": 12708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4467:71:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a90debadbc5bcdf3cff330f9ff50f57f952db4ddab1ffc4089964ab007a957f",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: Can only withdraw the strategy token\""
                        },
                        "value": "InvestmentStrategyBase.withdraw: Can only withdraw the strategy token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a90debadbc5bcdf3cff330f9ff50f57f952db4ddab1ffc4089964ab007a957f",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: Can only withdraw the strategy token\""
                        }
                      ],
                      "id": 12704,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4433:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4433:106:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12710,
                  "nodeType": "ExpressionStatement",
                  "src": "4433:106:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12712,
                          "name": "amountShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12695,
                          "src": "4570:12:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 12713,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12572,
                          "src": "4586:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4570:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e77697468647261773a20616d6f756e74536861726573206d757374206265206c657373207468616e206f7220657175616c20746f20746f74616c536861726573",
                        "id": 12715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4611:89:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba9d105d4923e014e34f881482365c00a19e3627998c5d0f777a0f8d065e1d44",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: amountShares must be less than or equal to totalShares\""
                        },
                        "value": "InvestmentStrategyBase.withdraw: amountShares must be less than or equal to totalShares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba9d105d4923e014e34f881482365c00a19e3627998c5d0f777a0f8d065e1d44",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: amountShares must be less than or equal to totalShares\""
                        }
                      ],
                      "id": 12711,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4549:7:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4549:161:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12717,
                  "nodeType": "ExpressionStatement",
                  "src": "4549:161:61"
                },
                {
                  "assignments": [
                    12719
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12719,
                      "mutability": "mutable",
                      "name": "priorTotalShares",
                      "nameLocation": "4782:16:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 12759,
                      "src": "4774:24:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12718,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4774:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12721,
                  "initialValue": {
                    "id": 12720,
                    "name": "totalShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12572,
                    "src": "4801:11:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4774:38:61"
                },
                {
                  "id": 12726,
                  "nodeType": "UncheckedBlock",
                  "src": "4934:62:61",
                  "statements": [
                    {
                      "expression": {
                        "id": 12724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 12722,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12572,
                          "src": "4958:11:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 12723,
                          "name": "amountShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12695,
                          "src": "4973:12:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4958:27:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 12725,
                      "nodeType": "ExpressionStatement",
                      "src": "4958:27:61"
                    }
                  ]
                },
                {
                  "assignments": [
                    12729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12729,
                      "mutability": "mutable",
                      "name": "amountToSend",
                      "nameLocation": "5211:12:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 12759,
                      "src": "5203:20:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12728,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5203:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @notice calculation of amountToSend *mirrors* `sharesToUnderlying(amountShares)`, but is different since the `totalShares` has already\n been decremented",
                  "id": 12730,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5203:20:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12731,
                      "name": "priorTotalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12719,
                      "src": "5237:16:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 12732,
                      "name": "amountShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12695,
                      "src": "5257:12:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5237:32:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12750,
                    "nodeType": "Block",
                    "src": "5332:91:61",
                    "statements": [
                      {
                        "expression": {
                          "id": 12748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12740,
                            "name": "amountToSend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12729,
                            "src": "5346:12:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 12747,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 12744,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 12741,
                                      "name": "_tokenBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 12923,
                                      "src": "5362:13:61",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 12742,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5362:15:61",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 12743,
                                    "name": "amountShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12695,
                                    "src": "5380:12:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5362:30:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 12745,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5361:32:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 12746,
                              "name": "priorTotalShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12719,
                              "src": "5396:16:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5361:51:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5346:66:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12749,
                        "nodeType": "ExpressionStatement",
                        "src": "5346:66:61"
                      }
                    ]
                  },
                  "id": 12751,
                  "nodeType": "IfStatement",
                  "src": "5233:190:61",
                  "trueBody": {
                    "id": 12739,
                    "nodeType": "Block",
                    "src": "5271:55:61",
                    "statements": [
                      {
                        "expression": {
                          "id": 12737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 12734,
                            "name": "amountToSend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12729,
                            "src": "5285:12:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 12735,
                              "name": "_tokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12923,
                              "src": "5300:13:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 12736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5300:15:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5285:30:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 12738,
                        "nodeType": "ExpressionStatement",
                        "src": "5285:30:61"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12755,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12690,
                        "src": "5461:9:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12756,
                        "name": "amountToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12729,
                        "src": "5472:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12752,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12569,
                        "src": "5432:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$40863",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41029,
                      "src": "5432:28:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$40863_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$40863_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 12757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5432:53:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12758,
                  "nodeType": "ExpressionStatement",
                  "src": "5432:53:61"
                }
              ]
            },
            "baseFunctions": [
              7390
            ],
            "documentation": {
              "id": 12688,
              "nodeType": "StructuredDocumentation",
              "src": "3751:464:61",
              "text": " @notice Used to withdraw tokens from this InvestmentStrategy, to the `depositor`'s address\n @param token is the ERC20 token being transferred out\n @param amountShares is the amount of shares being withdrawn\n @dev This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's\n other functions, and individual share balances are recorded in the investmentManager as well."
            },
            "functionSelector": "d9caed12",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 12699,
                    "name": "PAUSED_WITHDRAWALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12561,
                    "src": "4369:18:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 12700,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12698,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12252,
                  "src": "4351:17:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "4351:37:61"
              },
              {
                "id": 12702,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12701,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12588,
                  "src": "4397:21:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "4397:21:61"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4229:8:61",
            "overrides": {
              "id": 12697,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4334:8:61"
            },
            "parameters": {
              "id": 12696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12690,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "4246:9:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12760,
                  "src": "4238:17:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4238:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12693,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4264:5:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12760,
                  "src": "4257:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$40863",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 12692,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12691,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40863,
                      "src": "4257:6:61"
                    },
                    "referencedDeclaration": 40863,
                    "src": "4257:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$40863",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12695,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "4279:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12760,
                  "src": "4271:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4271:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4237:55:61"
            },
            "returnParameters": {
              "id": 12703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4423:0:61"
            },
            "scope": 12924,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 12770,
            "nodeType": "FunctionDefinition",
            "src": "5700:191:61",
            "nodes": [],
            "body": {
              "id": 12769,
              "nodeType": "Block",
              "src": "5778:113:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "4261736520496e766573746d656e74537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73",
                    "id": 12767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5795:89:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_087d69029beb240e992612e3de4c8ab4dd02c5ed9901d76a1d88f4d241dfc48b",
                      "typeString": "literal_string \"Base InvestmentStrategy implementation to inherit from for more complex implementations\""
                    },
                    "value": "Base InvestmentStrategy implementation to inherit from for more complex implementations"
                  },
                  "functionReturnParameters": 12766,
                  "id": 12768,
                  "nodeType": "Return",
                  "src": "5788:96:61"
                }
              ]
            },
            "baseFunctions": [
              7457
            ],
            "documentation": {
              "id": 12761,
              "nodeType": "StructuredDocumentation",
              "src": "5498:197:61",
              "text": " @notice Currently returns a brief string explaining the strategy's goal & purpose, but for more complex\n strategies, may be a link to metadata that explains in more detail."
            },
            "functionSelector": "ab5921e1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "explanation",
            "nameLocation": "5709:11:61",
            "overrides": {
              "id": 12763,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5745:8:61"
            },
            "parameters": {
              "id": 12762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5720:2:61"
            },
            "returnParameters": {
              "id": 12766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12765,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12770,
                  "src": "5763:13:61",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 12764,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5763:6:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5762:15:61"
            },
            "scope": 12924,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 12796,
            "nodeType": "FunctionDefinition",
            "src": "6341:267:61",
            "nodes": [],
            "body": {
              "id": 12795,
              "nodeType": "Block",
              "src": "6442:166:61",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 12779,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12572,
                      "src": "6456:11:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 12780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6471:1:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6456:16:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12793,
                    "nodeType": "Block",
                    "src": "6524:78:61",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 12788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 12785,
                                    "name": "_tokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 12923,
                                    "src": "6546:13:61",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 12786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6546:15:61",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 12787,
                                  "name": "amountShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12773,
                                  "src": "6564:12:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6546:30:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 12789,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6545:32:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 12790,
                            "name": "totalShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12572,
                            "src": "6580:11:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6545:46:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 12778,
                        "id": 12792,
                        "nodeType": "Return",
                        "src": "6538:53:61"
                      }
                    ]
                  },
                  "id": 12794,
                  "nodeType": "IfStatement",
                  "src": "6452:150:61",
                  "trueBody": {
                    "id": 12784,
                    "nodeType": "Block",
                    "src": "6474:44:61",
                    "statements": [
                      {
                        "expression": {
                          "id": 12782,
                          "name": "amountShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12773,
                          "src": "6495:12:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 12778,
                        "id": 12783,
                        "nodeType": "Return",
                        "src": "6488:19:61"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              7422
            ],
            "documentation": {
              "id": 12771,
              "nodeType": "StructuredDocumentation",
              "src": "5897:439:61",
              "text": " @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlying`, this function guarantees no state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "7a8b2637",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sharesToUnderlyingView",
            "nameLocation": "6350:22:61",
            "overrides": {
              "id": 12775,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6415:8:61"
            },
            "parameters": {
              "id": 12774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12773,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "6381:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12796,
                  "src": "6373:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6373:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6372:22:61"
            },
            "returnParameters": {
              "id": 12778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12777,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12796,
                  "src": "6433:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6433:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6432:9:61"
            },
            "scope": 12924,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12810,
            "nodeType": "FunctionDefinition",
            "src": "7061:157:61",
            "nodes": [],
            "body": {
              "id": 12809,
              "nodeType": "Block",
              "src": "7158:60:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12806,
                        "name": "amountShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12799,
                        "src": "7198:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12805,
                      "name": "sharesToUnderlyingView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12796,
                      "src": "7175:22:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 12807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7175:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12804,
                  "id": 12808,
                  "nodeType": "Return",
                  "src": "7168:43:61"
                }
              ]
            },
            "baseFunctions": [
              7398
            ],
            "documentation": {
              "id": 12797,
              "nodeType": "StructuredDocumentation",
              "src": "6614:442:61",
              "text": " @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "f3e73875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sharesToUnderlying",
            "nameLocation": "7070:18:61",
            "overrides": {
              "id": 12801,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7131:8:61"
            },
            "parameters": {
              "id": 12800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12799,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "7097:12:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12810,
                  "src": "7089:20:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7089:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7088:22:61"
            },
            "returnParameters": {
              "id": 12804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12810,
                  "src": "7149:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7149:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7148:9:61"
            },
            "scope": 12924,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12843,
            "nodeType": "FunctionDefinition",
            "src": "7678:336:61",
            "nodes": [],
            "body": {
              "id": 12842,
              "nodeType": "Block",
              "src": "7774:240:61",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    12819
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12819,
                      "mutability": "mutable",
                      "name": "tokenBalance",
                      "nameLocation": "7792:12:61",
                      "nodeType": "VariableDeclaration",
                      "scope": 12842,
                      "src": "7784:20:61",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12818,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7784:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12822,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12820,
                      "name": "_tokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12923,
                      "src": "7807:13:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 12821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7807:15:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7784:38:61"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 12829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12823,
                        "name": "tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12819,
                        "src": "7836:12:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 12824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7852:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7836:17:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 12828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12826,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12572,
                        "src": "7857:11:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 12827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7872:1:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7857:16:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7836:37:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 12840,
                    "nodeType": "Block",
                    "src": "7929:79:61",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 12838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 12835,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 12833,
                                  "name": "amountUnderlying",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12813,
                                  "src": "7951:16:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 12834,
                                  "name": "totalShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 12572,
                                  "src": "7970:11:61",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7951:30:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 12836,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7950:32:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 12837,
                            "name": "tokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12819,
                            "src": "7985:12:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7950:47:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 12817,
                        "id": 12839,
                        "nodeType": "Return",
                        "src": "7943:54:61"
                      }
                    ]
                  },
                  "id": 12841,
                  "nodeType": "IfStatement",
                  "src": "7832:176:61",
                  "trueBody": {
                    "id": 12832,
                    "nodeType": "Block",
                    "src": "7875:48:61",
                    "statements": [
                      {
                        "expression": {
                          "id": 12830,
                          "name": "amountUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12813,
                          "src": "7896:16:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 12817,
                        "id": 12831,
                        "nodeType": "Return",
                        "src": "7889:23:61"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              7430
            ],
            "documentation": {
              "id": 12811,
              "nodeType": "StructuredDocumentation",
              "src": "7224:449:61",
              "text": " @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToShares`, this function guarantees no state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "e3dae51c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToSharesView",
            "nameLocation": "7687:22:61",
            "parameters": {
              "id": 12814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12813,
                  "mutability": "mutable",
                  "name": "amountUnderlying",
                  "nameLocation": "7718:16:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12843,
                  "src": "7710:24:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7710:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7709:26:61"
            },
            "returnParameters": {
              "id": 12817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12816,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12843,
                  "src": "7765:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12815,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7765:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7764:9:61"
            },
            "scope": 12924,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12856,
            "nodeType": "FunctionDefinition",
            "src": "8477:158:61",
            "nodes": [],
            "body": {
              "id": 12855,
              "nodeType": "Block",
              "src": "8571:64:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12852,
                        "name": "amountUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12846,
                        "src": "8611:16:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12851,
                      "name": "underlyingToSharesView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12843,
                      "src": "8588:22:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 12853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8588:40:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12850,
                  "id": 12854,
                  "nodeType": "Return",
                  "src": "8581:47:61"
                }
              ]
            },
            "baseFunctions": [
              7406
            ],
            "documentation": {
              "id": 12844,
              "nodeType": "StructuredDocumentation",
              "src": "8020:452:61",
              "text": " @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToSharesView`, this function **may** make state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "8c871019",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToShares",
            "nameLocation": "8486:18:61",
            "parameters": {
              "id": 12847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12846,
                  "mutability": "mutable",
                  "name": "amountUnderlying",
                  "nameLocation": "8513:16:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12856,
                  "src": "8505:24:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8505:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8504:26:61"
            },
            "returnParameters": {
              "id": 12850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12856,
                  "src": "8562:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8562:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8561:9:61"
            },
            "scope": 12924,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 12871,
            "nodeType": "FunctionDefinition",
            "src": "8871:142:61",
            "nodes": [],
            "body": {
              "id": 12870,
              "nodeType": "Block",
              "src": "8953:60:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12866,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12859,
                            "src": "9000:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12865,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12908,
                          "src": "8993:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 12867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8993:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12864,
                      "name": "sharesToUnderlyingView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12796,
                      "src": "8970:22:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 12868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8970:36:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12863,
                  "id": 12869,
                  "nodeType": "Return",
                  "src": "8963:43:61"
                }
              ]
            },
            "baseFunctions": [
              7438
            ],
            "documentation": {
              "id": 12857,
              "nodeType": "StructuredDocumentation",
              "src": "8641:225:61",
              "text": " @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
            },
            "functionSelector": "553ca5f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userUnderlyingView",
            "nameLocation": "8880:18:61",
            "parameters": {
              "id": 12860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12859,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8907:4:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12871,
                  "src": "8899:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8899:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8898:14:61"
            },
            "returnParameters": {
              "id": 12863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12871,
                  "src": "8944:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8944:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8943:9:61"
            },
            "scope": 12924,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 12886,
            "nodeType": "FunctionDefinition",
            "src": "9252:129:61",
            "nodes": [],
            "body": {
              "id": 12885,
              "nodeType": "Block",
              "src": "9325:56:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12881,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12874,
                            "src": "9368:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12880,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12908,
                          "src": "9361:6:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 12882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9361:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12879,
                      "name": "sharesToUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12810,
                      "src": "9342:18:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 12883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9342:32:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12878,
                  "id": 12884,
                  "nodeType": "Return",
                  "src": "9335:39:61"
                }
              ]
            },
            "baseFunctions": [
              7414
            ],
            "documentation": {
              "id": 12872,
              "nodeType": "StructuredDocumentation",
              "src": "9019:228:61",
              "text": " @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
            },
            "functionSelector": "8f6a6240",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userUnderlying",
            "nameLocation": "9261:14:61",
            "parameters": {
              "id": 12875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12874,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9284:4:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12886,
                  "src": "9276:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9276:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9275:14:61"
            },
            "returnParameters": {
              "id": 12878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12886,
                  "src": "9316:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9316:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9315:9:61"
            },
            "scope": 12924,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 12908,
            "nodeType": "FunctionDefinition",
            "src": "9557:191:61",
            "nodes": [],
            "body": {
              "id": 12907,
              "nodeType": "Block",
              "src": "9625:123:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12898,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12889,
                        "src": "9700:4:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 12902,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9734:4:61",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_InvestmentStrategyBase_$12924",
                                  "typeString": "contract InvestmentStrategyBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_InvestmentStrategyBase_$12924",
                                  "typeString": "contract InvestmentStrategyBase"
                                }
                              ],
                              "id": 12901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9726:7:61",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 12900,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9726:7:61",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 12903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9726:13:61",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 12899,
                          "name": "IInvestmentStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7458,
                          "src": "9706:19:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IInvestmentStrategy_$7458_$",
                            "typeString": "type(contract IInvestmentStrategy)"
                          }
                        },
                        "id": 12904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9706:34:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                          "typeString": "contract IInvestmentStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IInvestmentStrategy_$7458",
                          "typeString": "contract IInvestmentStrategy"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 12895,
                            "name": "investmentManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12565,
                            "src": "9661:17:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                              "typeString": "contract IInvestmentManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                              "typeString": "contract IInvestmentManager"
                            }
                          ],
                          "id": 12894,
                          "name": "IInvestmentManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7364,
                          "src": "9642:18:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IInvestmentManager_$7364_$",
                            "typeString": "type(contract IInvestmentManager)"
                          }
                        },
                        "id": 12896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9642:37:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvestmentManager_$7364",
                          "typeString": "contract IInvestmentManager"
                        }
                      },
                      "id": 12897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "investorStratShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7335,
                      "src": "9642:57:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_IInvestmentStrategy_$7458_$returns$_t_uint256_$",
                        "typeString": "function (address,contract IInvestmentStrategy) view external returns (uint256)"
                      }
                    },
                    "id": 12905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9642:99:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12893,
                  "id": 12906,
                  "nodeType": "Return",
                  "src": "9635:106:61"
                }
              ]
            },
            "documentation": {
              "id": 12887,
              "nodeType": "StructuredDocumentation",
              "src": "9387:165:61",
              "text": " @notice convenience function for fetching the current total shares of `user` in this strategy, by\n querying the `investmentManager` contract"
            },
            "functionSelector": "ce7c2ac2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shares",
            "nameLocation": "9566:6:61",
            "parameters": {
              "id": 12890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12889,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9581:4:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 12908,
                  "src": "9573:12:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9573:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9572:14:61"
            },
            "returnParameters": {
              "id": 12893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12908,
                  "src": "9616:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9616:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9615:9:61"
            },
            "scope": 12924,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 12923,
            "nodeType": "FunctionDefinition",
            "src": "9899:129:61",
            "nodes": [],
            "body": {
              "id": 12922,
              "nodeType": "Block",
              "src": "9964:64:61",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 12918,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10015:4:61",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InvestmentStrategyBase_$12924",
                              "typeString": "contract InvestmentStrategyBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_InvestmentStrategyBase_$12924",
                              "typeString": "contract InvestmentStrategyBase"
                            }
                          ],
                          "id": 12917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10007:7:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12916,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10007:7:61",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 12919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10007:13:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 12914,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12569,
                        "src": "9981:15:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$40863",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 12915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40820,
                      "src": "9981:25:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9981:40:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12913,
                  "id": 12921,
                  "nodeType": "Return",
                  "src": "9974:47:61"
                }
              ]
            },
            "documentation": {
              "id": 12909,
              "nodeType": "StructuredDocumentation",
              "src": "9754:97:61",
              "text": "@notice Internal function used to fetch this contract's current balance of `underlyingToken`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_tokenBalance",
            "nameLocation": "9908:13:61",
            "parameters": {
              "id": 12910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9921:2:61"
            },
            "returnParameters": {
              "id": 12913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12912,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12923,
                  "src": "9955:7:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9955:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9954:9:61"
            },
            "scope": 12924,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12546,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38778,
              "src": "871:13:61"
            },
            "id": 12547,
            "nodeType": "InheritanceSpecifier",
            "src": "871:13:61"
          },
          {
            "baseName": {
              "id": 12548,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12396,
              "src": "886:8:61"
            },
            "id": 12549,
            "nodeType": "InheritanceSpecifier",
            "src": "886:8:61"
          },
          {
            "baseName": {
              "id": 12550,
              "name": "IInvestmentStrategy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7458,
              "src": "896:19:61"
            },
            "id": 12551,
            "nodeType": "InheritanceSpecifier",
            "src": "896:19:61"
          }
        ],
        "canonicalName": "InvestmentStrategyBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12545,
          "nodeType": "StructuredDocumentation",
          "src": "346:489:61",
          "text": " @title Base implementation of `IInvestmentStrategy` interface, designed to be inherited from by more complex strategies.\n @author Layr Labs, Inc.\n @notice Simple, basic, \"do-nothing\" InvestmentStrategy that holds a single underlying token and returns it on withdrawals.\n Implements minimal versions of the IInvestmentStrategy functions, this contract is designed to be inherited by\n more complex investment strategies, which can then override its functions as necessary."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          12924,
          7458,
          12396,
          38778
        ],
        "name": "InvestmentStrategyBase",
        "nameLocation": "845:22:61",
        "scope": 12925,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 61
}