{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "_investmentManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newShares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "explanation",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_underlyingToken",
          "type": "address"
        },
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "investmentManager",
      "outputs": [
        {
          "internalType": "contract IInvestmentManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "sharesToUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "sharesToUnderlyingView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "underlyingToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "underlyingToSharesView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userUnderlyingView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161154338038061154383398101604081905261002f9161010a565b6001600160a01b03811660805261004461004a565b5061013a565b600054610100900460ff16156100b65760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015610108576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60006020828403121561011c57600080fd5b81516001600160a01b038116811461013357600080fd5b9392505050565b6080516113d961016a600039600081816101ad015281816104e3015281816107e801526108b301526113d96000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637a8b2637116100ad578063ce7c2ac211610071578063ce7c2ac214610280578063d9caed1214610293578063e3dae51c146102a6578063f3e73875146102b9578063fabc1cbc146102cc57600080fd5b80637a8b263714610219578063886f11951461022c5780638c871019146102455780638f6a624014610258578063ab5921e11461026b57600080fd5b8063485cc955116100f4578063485cc955146101955780634b31bb10146101a8578063553ca5f8146101cf5780635ac86ab7146101e25780635c975abb1461021157600080fd5b8063136439dd146101265780632495a5991461013b5780633a98ef391461016b57806347e7ef2414610182575b600080fd5b61013961013436600461108c565b6102df565b005b60025461014e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61017460035481565b604051908152602001610162565b6101746101903660046110bd565b610483565b6101396101a33660046110e9565b610611565b61014e7f000000000000000000000000000000000000000000000000000000000000000081565b6101746101dd366004611122565b610742565b6102016101f036600461113f565b6001805460ff9092161b9081161490565b6040519015158152602001610162565b600154610174565b61017461022736600461108c565b610756565b60005461014e906201000090046001600160a01b031681565b61017461025336600461108c565b610787565b610174610266366004611122565b610792565b6102736107a0565b6040516101629190611192565b61017461028e366004611122565b6107c0565b6101396102a13660046111c5565b610855565b6101746102b436600461108c565b610a82565b6101746102c736600461108c565b610ac8565b6101396102da36600461108c565b610ad3565b600060029054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190611206565b6001600160a01b0316336001600160a01b0316146103cc5760405162461bcd60e51b815260206004820152602860248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526739903830bab9b2b960c11b60648201526084015b60405180910390fd5b600154818116146104455760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c697479000000000000000060648201526084016103c3565b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b600180546000918291811614156104d85760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016103c3565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105205760405162461bcd60e51b81526004016103c390611223565b6002546001600160a01b038581169116146105a5576040805162461bcd60e51b81526020600482015260248101919091527f496e766573746d656e745374726174656779426173652e6465706f7369743a2060448201527f43616e206f6e6c79206465706f73697420756e6465726c79696e67546f6b656e60648201526084016103c3565b6000836105b0610c72565b6105ba9190611285565b90508015806105c95750600354155b156105d6578392506105f2565b80600354856105e5919061129c565b6105ef91906112bb565b92505b826003600082825461060491906112dd565b9091555050505092915050565b600054610100900460ff16158080156106315750600054600160ff909116105b8061064b5750303b15801561064b575060005460ff166001145b6106ae5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016103c3565b6000805460ff1916600117905580156106d1576000805461ff0019166101001790555b600280546001600160a01b0319166001600160a01b0385161790556106f7826000610ce4565b801561073d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6000610750610227836107c0565b92915050565b600060035460001415610767575090565b60035482610773610c72565b61077d919061129c565b61075091906112bb565b600061075082610a82565b60006107506102c7836107c0565b606060405180608001604052806057815260200161134d60579139905090565b604051636be2343f60e01b81526001600160a01b0382811660048301523060248301526000917f000000000000000000000000000000000000000000000000000000000000000090911690636be2343f90604401602060405180830381865afa158015610831573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075091906112f5565b60018054600290811614156108a85760405162461bcd60e51b815260206004820152601960248201527814185d5cd8589b194e881a5b99195e081a5cc81c185d5cd959603a1b60448201526064016103c3565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108f05760405162461bcd60e51b81526004016103c390611223565b6002546001600160a01b038481169116146109815760405162461bcd60e51b815260206004820152604560248201527f496e766573746d656e745374726174656779426173652e77697468647261773a60448201527f2043616e206f6e6c7920776974686472617720746865207374726174656779206064820152643a37b5b2b760d91b608482015260a4016103c3565b600354821115610a1f5760405162461bcd60e51b815260206004820152605760248201527f496e766573746d656e745374726174656779426173652e77697468647261773a60448201527f20616d6f756e74536861726573206d757374206265206c657373207468616e2060648201527f6f7220657175616c20746f20746f74616c536861726573000000000000000000608482015260a4016103c3565b60038054838103909155600083821415610a4257610a3b610c72565b9050610a63565b8184610a4c610c72565b610a56919061129c565b610a6091906112bb565b90505b600254610a7a906001600160a01b03168783610df2565b505050505050565b600080610a8d610c72565b9050801580610a9c5750600354155b15610aa8575090919050565b8060035484610ab7919061129c565b610ac191906112bb565b9392505050565b600061075082610756565b600060029054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b4a9190611206565b6001600160a01b0316336001600160a01b031614610bbd5760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b60648201526084016103c3565b600154198119600154191614610c3b5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c697479000000000000000060648201526084016103c3565b600181905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610478565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610cbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdf91906112f5565b905090565b6000546201000090046001600160a01b0316158015610d0b57506001600160a01b03821615155b610d8d5760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a4016103c3565b600181905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261073d92869291600091610e82918516908490610eff565b80519091501561073d5780806020019051810190610ea0919061130e565b61073d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016103c3565b6060610f0e8484600085610f16565b949350505050565b606082471015610f775760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016103c3565b600080866001600160a01b03168587604051610f939190611330565b60006040518083038185875af1925050503d8060008114610fd0576040519150601f19603f3d011682016040523d82523d6000602084013e610fd5565b606091505b5091509150610fe687838387610ff1565b979650505050505050565b6060831561105d578251611056576001600160a01b0385163b6110565760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c3565b5081610f0e565b610f0e83838151156110725781518083602001fd5b8060405162461bcd60e51b81526004016103c39190611192565b60006020828403121561109e57600080fd5b5035919050565b6001600160a01b03811681146110ba57600080fd5b50565b600080604083850312156110d057600080fd5b82356110db816110a5565b946020939093013593505050565b600080604083850312156110fc57600080fd5b8235611107816110a5565b91506020830135611117816110a5565b809150509250929050565b60006020828403121561113457600080fd5b8135610ac1816110a5565b60006020828403121561115157600080fd5b813560ff81168114610ac157600080fd5b60005b8381101561117d578181015183820152602001611165565b8381111561118c576000848401525b50505050565b60208152600082518060208401526111b1816040850160208701611162565b601f01601f19169190910160400192915050565b6000806000606084860312156111da57600080fd5b83356111e5816110a5565b925060208401356111f5816110a5565b929592945050506040919091013590565b60006020828403121561121857600080fd5b8151610ac1816110a5565b6020808252602c908201527f496e766573746d656e745374726174656779426173652e6f6e6c79496e76657360408201526b3a36b2b73a26b0b730b3b2b960a11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156112975761129761126f565b500390565b60008160001904831182151516156112b6576112b661126f565b500290565b6000826112d857634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156112f0576112f061126f565b500190565b60006020828403121561130757600080fd5b5051919050565b60006020828403121561132057600080fd5b81518015158114610ac157600080fd5b60008251611342818460208701611162565b919091019291505056fe4261736520496e766573746d656e74537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73a264697066735822122086882c08d9b647b64a1702a9459fb66bd6f0db3b59c1f86307791cbcfdf2b5e864736f6c634300080c0033",
    "sourceMap": "836:9194:29:-:0;;;1839:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1900:38:29;;;;1948:22;:20;:22::i;:::-;1839:138;836:9194;;5928:279:82;5996:13;;;;;;;5995:14;5987:66;;;;-1:-1:-1;;;5987:66:82;;537:2:128;5987:66:82;;;519:21:128;576:2;556:18;;;549:30;615:34;595:18;;;588:62;-1:-1:-1;;;666:18:128;;;659:37;713:19;;5987:66:82;;;;;;;;6067:12;;6082:15;6067:12;;;:30;6063:138;;;6113:12;:30;;-1:-1:-1;;6113:30:82;6128:15;6113:30;;;;;;6162:28;;885:36:128;;;6162:28:82;;873:2:128;858:18;6162:28:82;;;;;;;6063:138;5928:279::o;14:316:128:-;110:6;163:2;151:9;142:7;138:23;134:32;131:52;;;179:1;176;169:12;131:52;205:16;;-1:-1:-1;;;;;250:31:128;;240:42;;230:70;;296:1;293;286:12;230:70;319:5;14:316;-1:-1:-1;;;14:316:128:o;743:184::-;836:9194:29;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "836:9194:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:392:27;;;;;;:::i;:::-;;:::i;:::-;;1248:29:29;;;;;-1:-1:-1;;;;;1248:29:29;;;;;;-1:-1:-1;;;;;379:32:128;;;361:51;;349:2;334:18;1248:29:29;;;;;;;;1361:26;;;;;;;;;569:25:128;;;557:2;542:18;1361:26:29;423:177:128;2807:938:29;;;;;;:::i;:::-;;:::i;2065:205::-;;;;;;:::i;:::-;;:::i;1113:53::-;;;;;8871:142;;;;;;:::i;:::-;;:::i;4796:149:27:-;;;;;;:::i;:::-;4885:1;4914:7;;4885:10;;;;;4914:14;;;4913:24;;4796:149;;;;2476:14:128;;2469:22;2451:41;;2439:2;2424:18;4796:149:27;2311:187:128;4608:87:27;4681:7;;4608:87;;6341:267:29;;;;;;:::i;:::-;;:::i;906:37:27:-;;;;;;;;-1:-1:-1;;;;;906:37:27;;;8477:158:29;;;;;;:::i;:::-;;:::i;9252:129::-;;;;;;:::i;:::-;;:::i;5700:191::-;;;:::i;:::-;;;;;;;:::i;9557:::-;;;;;;:::i;:::-;;:::i;4220:1272::-;;;;;;:::i;:::-;;:::i;7678:336::-;;;;;;:::i;:::-;;:::i;7061:157::-;;;;;;:::i;:::-;;:::i;4135:403:27:-;;;;;;:::i;:::-;;:::i;3259:392::-;1557:14;;;;;;;;;-1:-1:-1;;;;;1557:14:27;-1:-1:-1;;;;;1557:21:27;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1543:37:27;:10;-1:-1:-1;;;;;1543:37:27;;1535:90;;;;-1:-1:-1;;;1535:90:27;;4346:2:128;1535:90:27;;;4328:21:128;4385:2;4365:18;;;4358:30;4424:34;4404:18;;;4397:62;-1:-1:-1;;;4475:18:128;;;4468:38;4523:19;;1535:90:27;;;;;;;;;3491:7:::1;::::0;3461:25;;::::1;3460:38;3452:107;;;::::0;-1:-1:-1;;;3452:107:27;;4755:2:128;3452:107:27::1;::::0;::::1;4737:21:128::0;4794:2;4774:18;;;4767:30;4833:34;4813:18;;;4806:62;4904:26;4884:18;;;4877:54;4948:19;;3452:107:27::1;4553:420:128::0;3452:107:27::1;3569:7;:25:::0;;;3609:35:::1;::::0;569:25:128;;;3616:10:27::1;::::0;3609:35:::1;::::0;557:2:128;542:18;3609:35:27::1;;;;;;;;3259:392:::0;:::o;2807:938:29:-;4885:1:27;4914:7;;2994:17:29;;;;4914:14:27;;4913:24;2187:14;2179:52;;;;-1:-1:-1;;;2179:52:27;;5180:2:128;2179:52:27;;;5162:21:128;5219:2;5199:18;;;5192:30;-1:-1:-1;;;5238:18:128;;;5231:55;5303:18;;2179:52:27;4978:349:128;2179:52:27;1579:10:29::1;-1:-1:-1::0;;;;;1601:17:29::1;1579:40;;1571:97;;;;-1:-1:-1::0;;;1571:97:29::1;;;;;;;:::i;:::-;3044:15:::2;::::0;-1:-1:-1;;;;;3035:24:29;;::::2;3044:15:::0;::::2;3035:24;3027:101;;;::::0;;-1:-1:-1;;;3027:101:29;;5947:2:128;3027:101:29::2;::::0;::::2;5929:21:128::0;5966:18;;;5959:30;;;;6025:34;6005:18;;;5998:62;6096:34;6076:18;;;6069:62;6148:19;;3027:101:29::2;5745:428:128::0;3027:101:29::2;3440:25;3486:6;3468:15;:13;:15::i;:::-;:24;;;;:::i;:::-;3440:52:::0;-1:-1:-1;3506:22:29;;;:42:::2;;-1:-1:-1::0;3532:11:29::2;::::0;:16;3506:42:::2;3502:176;;;3576:6;3564:18;;3502:176;;;3650:17;3635:11;;3626:6;:20;;;;:::i;:::-;3625:42;;;;:::i;:::-;3613:54;;3502:176;3703:9;3688:11;;:24;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;2807:938:29;;;;;:::o;2065:205::-;3268:19:82;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:82;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:82;1476:19:84;:23;;;3376:66:82;;-1:-1:-1;3425:12:82;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:82;;7170:2:128;3314:201:82;;;7152:21:128;7209:2;7189:18;;;7182:30;7248:34;7228:18;;;7221:62;-1:-1:-1;;;7299:18:128;;;7292:44;7353:19;;3314:201:82;6968:410:128;3314:201:82;3525:12;:16;;-1:-1:-1;;3525:16:82;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:82;;;;;3551:65;2172:15:29::1;:34:::0;;-1:-1:-1;;;;;;2172:34:29::1;-1:-1:-1::0;;;;;2172:34:29;::::1;;::::0;;2216:47:::1;2234:15:::0;-1:-1:-1;2216:17:29::1;:47::i;:::-;3640:14:82::0;3636:99;;;3686:5;3670:21;;-1:-1:-1;;3670:21:82;;;3710:14;;-1:-1:-1;7535:36:128;;3710:14:82;;7523:2:128;7508:18;3710:14:82;;;;;;;3636:99;3258:483;2065:205:29;;:::o;8871:142::-;8944:7;8970:36;8993:12;9000:4;8993:6;:12::i;8970:36::-;8963:43;8871:142;-1:-1:-1;;8871:142:29:o;6341:267::-;6433:7;6456:11;;6471:1;6456:16;6452:150;;;-1:-1:-1;6495:12:29;6341:267::o;6452:150::-;6580:11;;6564:12;6546:15;:13;:15::i;:::-;:30;;;;:::i;:::-;6545:46;;;;:::i;8477:158::-;8562:7;8588:40;8611:16;8588:22;:40::i;9252:129::-;9316:7;9342:32;9361:12;9368:4;9361:6;:12::i;5700:191::-;5763:13;5788:96;;;;;;;;;;;;;;;;;;;5700:191;:::o;9557:::-;9642:99;;-1:-1:-1;;;9642:99:29;;-1:-1:-1;;;;;7839:15:128;;;9642:99:29;;;7821:34:128;9734:4:29;7871:18:128;;;7864:43;9616:7:29;;9661:17;9642:57;;;;;;7756:18:128;;9642:99:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4220:1272::-;1049:1;4914:7:27;;4885:10;4914:14;;;4913:24;2187:14;2179:52;;;;-1:-1:-1;;;2179:52:27;;5180:2:128;2179:52:27;;;5162:21:128;5219:2;5199:18;;;5192:30;-1:-1:-1;;;5238:18:128;;;5231:55;5303:18;;2179:52:27;4978:349:128;2179:52:27;1579:10:29::1;-1:-1:-1::0;;;;;1601:17:29::1;1579:40;;1571:97;;;;-1:-1:-1::0;;;1571:97:29::1;;;;;;;:::i;:::-;4450:15:::2;::::0;-1:-1:-1;;;;;4441:24:29;;::::2;4450:15:::0;::::2;4441:24;4433:106;;;::::0;-1:-1:-1;;;4433:106:29;;8309:2:128;4433:106:29::2;::::0;::::2;8291:21:128::0;8348:2;8328:18;;;8321:30;8387:34;8367:18;;;8360:62;8458:34;8438:18;;;8431:62;-1:-1:-1;;;8509:19:128;;;8502:36;8555:19;;4433:106:29::2;8107:473:128::0;4433:106:29::2;4586:11;;4570:12;:27;;4549:161;;;::::0;-1:-1:-1;;;4549:161:29;;8787:2:128;4549:161:29::2;::::0;::::2;8769:21:128::0;8826:2;8806:18;;;8799:30;8865:34;8845:18;;;8838:62;8936:34;8916:18;;;8909:62;9008:25;8987:19;;;8980:54;9051:19;;4549:161:29::2;8585:491:128::0;4549:161:29::2;4801:11;::::0;;4958:27;;::::2;::::0;;;4774:24:::2;5237:32:::0;;::::2;5233:190;;;5300:15;:13;:15::i;:::-;5285:30;;5233:190;;;5396:16;5380:12;5362:15;:13;:15::i;:::-;:30;;;;:::i;:::-;5361:51;;;;:::i;:::-;5346:66;;5233:190;5432:15;::::0;:53:::2;::::0;-1:-1:-1;;;;;5432:15:29::2;5461:9:::0;5472:12;5432:28:::2;:53::i;:::-;4423:1069;;4220:1272:::0;;;;:::o;7678:336::-;7765:7;7784:20;7807:15;:13;:15::i;:::-;7784:38;-1:-1:-1;7836:17:29;;;:37;;-1:-1:-1;7857:11:29;;:16;7836:37;7832:176;;;-1:-1:-1;7896:16:29;;7678:336;-1:-1:-1;7678:336:29:o;7832:176::-;7985:12;7970:11;;7951:16;:30;;;;:::i;:::-;7950:47;;;;:::i;:::-;7943:54;7678:336;-1:-1:-1;;;7678:336:29:o;7061:157::-;7149:7;7175:36;7198:12;7175:22;:36::i;4135:403:27:-;1705:14;;;;;;;;;-1:-1:-1;;;;;1705:14:27;-1:-1:-1;;;;;1705:23:27;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1691:39:27;:10;-1:-1:-1;;;;;1691:39:27;;1683:94;;;;-1:-1:-1;;;1683:94:27;;9283:2:128;1683:94:27;;;9265:21:128;9322:2;9302:18;;;9295:30;9361:34;9341:18;;;9334:62;-1:-1:-1;;;9412:18:128;;;9405:40;9462:19;;1683:94:27;9081:406:128;1683:94:27;4375:7:::1;;4374:8;4352:15;4351:16;4339:7;;4338:8;4337:31;4336:47;4328:116;;;::::0;-1:-1:-1;;;4328:116:27;;9694:2:128;4328:116:27::1;::::0;::::1;9676:21:128::0;9733:2;9713:18;;;9706:30;9772:34;9752:18;;;9745:62;9843:26;9823:18;;;9816:54;9887:19;;4328:116:27::1;9492:420:128::0;4328:116:27::1;4454:7;:25:::0;;;4494:37:::1;::::0;569:25:128;;;4503:10:27::1;::::0;4494:37:::1;::::0;557:2:128;542:18;4494:37:27::1;423:177:128::0;9899:129:29;9981:15;;:40;;-1:-1:-1;;;9981:40:29;;10015:4;9981:40;;;361:51:128;9955:7:29;;-1:-1:-1;;;;;9981:15:29;;:25;;334:18:128;;9981:40:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9974:47;;9899:129;:::o;2363:438:27:-;2524:1;2497:14;;;;-1:-1:-1;;;;;2497:14:27;2489:37;:79;;;;-1:-1:-1;;;;;;2530:38:27;;;;2489:79;2468:197;;;;-1:-1:-1;;;2468:197:27;;10327:2:128;2468:197:27;;;10309:21:128;10366:2;10346:18;;;10339:30;10405:34;10385:18;;;10378:62;10476:34;10456:18;;;10449:62;-1:-1:-1;;;10527:19:128;;;10520:38;10575:19;;2468:197:27;10125:475:128;2468:197:27;2675:7;:26;;;2716:36;;569:25:128;;;2723:10:27;;2716:36;;557:2:128;542:18;2716:36:27;;;;;;;-1:-1:-1;2762:14:27;:32;;-1:-1:-1;;;;;2762:32:27;;;;;-1:-1:-1;;;;;;2762:32:27;;;;;;;;;2363:438::o;763:205:102:-;902:58;;;-1:-1:-1;;;;;10797:32:128;;;902:58:102;;;10779:51:128;10846:18;;;;10839:34;;;902:58:102;;;;;;;;;;10752:18:128;;;;902:58:102;;;;;;;;-1:-1:-1;;;;;902:58:102;-1:-1:-1;;;902:58:102;;;4192:69;;;;;;;;;;;;;;;;875:86;;895:5;;902:58;-1:-1:-1;;4192:69:102;;:27;;;902:58;;4192:27;:69::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:102;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:102;;11368:2:128;4351:85:102;;;11350:21:128;11407:2;11387:18;;;11380:30;11446:34;11426:18;;;11419:62;-1:-1:-1;;;11497:18:128;;;11490:40;11547:19;;4351:85:102;11166:406:128;3873:223:103;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:103:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:103;;11779:2:128;5149:81:103;;;11761:21:128;11818:2;11798:18;;;11791:30;11857:34;11837:18;;;11830:62;-1:-1:-1;;;11908:18:128;;;11901:36;11954:19;;5149:81:103;11577:402:128;5149:81:103;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:103;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:103:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:17;;7697:286;;-1:-1:-1;;;;;1476:19:84;;;7908:60:103;;;;-1:-1:-1;;;7908:60:103;;12465:2:128;7908:60:103;;;12447:21:128;12504:2;12484:18;;;12477:30;12543:31;12523:18;;;12516:59;12592:18;;7908:60:103;12263:353:128;7908:60:103;-1:-1:-1;8003:10:103;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:103;;;;;;;;:::i;14:180:128:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:128;;14:180;-1:-1:-1;14:180:128:o;605:139::-;-1:-1:-1;;;;;688:31:128;;678:42;;668:70;;734:1;731;724:12;668:70;605:139;:::o;749:339::-;833:6;841;894:2;882:9;873:7;869:23;865:32;862:52;;;910:1;907;900:12;862:52;949:9;936:23;968:39;1001:5;968:39;:::i;:::-;1026:5;1078:2;1063:18;;;;1050:32;;-1:-1:-1;;;749:339:128:o;1093:445::-;1202:6;1210;1263:2;1251:9;1242:7;1238:23;1234:32;1231:52;;;1279:1;1276;1269:12;1231:52;1318:9;1305:23;1337:39;1370:5;1337:39;:::i;:::-;1395:5;-1:-1:-1;1452:2:128;1437:18;;1424:32;1465:41;1424:32;1465:41;:::i;:::-;1525:7;1515:17;;;1093:445;;;;;:::o;1777:255::-;1836:6;1889:2;1877:9;1868:7;1864:23;1860:32;1857:52;;;1905:1;1902;1895:12;1857:52;1944:9;1931:23;1963:39;1996:5;1963:39;:::i;2037:269::-;2094:6;2147:2;2135:9;2126:7;2122:23;2118:32;2115:52;;;2163:1;2160;2153:12;2115:52;2202:9;2189:23;2252:4;2245:5;2241:16;2234:5;2231:27;2221:55;;2272:1;2269;2262:12;2736:258;2808:1;2818:113;2832:6;2829:1;2826:13;2818:113;;;2908:11;;;2902:18;2889:11;;;2882:39;2854:2;2847:10;2818:113;;;2949:6;2946:1;2943:13;2940:48;;;2984:1;2975:6;2970:3;2966:16;2959:27;2940:48;;2736:258;;;:::o;2999:383::-;3148:2;3137:9;3130:21;3111:4;3180:6;3174:13;3223:6;3218:2;3207:9;3203:18;3196:34;3239:66;3298:6;3293:2;3282:9;3278:18;3273:2;3265:6;3261:15;3239:66;:::i;:::-;3366:2;3345:15;-1:-1:-1;;3341:29:128;3326:45;;;;3373:2;3322:54;;2999:383;-1:-1:-1;;2999:383:128:o;3387:488::-;3480:6;3488;3496;3549:2;3537:9;3528:7;3524:23;3520:32;3517:52;;;3565:1;3562;3555:12;3517:52;3604:9;3591:23;3623:39;3656:5;3623:39;:::i;:::-;3681:5;-1:-1:-1;3738:2:128;3723:18;;3710:32;3751:41;3710:32;3751:41;:::i;:::-;3387:488;;3811:7;;-1:-1:-1;;;3865:2:128;3850:18;;;;3837:32;;3387:488::o;3880:259::-;3950:6;4003:2;3991:9;3982:7;3978:23;3974:32;3971:52;;;4019:1;4016;4009:12;3971:52;4051:9;4045:16;4070:39;4103:5;4070:39;:::i;5332:408::-;5534:2;5516:21;;;5573:2;5553:18;;;5546:30;5612:34;5607:2;5592:18;;5585:62;-1:-1:-1;;;5678:2:128;5663:18;;5656:42;5730:3;5715:19;;5332:408::o;6178:127::-;6239:10;6234:3;6230:20;6227:1;6220:31;6270:4;6267:1;6260:15;6294:4;6291:1;6284:15;6310:125;6350:4;6378:1;6375;6372:8;6369:34;;;6383:18;;:::i;:::-;-1:-1:-1;6420:9:128;;6310:125::o;6440:168::-;6480:7;6546:1;6542;6538:6;6534:14;6531:1;6528:21;6523:1;6516:9;6509:17;6505:45;6502:71;;;6553:18;;:::i;:::-;-1:-1:-1;6593:9:128;;6440:168::o;6613:217::-;6653:1;6679;6669:132;;6723:10;6718:3;6714:20;6711:1;6704:31;6758:4;6755:1;6748:15;6786:4;6783:1;6776:15;6669:132;-1:-1:-1;6815:9:128;;6613:217::o;6835:128::-;6875:3;6906:1;6902:6;6899:1;6896:13;6893:39;;;6912:18;;:::i;:::-;-1:-1:-1;6948:9:128;;6835:128::o;7918:184::-;7988:6;8041:2;8029:9;8020:7;8016:23;8012:32;8009:52;;;8057:1;8054;8047:12;8009:52;-1:-1:-1;8080:16:128;;7918:184;-1:-1:-1;7918:184:128:o;10884:277::-;10951:6;11004:2;10992:9;10983:7;10979:23;10975:32;10972:52;;;11020:1;11017;11010:12;10972:52;11052:9;11046:16;11105:5;11098:13;11091:21;11084:5;11081:32;11071:60;;11127:1;11124;11117:12;11984:274;12113:3;12151:6;12145:13;12167:53;12213:6;12208:3;12201:4;12193:6;12189:17;12167:53;:::i;:::-;12236:16;;;;;11984:274;-1:-1:-1;;11984:274:128:o",
    "linkReferences": {},
    "immutableReferences": {
      "57897": [
        {
          "start": 429,
          "length": 32
        },
        {
          "start": 1251,
          "length": 32
        },
        {
          "start": 2024,
          "length": 32
        },
        {
          "start": 2227,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "deposit(address,uint256)": "47e7ef24",
    "explanation()": "ab5921e1",
    "initialize(address,address)": "485cc955",
    "investmentManager()": "4b31bb10",
    "pause(uint256)": "136439dd",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "shares(address)": "ce7c2ac2",
    "sharesToUnderlying(uint256)": "f3e73875",
    "sharesToUnderlyingView(uint256)": "7a8b2637",
    "totalShares()": "3a98ef39",
    "underlyingToShares(uint256)": "8c871019",
    "underlyingToSharesView(uint256)": "e3dae51c",
    "underlyingToken()": "2495a599",
    "unpause(uint256)": "fabc1cbc",
    "userUnderlying(address)": "8f6a6240",
    "userUnderlyingView(address)": "553ca5f8",
    "withdraw(address,address,uint256)": "d9caed12"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"_investmentManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"explanation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_underlyingToken\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"investmentManager\",\"outputs\":[{\"internalType\":\"contract IInvestmentManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToSharesView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"details\":\"This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's `depositIntoStrategy` function, and individual share balances are recorded in the investmentManager as well.\",\"params\":{\"amount\":\"is the amount of token being deposited\",\"token\":\"is the ERC20 token being deposited\"},\"returns\":{\"newShares\":\"is the number of new shares issued at the current exchange ratio.\"}},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"sharesToUnderlying(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"}},\"sharesToUnderlyingView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"}},\"underlyingToShares(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"}},\"underlyingToSharesView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"}},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"withdraw(address,address,uint256)\":{\"details\":\"This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's other functions, and individual share balances are recorded in the investmentManager as well.\",\"params\":{\"amountShares\":\"is the amount of shares being withdrawn\",\"token\":\"is the ERC20 token being transferred out\"}}},\"title\":\"Base implementation of `IInvestmentStrategy` interface, designed to be inherited from by more complex strategies.\",\"version\":1},\"userdoc\":{\"events\":{\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Since this contract is designed to be initializable, the constructor simply sets `investmentManager`, the only immutable variable.\"},\"deposit(address,uint256)\":{\"notice\":\"Used to deposit tokens into this InvestmentStrategy\"},\"explanation()\":{\"notice\":\"Currently returns a brief string explaining the strategy's goal & purpose, but for more complex strategies, may be a link to metadata that explains in more detail.\"},\"initialize(address,address)\":{\"notice\":\"Sets the `underlyingToken` and `pauserRegistry` for the strategy.\"},\"investmentManager()\":{\"notice\":\"EigenLayer's InvestmentManager contract\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"shares(address)\":{\"notice\":\"convenience function for fetching the current total shares of `user` in this strategy, by querying the `investmentManager` contract\"},\"sharesToUnderlying(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\"},\"sharesToUnderlyingView(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications\"},\"totalShares()\":{\"notice\":\"The total number of extant shares in thie InvestmentStrategy\"},\"underlyingToShares(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications\"},\"underlyingToSharesView(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications\"},\"underlyingToken()\":{\"notice\":\"The underyling token for shares in this InvestmentStrategy\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract.\"},\"userUnderlying(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications\"},\"userUnderlyingView(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Used to withdraw tokens from this InvestmentStrategy, to the `depositor`'s address\"}},\"notice\":\"Simple, basic, \\\"do-nothing\\\" InvestmentStrategy that holds a single underlying token and returns it on withdrawals. Implements minimal versions of the IInvestmentStrategy functions, this contract is designed to be inherited by more complex investment strategies, which can then override its functions as necessary.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"../eignlayr-contracts/src/contracts/strategies/InvestmentStrategyBase.sol\":\"InvestmentStrategyBase\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@eigenlayer/=../eignlayr-contracts/src/\",\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/eignlayr-contracts/lib/ds-test/src/\",\":eignlayr-contracts/=lib/eignlayr-contracts/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/eignlayr-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/eignlayr-contracts/lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"../eignlayr-contracts/src/contracts/interfaces/IEigenLayrDelegation.sol\":{\"keccak256\":\"0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21\",\"dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5\"]},\"../eignlayr-contracts/src/contracts/interfaces/IInvestmentManager.sol\":{\"keccak256\":\"0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34\",\"dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw\"]},\"../eignlayr-contracts/src/contracts/interfaces/IInvestmentStrategy.sol\":{\"keccak256\":\"0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52\",\"dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob\"]},\"../eignlayr-contracts/src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c\",\"dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3\"]},\"../eignlayr-contracts/src/contracts/interfaces/IServiceManager.sol\":{\"keccak256\":\"0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2\",\"dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb\"]},\"../eignlayr-contracts/src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32\",\"dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr\"]},\"../eignlayr-contracts/src/contracts/strategies/InvestmentStrategyBase.sol\":{\"keccak256\":\"0x12588adda1d1f38acc67e9ea4f20daa144a20e44c4f596e432cd335a837776e8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://6a2707c597834660d841b49b4e74fd5a492dbd61fe98308389fc4034f569569c\",\"dweb:/ipfs/QmU8miWd1mr5UWrDwhzHoXYmxjnR7shwuJiPgxMhtMd35H\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935\",\"dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "_investmentManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newShares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "explanation",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_underlyingToken",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "investmentManager",
          "outputs": [
            {
              "internalType": "contract IInvestmentManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "shares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToSharesView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "userUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(address,uint256)": {
            "details": "This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's `depositIntoStrategy` function, and individual share balances are recorded in the investmentManager as well.",
            "params": {
              "amount": "is the amount of token being deposited",
              "token": "is the ERC20 token being deposited"
            },
            "returns": {
              "newShares": "is the number of new shares issued at the current exchange ratio."
            }
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "sharesToUnderlying(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            }
          },
          "sharesToUnderlyingView(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            }
          },
          "underlyingToShares(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            }
          },
          "underlyingToSharesView(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            }
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "withdraw(address,address,uint256)": {
            "details": "This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's other functions, and individual share balances are recorded in the investmentManager as well.",
            "params": {
              "amountShares": "is the amount of shares being withdrawn",
              "token": "is the ERC20 token being transferred out"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Since this contract is designed to be initializable, the constructor simply sets `investmentManager`, the only immutable variable."
          },
          "deposit(address,uint256)": {
            "notice": "Used to deposit tokens into this InvestmentStrategy"
          },
          "explanation()": {
            "notice": "Currently returns a brief string explaining the strategy's goal & purpose, but for more complex strategies, may be a link to metadata that explains in more detail."
          },
          "initialize(address,address)": {
            "notice": "Sets the `underlyingToken` and `pauserRegistry` for the strategy."
          },
          "investmentManager()": {
            "notice": "EigenLayer's InvestmentManager contract"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "shares(address)": {
            "notice": "convenience function for fetching the current total shares of `user` in this strategy, by querying the `investmentManager` contract"
          },
          "sharesToUnderlying(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications"
          },
          "sharesToUnderlyingView(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications"
          },
          "totalShares()": {
            "notice": "The total number of extant shares in thie InvestmentStrategy"
          },
          "underlyingToShares(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications"
          },
          "underlyingToSharesView(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications"
          },
          "underlyingToken()": {
            "notice": "The underyling token for shares in this InvestmentStrategy"
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract."
          },
          "userUnderlying(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
          },
          "userUnderlyingView(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
          },
          "withdraw(address,address,uint256)": {
            "notice": "Used to withdraw tokens from this InvestmentStrategy, to the `depositor`'s address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@eigenlayer/=../eignlayr-contracts/src/",
        ":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/eignlayr-contracts/lib/ds-test/src/",
        ":eignlayr-contracts/=lib/eignlayr-contracts/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/eignlayr-contracts/lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/eignlayr-contracts/lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "../eignlayr-contracts/src/contracts/strategies/InvestmentStrategyBase.sol": "InvestmentStrategyBase"
      },
      "libraries": {}
    },
    "sources": {
      "../eignlayr-contracts/src/contracts/interfaces/IEigenLayrDelegation.sol": {
        "keccak256": "0x9f11c0becde4111ac7d060dc11b9461888129076740cf78e07f292eefc92955e",
        "urls": [
          "bzz-raw://53bef92f10fd142e6b0af0f4f77a958c96ebea145492aa5328757e10fffd9c21",
          "dweb:/ipfs/QmUHG67pTyGxu6whsk95JNwevDJ7ooQMyeNT4kfwJtEzU5"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/interfaces/IInvestmentManager.sol": {
        "keccak256": "0xed8f5ee05ffbedbfe649dc7547339b3bc118edfe02825074341b0c474f776100",
        "urls": [
          "bzz-raw://44e9b0705f113e63a867b59bc292c7d5287968017b39ade9ef4c2b90d7f7dd34",
          "dweb:/ipfs/Qmc46ncEfH6wXKRz7zYKvkTGRhQSSDh6traUrttRFcP2tw"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/interfaces/IInvestmentStrategy.sol": {
        "keccak256": "0x69eb667cc856ee1fe783243b6db21a43a9dadd29bf6761727b334fca4366bceb",
        "urls": [
          "bzz-raw://224e8f6def4e53a1065f0c4ce26d8ffff15276944e2351753065aeb5bd265f52",
          "dweb:/ipfs/QmSu8iUPCnwza4SdE5jVSZLnQjMRXJg3VAGc8pHqbaMLob"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0xa74815553054d6feff0cbe94301e3b84127015ca419c256d9121569ccf4e5975",
        "urls": [
          "bzz-raw://b51815ca5271277622757aa7ca0e9ebdcb4fe47e62ef5b7ff9156d51fc60ad8c",
          "dweb:/ipfs/QmcfnujqU537GjYSmd7moKbVRn5AfhHTyhh7KXAAXbDyC3"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/interfaces/IServiceManager.sol": {
        "keccak256": "0xded81693805764888f8d1daa8afb600969d4286f3d5ecfa92e99b9446b400ad4",
        "urls": [
          "bzz-raw://8e0d0704fa8e64543abce318eaf99c53f75215db76cf873e6a6311a4eb5274b2",
          "dweb:/ipfs/Qmd96t8WrNFRY5fqsPtkCaz28j3mvZj3fpc4qp6xXe9wgb"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/permissions/Pausable.sol": {
        "keccak256": "0xfb11a7080a85056e1d602e97f19f77375b75fa48ea5e5dd6ee05caa5dbab9d04",
        "urls": [
          "bzz-raw://a4ffffa9a6eec39a0cd55c986974dfcaec448196ae5a2389d03745f4ca793b32",
          "dweb:/ipfs/QmchJc3TWvE4C2ECfaSVsaZNkCg1rqMvzwP7FXq6TBhiBr"
        ],
        "license": "UNLICENSED"
      },
      "../eignlayr-contracts/src/contracts/strategies/InvestmentStrategyBase.sol": {
        "keccak256": "0x12588adda1d1f38acc67e9ea4f20daa144a20e44c4f596e432cd335a837776e8",
        "urls": [
          "bzz-raw://6a2707c597834660d841b49b4e74fd5a492dbd61fe98308389fc4034f569569c",
          "dweb:/ipfs/QmU8miWd1mr5UWrDwhzHoXYmxjnR7shwuJiPgxMhtMd35H"
        ],
        "license": "UNLICENSED"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0xe798cadb41e2da274913e4b3183a80f50fb057a42238fe8467e077268100ec27",
        "urls": [
          "bzz-raw://899f850f7df5a270bccfb765d70069959ca1c20d3a7381c1c3bda8a3ffee1935",
          "dweb:/ipfs/QmVdnAqwyX2L3nX2HDA5WKGtVBFyH1nKE9A1k7fZnPBkhP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "../eignlayr-contracts/src/contracts/strategies/InvestmentStrategyBase.sol",
    "id": 58257,
    "exportedSymbols": {
      "Address": [
        41608
      ],
      "AddressUpgradeable": [
        39135
      ],
      "IERC20": [
        40863
      ],
      "IERC20Permit": [
        40968
      ],
      "IEigenLayrDelegation": [
        121
      ],
      "IInvestmentManager": [
        229
      ],
      "IInvestmentStrategy": [
        323
      ],
      "IPauserRegistry": [
        56111
      ],
      "IServiceManager": [
        577
      ],
      "Initializable": [
        38778
      ],
      "InvestmentStrategyBase": [
        58256
      ],
      "Pausable": [
        3650
      ],
      "SafeERC20": [
        41278
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:9992:29",
    "nodes": [
      {
        "id": 57871,
        "nodeType": "PragmaDirective",
        "src": "39:23:29",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 57872,
        "nodeType": "ImportDirective",
        "src": "64:46:29",
        "nodes": [],
        "absolutePath": "../eignlayr-contracts/src/contracts/interfaces/IInvestmentManager.sol",
        "file": "../interfaces/IInvestmentManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58257,
        "sourceUnit": 230,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57873,
        "nodeType": "ImportDirective",
        "src": "111:37:29",
        "nodes": [],
        "absolutePath": "../eignlayr-contracts/src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58257,
        "sourceUnit": 3651,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57874,
        "nodeType": "ImportDirective",
        "src": "149:56:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58257,
        "sourceUnit": 40864,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57875,
        "nodeType": "ImportDirective",
        "src": "206:65:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58257,
        "sourceUnit": 41279,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 57876,
        "nodeType": "ImportDirective",
        "src": "272:72:29",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 58257,
        "sourceUnit": 38779,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 58256,
        "nodeType": "ContractDefinition",
        "src": "836:9194:29",
        "nodes": [
          {
            "id": 57887,
            "nodeType": "UsingForDirective",
            "src": "922:27:29",
            "nodes": [],
            "libraryName": {
              "id": 57884,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41278,
              "src": "928:9:29"
            },
            "typeName": {
              "id": 57886,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57885,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40863,
                "src": "942:6:29"
              },
              "referencedDeclaration": 40863,
              "src": "942:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$40863",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 57890,
            "nodeType": "VariableDeclaration",
            "src": "955:43:29",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_DEPOSITS",
            "nameLocation": "979:15:29",
            "scope": 58256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 57888,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "955:5:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 57889,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "997:1:29",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 57893,
            "nodeType": "VariableDeclaration",
            "src": "1004:46:29",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_WITHDRAWALS",
            "nameLocation": "1028:18:29",
            "scope": 58256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 57891,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1004:5:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 57892,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1049:1:29",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 57897,
            "nodeType": "VariableDeclaration",
            "src": "1113:53:29",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 57894,
              "nodeType": "StructuredDocumentation",
              "src": "1057:51:29",
              "text": "@notice EigenLayer's InvestmentManager contract"
            },
            "functionSelector": "4b31bb10",
            "mutability": "immutable",
            "name": "investmentManager",
            "nameLocation": "1149:17:29",
            "scope": 58256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IInvestmentManager_$229",
              "typeString": "contract IInvestmentManager"
            },
            "typeName": {
              "id": 57896,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57895,
                "name": "IInvestmentManager",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 229,
                "src": "1113:18:29"
              },
              "referencedDeclaration": 229,
              "src": "1113:18:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                "typeString": "contract IInvestmentManager"
              }
            },
            "visibility": "public"
          },
          {
            "id": 57901,
            "nodeType": "VariableDeclaration",
            "src": "1248:29:29",
            "nodes": [],
            "baseFunctions": [
              310
            ],
            "constant": false,
            "documentation": {
              "id": 57898,
              "nodeType": "StructuredDocumentation",
              "src": "1173:70:29",
              "text": "@notice The underyling token for shares in this InvestmentStrategy"
            },
            "functionSelector": "2495a599",
            "mutability": "mutable",
            "name": "underlyingToken",
            "nameLocation": "1262:15:29",
            "scope": 58256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$40863",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 57900,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 57899,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40863,
                "src": "1248:6:29"
              },
              "referencedDeclaration": 40863,
              "src": "1248:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$40863",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 57904,
            "nodeType": "VariableDeclaration",
            "src": "1361:26:29",
            "nodes": [],
            "baseFunctions": [
              316
            ],
            "constant": false,
            "documentation": {
              "id": 57902,
              "nodeType": "StructuredDocumentation",
              "src": "1284:72:29",
              "text": "@notice The total number of extant shares in thie InvestmentStrategy"
            },
            "functionSelector": "3a98ef39",
            "mutability": "mutable",
            "name": "totalShares",
            "nameLocation": "1376:11:29",
            "scope": 58256,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 57903,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1361:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 57920,
            "nodeType": "ModifierDefinition",
            "src": "1528:158:29",
            "nodes": [],
            "body": {
              "id": 57919,
              "nodeType": "Block",
              "src": "1561:125:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 57914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 57908,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1579:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 57909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1579:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 57912,
                              "name": "investmentManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57897,
                              "src": "1601:17:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                                "typeString": "contract IInvestmentManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                                "typeString": "contract IInvestmentManager"
                              }
                            ],
                            "id": 57911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1593:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 57910,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1593:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 57913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1593:26:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1579:40:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e6f6e6c79496e766573746d656e744d616e61676572",
                        "id": 57915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1621:46:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ade1c97231e51a68f79b0420e31785a8d4f270b7332e8f1b995fd42c7737a72a",
                          "typeString": "literal_string \"InvestmentStrategyBase.onlyInvestmentManager\""
                        },
                        "value": "InvestmentStrategyBase.onlyInvestmentManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ade1c97231e51a68f79b0420e31785a8d4f270b7332e8f1b995fd42c7737a72a",
                          "typeString": "literal_string \"InvestmentStrategyBase.onlyInvestmentManager\""
                        }
                      ],
                      "id": 57907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1571:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 57916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1571:97:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57917,
                  "nodeType": "ExpressionStatement",
                  "src": "1571:97:29"
                },
                {
                  "id": 57918,
                  "nodeType": "PlaceholderStatement",
                  "src": "1678:1:29"
                }
              ]
            },
            "documentation": {
              "id": 57905,
              "nodeType": "StructuredDocumentation",
              "src": "1394:129:29",
              "text": "@notice Simply checks that the `msg.sender` is the `investmentManager`, which is an address stored immutably at construction."
            },
            "name": "onlyInvestmentManager",
            "nameLocation": "1537:21:29",
            "parameters": {
              "id": 57906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1558:2:29"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 57935,
            "nodeType": "FunctionDefinition",
            "src": "1839:138:29",
            "nodes": [],
            "body": {
              "id": 57934,
              "nodeType": "Block",
              "src": "1890:87:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 57929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57927,
                      "name": "investmentManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57897,
                      "src": "1900:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                        "typeString": "contract IInvestmentManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57928,
                      "name": "_investmentManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57924,
                      "src": "1920:18:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                        "typeString": "contract IInvestmentManager"
                      }
                    },
                    "src": "1900:38:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  "id": 57930,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:38:29"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 57931,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38759,
                      "src": "1948:20:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 57932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1948:22:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57933,
                  "nodeType": "ExpressionStatement",
                  "src": "1948:22:29"
                }
              ]
            },
            "documentation": {
              "id": 57921,
              "nodeType": "StructuredDocumentation",
              "src": "1692:142:29",
              "text": "@notice Since this contract is designed to be initializable, the constructor simply sets `investmentManager`, the only immutable variable."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 57925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57924,
                  "mutability": "mutable",
                  "name": "_investmentManager",
                  "nameLocation": "1870:18:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 57935,
                  "src": "1851:37:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                    "typeString": "contract IInvestmentManager"
                  },
                  "typeName": {
                    "id": 57923,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57922,
                      "name": "IInvestmentManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 229,
                      "src": "1851:18:29"
                    },
                    "referencedDeclaration": 229,
                    "src": "1851:18:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                      "typeString": "contract IInvestmentManager"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1850:39:29"
            },
            "returnParameters": {
              "id": 57926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:0:29"
            },
            "scope": 58256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 57957,
            "nodeType": "FunctionDefinition",
            "src": "2065:205:29",
            "nodes": [],
            "body": {
              "id": 57956,
              "nodeType": "Block",
              "src": "2162:108:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 57949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57947,
                      "name": "underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57901,
                      "src": "2172:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$40863",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57948,
                      "name": "_underlyingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57939,
                      "src": "2190:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$40863",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2172:34:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$40863",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 57950,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:34:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 57952,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57942,
                        "src": "2234:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$56111",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 57953,
                        "name": "UNPAUSE_ALL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3429,
                        "src": "2251:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$56111",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 57951,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3553,
                      "src": "2216:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$56111_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 57954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2216:47:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57955,
                  "nodeType": "ExpressionStatement",
                  "src": "2216:47:29"
                }
              ]
            },
            "documentation": {
              "id": 57936,
              "nodeType": "StructuredDocumentation",
              "src": "1983:77:29",
              "text": "@notice Sets the `underlyingToken` and `pauserRegistry` for the strategy."
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 57945,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 57944,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38680,
                  "src": "2150:11:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "2150:11:29"
              }
            ],
            "name": "initialize",
            "nameLocation": "2074:10:29",
            "parameters": {
              "id": 57943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57939,
                  "mutability": "mutable",
                  "name": "_underlyingToken",
                  "nameLocation": "2092:16:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 57957,
                  "src": "2085:23:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$40863",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 57938,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57937,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40863,
                      "src": "2085:6:29"
                    },
                    "referencedDeclaration": 40863,
                    "src": "2085:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$40863",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57942,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "2126:15:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 57957,
                  "src": "2110:31:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$56111",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 57941,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57940,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56111,
                      "src": "2110:15:29"
                    },
                    "referencedDeclaration": 56111,
                    "src": "2110:15:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$56111",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2084:58:29"
            },
            "returnParameters": {
              "id": 57946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2162:0:29"
            },
            "scope": 58256,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 58019,
            "nodeType": "FunctionDefinition",
            "src": "2807:938:29",
            "nodes": [],
            "body": {
              "id": 58018,
              "nodeType": "Block",
              "src": "3017:728:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$40863",
                          "typeString": "contract IERC20"
                        },
                        "id": 57977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 57975,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57961,
                          "src": "3035:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$40863",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 57976,
                          "name": "underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57901,
                          "src": "3044:15:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$40863",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "3035:24:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e6465706f7369743a2043616e206f6e6c79206465706f73697420756e6465726c79696e67546f6b656e",
                        "id": 57978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3061:66:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c8993c32c7ea45dc431c4c0aec3c353d9c5fd16285693d311f15a6f5ecc0144",
                          "typeString": "literal_string \"InvestmentStrategyBase.deposit: Can only deposit underlyingToken\""
                        },
                        "value": "InvestmentStrategyBase.deposit: Can only deposit underlyingToken"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c8993c32c7ea45dc431c4c0aec3c353d9c5fd16285693d311f15a6f5ecc0144",
                          "typeString": "literal_string \"InvestmentStrategyBase.deposit: Can only deposit underlyingToken\""
                        }
                      ],
                      "id": 57974,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3027:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 57979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:101:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57980,
                  "nodeType": "ExpressionStatement",
                  "src": "3027:101:29"
                },
                {
                  "assignments": [
                    57983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 57983,
                      "mutability": "mutable",
                      "name": "priorTokenBalance",
                      "nameLocation": "3448:17:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 58018,
                      "src": "3440:25:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 57982,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3440:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @notice calculation of newShares *mirrors* `underlyingToShares(amount)`, but is different since the balance of `underlyingToken`\n has already been increased due to the `investmentManager` transferring tokens to this strategy prior to calling this function",
                  "id": 57988,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 57984,
                        "name": "_tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58255,
                        "src": "3468:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 57985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3468:15:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 57986,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57963,
                      "src": "3486:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3468:24:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3440:52:29"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 57995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 57991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 57989,
                        "name": "priorTokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57983,
                        "src": "3506:17:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 57990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3527:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3506:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 57994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 57992,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57904,
                        "src": "3532:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 57993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3547:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3532:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3506:42:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 58010,
                    "nodeType": "Block",
                    "src": "3599:79:29",
                    "statements": [
                      {
                        "expression": {
                          "id": 58008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 58001,
                            "name": "newShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57972,
                            "src": "3613:9:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 58007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 58004,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 58002,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 57963,
                                    "src": "3626:6:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 58003,
                                    "name": "totalShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 57904,
                                    "src": "3635:11:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3626:20:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 58005,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3625:22:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 58006,
                              "name": "priorTokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57983,
                              "src": "3650:17:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3625:42:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3613:54:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 58009,
                        "nodeType": "ExpressionStatement",
                        "src": "3613:54:29"
                      }
                    ]
                  },
                  "id": 58011,
                  "nodeType": "IfStatement",
                  "src": "3502:176:29",
                  "trueBody": {
                    "id": 58000,
                    "nodeType": "Block",
                    "src": "3550:43:29",
                    "statements": [
                      {
                        "expression": {
                          "id": 57998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 57996,
                            "name": "newShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57972,
                            "src": "3564:9:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 57997,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57963,
                            "src": "3576:6:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3564:18:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 57999,
                        "nodeType": "ExpressionStatement",
                        "src": "3564:18:29"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 58014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 58012,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57904,
                      "src": "3688:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 58013,
                      "name": "newShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57972,
                      "src": "3703:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3688:24:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 58015,
                  "nodeType": "ExpressionStatement",
                  "src": "3688:24:29"
                },
                {
                  "expression": {
                    "id": 58016,
                    "name": "newShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 57972,
                    "src": "3729:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 57973,
                  "id": 58017,
                  "nodeType": "Return",
                  "src": "3722:16:29"
                }
              ]
            },
            "baseFunctions": [
              244
            ],
            "documentation": {
              "id": 57958,
              "nodeType": "StructuredDocumentation",
              "src": "2276:526:29",
              "text": " @notice Used to deposit tokens into this InvestmentStrategy\n @param token is the ERC20 token being deposited\n @param amount is the amount of token being deposited\n @dev This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's\n `depositIntoStrategy` function, and individual share balances are recorded in the investmentManager as well.\n @return newShares is the number of new shares issued at the current exchange ratio."
            },
            "functionSelector": "47e7ef24",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 57967,
                    "name": "PAUSED_DEPOSITS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 57890,
                    "src": "2930:15:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 57968,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 57966,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3506,
                  "src": "2912:17:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "2912:34:29"
              },
              {
                "id": 57970,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 57969,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57920,
                  "src": "2955:21:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "2955:21:29"
              }
            ],
            "name": "deposit",
            "nameLocation": "2816:7:29",
            "overrides": {
              "id": 57965,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2895:8:29"
            },
            "parameters": {
              "id": 57964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57961,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2831:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58019,
                  "src": "2824:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$40863",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 57960,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 57959,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40863,
                      "src": "2824:6:29"
                    },
                    "referencedDeclaration": 40863,
                    "src": "2824:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$40863",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57963,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2846:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58019,
                  "src": "2838:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2838:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2823:30:29"
            },
            "returnParameters": {
              "id": 57973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57972,
                  "mutability": "mutable",
                  "name": "newShares",
                  "nameLocation": "3002:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58019,
                  "src": "2994:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2994:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2993:19:29"
            },
            "scope": 58256,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 58092,
            "nodeType": "FunctionDefinition",
            "src": "4220:1272:29",
            "nodes": [],
            "body": {
              "id": 58091,
              "nodeType": "Block",
              "src": "4423:1069:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20_$40863",
                          "typeString": "contract IERC20"
                        },
                        "id": 58039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58037,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58025,
                          "src": "4441:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$40863",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 58038,
                          "name": "underlyingToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57901,
                          "src": "4450:15:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$40863",
                            "typeString": "contract IERC20"
                          }
                        },
                        "src": "4441:24:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e77697468647261773a2043616e206f6e6c792077697468647261772074686520737472617465677920746f6b656e",
                        "id": 58040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4467:71:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a90debadbc5bcdf3cff330f9ff50f57f952db4ddab1ffc4089964ab007a957f",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: Can only withdraw the strategy token\""
                        },
                        "value": "InvestmentStrategyBase.withdraw: Can only withdraw the strategy token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a90debadbc5bcdf3cff330f9ff50f57f952db4ddab1ffc4089964ab007a957f",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: Can only withdraw the strategy token\""
                        }
                      ],
                      "id": 58036,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4433:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4433:106:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58042,
                  "nodeType": "ExpressionStatement",
                  "src": "4433:106:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 58044,
                          "name": "amountShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58027,
                          "src": "4570:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 58045,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57904,
                          "src": "4586:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4570:27:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e766573746d656e745374726174656779426173652e77697468647261773a20616d6f756e74536861726573206d757374206265206c657373207468616e206f7220657175616c20746f20746f74616c536861726573",
                        "id": 58047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4611:89:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba9d105d4923e014e34f881482365c00a19e3627998c5d0f777a0f8d065e1d44",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: amountShares must be less than or equal to totalShares\""
                        },
                        "value": "InvestmentStrategyBase.withdraw: amountShares must be less than or equal to totalShares"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba9d105d4923e014e34f881482365c00a19e3627998c5d0f777a0f8d065e1d44",
                          "typeString": "literal_string \"InvestmentStrategyBase.withdraw: amountShares must be less than or equal to totalShares\""
                        }
                      ],
                      "id": 58043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4549:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4549:161:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58049,
                  "nodeType": "ExpressionStatement",
                  "src": "4549:161:29"
                },
                {
                  "assignments": [
                    58051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58051,
                      "mutability": "mutable",
                      "name": "priorTotalShares",
                      "nameLocation": "4782:16:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 58091,
                      "src": "4774:24:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58050,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4774:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58053,
                  "initialValue": {
                    "id": 58052,
                    "name": "totalShares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 57904,
                    "src": "4801:11:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4774:38:29"
                },
                {
                  "id": 58058,
                  "nodeType": "UncheckedBlock",
                  "src": "4934:62:29",
                  "statements": [
                    {
                      "expression": {
                        "id": 58056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 58054,
                          "name": "totalShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57904,
                          "src": "4958:11:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 58055,
                          "name": "amountShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58027,
                          "src": "4973:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4958:27:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 58057,
                      "nodeType": "ExpressionStatement",
                      "src": "4958:27:29"
                    }
                  ]
                },
                {
                  "assignments": [
                    58061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58061,
                      "mutability": "mutable",
                      "name": "amountToSend",
                      "nameLocation": "5211:12:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 58091,
                      "src": "5203:20:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58060,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5203:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @notice calculation of amountToSend *mirrors* `sharesToUnderlying(amountShares)`, but is different since the `totalShares` has already\n been decremented",
                  "id": 58062,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5203:20:29"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 58065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 58063,
                      "name": "priorTotalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58051,
                      "src": "5237:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 58064,
                      "name": "amountShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58027,
                      "src": "5257:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5237:32:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 58082,
                    "nodeType": "Block",
                    "src": "5332:91:29",
                    "statements": [
                      {
                        "expression": {
                          "id": 58080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 58072,
                            "name": "amountToSend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58061,
                            "src": "5346:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 58079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 58076,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 58073,
                                      "name": "_tokenBalance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 58255,
                                      "src": "5362:13:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 58074,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5362:15:29",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 58075,
                                    "name": "amountShares",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58027,
                                    "src": "5380:12:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5362:30:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 58077,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5361:32:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 58078,
                              "name": "priorTotalShares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58051,
                              "src": "5396:16:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5361:51:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5346:66:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 58081,
                        "nodeType": "ExpressionStatement",
                        "src": "5346:66:29"
                      }
                    ]
                  },
                  "id": 58083,
                  "nodeType": "IfStatement",
                  "src": "5233:190:29",
                  "trueBody": {
                    "id": 58071,
                    "nodeType": "Block",
                    "src": "5271:55:29",
                    "statements": [
                      {
                        "expression": {
                          "id": 58069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 58066,
                            "name": "amountToSend",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58061,
                            "src": "5285:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 58067,
                              "name": "_tokenBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58255,
                              "src": "5300:13:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 58068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5300:15:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5285:30:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 58070,
                        "nodeType": "ExpressionStatement",
                        "src": "5285:30:29"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58087,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58022,
                        "src": "5461:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 58088,
                        "name": "amountToSend",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58061,
                        "src": "5472:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 58084,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57901,
                        "src": "5432:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$40863",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 58086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41029,
                      "src": "5432:28:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$40863_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$40863_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 58089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5432:53:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58090,
                  "nodeType": "ExpressionStatement",
                  "src": "5432:53:29"
                }
              ]
            },
            "baseFunctions": [
              255
            ],
            "documentation": {
              "id": 58020,
              "nodeType": "StructuredDocumentation",
              "src": "3751:464:29",
              "text": " @notice Used to withdraw tokens from this InvestmentStrategy, to the `depositor`'s address\n @param token is the ERC20 token being transferred out\n @param amountShares is the amount of shares being withdrawn\n @dev This function is only callable by the investmentManager contract. It is invoked inside of the investmentManager's\n other functions, and individual share balances are recorded in the investmentManager as well."
            },
            "functionSelector": "d9caed12",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 58031,
                    "name": "PAUSED_WITHDRAWALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 57893,
                    "src": "4369:18:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 58032,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 58030,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3506,
                  "src": "4351:17:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "4351:37:29"
              },
              {
                "id": 58034,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 58033,
                  "name": "onlyInvestmentManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57920,
                  "src": "4397:21:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "4397:21:29"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4229:8:29",
            "overrides": {
              "id": 58029,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4334:8:29"
            },
            "parameters": {
              "id": 58028,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58022,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "4246:9:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58092,
                  "src": "4238:17:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4238:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58025,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "4264:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58092,
                  "src": "4257:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$40863",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 58024,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 58023,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 40863,
                      "src": "4257:6:29"
                    },
                    "referencedDeclaration": 40863,
                    "src": "4257:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$40863",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58027,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "4279:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58092,
                  "src": "4271:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58026,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4271:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4237:55:29"
            },
            "returnParameters": {
              "id": 58035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4423:0:29"
            },
            "scope": 58256,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 58102,
            "nodeType": "FunctionDefinition",
            "src": "5700:191:29",
            "nodes": [],
            "body": {
              "id": 58101,
              "nodeType": "Block",
              "src": "5778:113:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "4261736520496e766573746d656e74537472617465677920696d706c656d656e746174696f6e20746f20696e68657269742066726f6d20666f72206d6f726520636f6d706c657820696d706c656d656e746174696f6e73",
                    "id": 58099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5795:89:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_087d69029beb240e992612e3de4c8ab4dd02c5ed9901d76a1d88f4d241dfc48b",
                      "typeString": "literal_string \"Base InvestmentStrategy implementation to inherit from for more complex implementations\""
                    },
                    "value": "Base InvestmentStrategy implementation to inherit from for more complex implementations"
                  },
                  "functionReturnParameters": 58098,
                  "id": 58100,
                  "nodeType": "Return",
                  "src": "5788:96:29"
                }
              ]
            },
            "baseFunctions": [
              322
            ],
            "documentation": {
              "id": 58093,
              "nodeType": "StructuredDocumentation",
              "src": "5498:197:29",
              "text": " @notice Currently returns a brief string explaining the strategy's goal & purpose, but for more complex\n strategies, may be a link to metadata that explains in more detail."
            },
            "functionSelector": "ab5921e1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "explanation",
            "nameLocation": "5709:11:29",
            "overrides": {
              "id": 58095,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5745:8:29"
            },
            "parameters": {
              "id": 58094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5720:2:29"
            },
            "returnParameters": {
              "id": 58098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58097,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58102,
                  "src": "5763:13:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 58096,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5763:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5762:15:29"
            },
            "scope": 58256,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 58128,
            "nodeType": "FunctionDefinition",
            "src": "6341:267:29",
            "nodes": [],
            "body": {
              "id": 58127,
              "nodeType": "Block",
              "src": "6442:166:29",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 58113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 58111,
                      "name": "totalShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57904,
                      "src": "6456:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 58112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6471:1:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6456:16:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 58125,
                    "nodeType": "Block",
                    "src": "6524:78:29",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 58123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 58120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 58117,
                                    "name": "_tokenBalance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 58255,
                                    "src": "6546:13:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 58118,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6546:15:29",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 58119,
                                  "name": "amountShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58105,
                                  "src": "6564:12:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6546:30:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 58121,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "6545:32:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 58122,
                            "name": "totalShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57904,
                            "src": "6580:11:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6545:46:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 58110,
                        "id": 58124,
                        "nodeType": "Return",
                        "src": "6538:53:29"
                      }
                    ]
                  },
                  "id": 58126,
                  "nodeType": "IfStatement",
                  "src": "6452:150:29",
                  "trueBody": {
                    "id": 58116,
                    "nodeType": "Block",
                    "src": "6474:44:29",
                    "statements": [
                      {
                        "expression": {
                          "id": 58114,
                          "name": "amountShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58105,
                          "src": "6495:12:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 58110,
                        "id": 58115,
                        "nodeType": "Return",
                        "src": "6488:19:29"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              287
            ],
            "documentation": {
              "id": 58103,
              "nodeType": "StructuredDocumentation",
              "src": "5897:439:29",
              "text": " @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlying`, this function guarantees no state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "7a8b2637",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sharesToUnderlyingView",
            "nameLocation": "6350:22:29",
            "overrides": {
              "id": 58107,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6415:8:29"
            },
            "parameters": {
              "id": 58106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58105,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "6381:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58128,
                  "src": "6373:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6373:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6372:22:29"
            },
            "returnParameters": {
              "id": 58110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58128,
                  "src": "6433:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6433:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6432:9:29"
            },
            "scope": 58256,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 58142,
            "nodeType": "FunctionDefinition",
            "src": "7061:157:29",
            "nodes": [],
            "body": {
              "id": 58141,
              "nodeType": "Block",
              "src": "7158:60:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58138,
                        "name": "amountShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58131,
                        "src": "7198:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58137,
                      "name": "sharesToUnderlyingView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58128,
                      "src": "7175:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 58139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7175:36:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 58136,
                  "id": 58140,
                  "nodeType": "Return",
                  "src": "7168:43:29"
                }
              ]
            },
            "baseFunctions": [
              263
            ],
            "documentation": {
              "id": 58129,
              "nodeType": "StructuredDocumentation",
              "src": "6614:442:29",
              "text": " @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "f3e73875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sharesToUnderlying",
            "nameLocation": "7070:18:29",
            "overrides": {
              "id": 58133,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7131:8:29"
            },
            "parameters": {
              "id": 58132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58131,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "7097:12:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58142,
                  "src": "7089:20:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7089:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7088:22:29"
            },
            "returnParameters": {
              "id": 58136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58142,
                  "src": "7149:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7149:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7148:9:29"
            },
            "scope": 58256,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 58175,
            "nodeType": "FunctionDefinition",
            "src": "7678:336:29",
            "nodes": [],
            "body": {
              "id": 58174,
              "nodeType": "Block",
              "src": "7774:240:29",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58151,
                      "mutability": "mutable",
                      "name": "tokenBalance",
                      "nameLocation": "7792:12:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 58174,
                      "src": "7784:20:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58150,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7784:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 58154,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 58152,
                      "name": "_tokenBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58255,
                      "src": "7807:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 58153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7807:15:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7784:38:29"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 58161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 58157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 58155,
                        "name": "tokenBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58151,
                        "src": "7836:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 58156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7852:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7836:17:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 58160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 58158,
                        "name": "totalShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57904,
                        "src": "7857:11:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 58159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7872:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7857:16:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7836:37:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 58172,
                    "nodeType": "Block",
                    "src": "7929:79:29",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 58170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 58167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 58165,
                                  "name": "amountUnderlying",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 58145,
                                  "src": "7951:16:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 58166,
                                  "name": "totalShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57904,
                                  "src": "7970:11:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7951:30:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 58168,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7950:32:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 58169,
                            "name": "tokenBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58151,
                            "src": "7985:12:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7950:47:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 58149,
                        "id": 58171,
                        "nodeType": "Return",
                        "src": "7943:54:29"
                      }
                    ]
                  },
                  "id": 58173,
                  "nodeType": "IfStatement",
                  "src": "7832:176:29",
                  "trueBody": {
                    "id": 58164,
                    "nodeType": "Block",
                    "src": "7875:48:29",
                    "statements": [
                      {
                        "expression": {
                          "id": 58162,
                          "name": "amountUnderlying",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58145,
                          "src": "7896:16:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 58149,
                        "id": 58163,
                        "nodeType": "Return",
                        "src": "7889:23:29"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              295
            ],
            "documentation": {
              "id": 58143,
              "nodeType": "StructuredDocumentation",
              "src": "7224:449:29",
              "text": " @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToShares`, this function guarantees no state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "e3dae51c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToSharesView",
            "nameLocation": "7687:22:29",
            "parameters": {
              "id": 58146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58145,
                  "mutability": "mutable",
                  "name": "amountUnderlying",
                  "nameLocation": "7718:16:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58175,
                  "src": "7710:24:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7710:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7709:26:29"
            },
            "returnParameters": {
              "id": 58149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58148,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58175,
                  "src": "7765:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7765:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7764:9:29"
            },
            "scope": 58256,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 58188,
            "nodeType": "FunctionDefinition",
            "src": "8477:158:29",
            "nodes": [],
            "body": {
              "id": 58187,
              "nodeType": "Block",
              "src": "8571:64:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58184,
                        "name": "amountUnderlying",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58178,
                        "src": "8611:16:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58183,
                      "name": "underlyingToSharesView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58175,
                      "src": "8588:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 58185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8588:40:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 58182,
                  "id": 58186,
                  "nodeType": "Return",
                  "src": "8581:47:29"
                }
              ]
            },
            "baseFunctions": [
              271
            ],
            "documentation": {
              "id": 58176,
              "nodeType": "StructuredDocumentation",
              "src": "8020:452:29",
              "text": " @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToSharesView`, this function **may** make state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "8c871019",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToShares",
            "nameLocation": "8486:18:29",
            "parameters": {
              "id": 58179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58178,
                  "mutability": "mutable",
                  "name": "amountUnderlying",
                  "nameLocation": "8513:16:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58188,
                  "src": "8505:24:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8505:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8504:26:29"
            },
            "returnParameters": {
              "id": 58182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58181,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58188,
                  "src": "8562:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58180,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8562:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8561:9:29"
            },
            "scope": 58256,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 58203,
            "nodeType": "FunctionDefinition",
            "src": "8871:142:29",
            "nodes": [],
            "body": {
              "id": 58202,
              "nodeType": "Block",
              "src": "8953:60:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58198,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58191,
                            "src": "9000:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58197,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58240,
                          "src": "8993:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 58199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8993:12:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58196,
                      "name": "sharesToUnderlyingView",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58128,
                      "src": "8970:22:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 58200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8970:36:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 58195,
                  "id": 58201,
                  "nodeType": "Return",
                  "src": "8963:43:29"
                }
              ]
            },
            "baseFunctions": [
              303
            ],
            "documentation": {
              "id": 58189,
              "nodeType": "StructuredDocumentation",
              "src": "8641:225:29",
              "text": " @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
            },
            "functionSelector": "553ca5f8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userUnderlyingView",
            "nameLocation": "8880:18:29",
            "parameters": {
              "id": 58192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58191,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "8907:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58203,
                  "src": "8899:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8899:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8898:14:29"
            },
            "returnParameters": {
              "id": 58195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58194,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58203,
                  "src": "8944:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8944:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8943:9:29"
            },
            "scope": 58256,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 58218,
            "nodeType": "FunctionDefinition",
            "src": "9252:129:29",
            "nodes": [],
            "body": {
              "id": 58217,
              "nodeType": "Block",
              "src": "9325:56:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58213,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58206,
                            "src": "9368:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58212,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58240,
                          "src": "9361:6:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 58214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9361:12:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 58211,
                      "name": "sharesToUnderlying",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58142,
                      "src": "9342:18:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 58215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9342:32:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 58210,
                  "id": 58216,
                  "nodeType": "Return",
                  "src": "9335:39:29"
                }
              ]
            },
            "baseFunctions": [
              279
            ],
            "documentation": {
              "id": 58204,
              "nodeType": "StructuredDocumentation",
              "src": "9019:228:29",
              "text": " @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
            },
            "functionSelector": "8f6a6240",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userUnderlying",
            "nameLocation": "9261:14:29",
            "parameters": {
              "id": 58207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58206,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9284:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58218,
                  "src": "9276:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9276:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9275:14:29"
            },
            "returnParameters": {
              "id": 58210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58218,
                  "src": "9316:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9316:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9315:9:29"
            },
            "scope": 58256,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 58240,
            "nodeType": "FunctionDefinition",
            "src": "9557:191:29",
            "nodes": [],
            "body": {
              "id": 58239,
              "nodeType": "Block",
              "src": "9625:123:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 58230,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58221,
                        "src": "9700:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 58234,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9734:4:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_InvestmentStrategyBase_$58256",
                                  "typeString": "contract InvestmentStrategyBase"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_InvestmentStrategyBase_$58256",
                                  "typeString": "contract InvestmentStrategyBase"
                                }
                              ],
                              "id": 58233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9726:7:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 58232,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9726:7:29",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 58235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9726:13:29",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 58231,
                          "name": "IInvestmentStrategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 323,
                          "src": "9706:19:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IInvestmentStrategy_$323_$",
                            "typeString": "type(contract IInvestmentStrategy)"
                          }
                        },
                        "id": 58236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9706:34:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                          "typeString": "contract IInvestmentStrategy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IInvestmentStrategy_$323",
                          "typeString": "contract IInvestmentStrategy"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 58227,
                            "name": "investmentManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57897,
                            "src": "9661:17:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                              "typeString": "contract IInvestmentManager"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                              "typeString": "contract IInvestmentManager"
                            }
                          ],
                          "id": 58226,
                          "name": "IInvestmentManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "9642:18:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IInvestmentManager_$229_$",
                            "typeString": "type(contract IInvestmentManager)"
                          }
                        },
                        "id": 58228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9642:37:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvestmentManager_$229",
                          "typeString": "contract IInvestmentManager"
                        }
                      },
                      "id": 58229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "investorStratShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 200,
                      "src": "9642:57:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_contract$_IInvestmentStrategy_$323_$returns$_t_uint256_$",
                        "typeString": "function (address,contract IInvestmentStrategy) view external returns (uint256)"
                      }
                    },
                    "id": 58237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9642:99:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 58225,
                  "id": 58238,
                  "nodeType": "Return",
                  "src": "9635:106:29"
                }
              ]
            },
            "documentation": {
              "id": 58219,
              "nodeType": "StructuredDocumentation",
              "src": "9387:165:29",
              "text": " @notice convenience function for fetching the current total shares of `user` in this strategy, by\n querying the `investmentManager` contract"
            },
            "functionSelector": "ce7c2ac2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "shares",
            "nameLocation": "9566:6:29",
            "parameters": {
              "id": 58222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58221,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9581:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 58240,
                  "src": "9573:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9573:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9572:14:29"
            },
            "returnParameters": {
              "id": 58225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58224,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58240,
                  "src": "9616:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9616:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9615:9:29"
            },
            "scope": 58256,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 58255,
            "nodeType": "FunctionDefinition",
            "src": "9899:129:29",
            "nodes": [],
            "body": {
              "id": 58254,
              "nodeType": "Block",
              "src": "9964:64:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 58250,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10015:4:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_InvestmentStrategyBase_$58256",
                              "typeString": "contract InvestmentStrategyBase"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_InvestmentStrategyBase_$58256",
                              "typeString": "contract InvestmentStrategyBase"
                            }
                          ],
                          "id": 58249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10007:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 58248,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10007:7:29",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 58251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10007:13:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 58246,
                        "name": "underlyingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57901,
                        "src": "9981:15:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$40863",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 58247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40820,
                      "src": "9981:25:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 58252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9981:40:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 58245,
                  "id": 58253,
                  "nodeType": "Return",
                  "src": "9974:47:29"
                }
              ]
            },
            "documentation": {
              "id": 58241,
              "nodeType": "StructuredDocumentation",
              "src": "9754:97:29",
              "text": "@notice Internal function used to fetch this contract's current balance of `underlyingToken`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_tokenBalance",
            "nameLocation": "9908:13:29",
            "parameters": {
              "id": 58242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9921:2:29"
            },
            "returnParameters": {
              "id": 58245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58244,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 58255,
                  "src": "9955:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9955:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9954:9:29"
            },
            "scope": 58256,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57878,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38778,
              "src": "871:13:29"
            },
            "id": 57879,
            "nodeType": "InheritanceSpecifier",
            "src": "871:13:29"
          },
          {
            "baseName": {
              "id": 57880,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3650,
              "src": "886:8:29"
            },
            "id": 57881,
            "nodeType": "InheritanceSpecifier",
            "src": "886:8:29"
          },
          {
            "baseName": {
              "id": 57882,
              "name": "IInvestmentStrategy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 323,
              "src": "896:19:29"
            },
            "id": 57883,
            "nodeType": "InheritanceSpecifier",
            "src": "896:19:29"
          }
        ],
        "canonicalName": "InvestmentStrategyBase",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 57877,
          "nodeType": "StructuredDocumentation",
          "src": "346:489:29",
          "text": " @title Base implementation of `IInvestmentStrategy` interface, designed to be inherited from by more complex strategies.\n @author Layr Labs, Inc.\n @notice Simple, basic, \"do-nothing\" InvestmentStrategy that holds a single underlying token and returns it on withdrawals.\n Implements minimal versions of the IInvestmentStrategy functions, this contract is designed to be inherited by\n more complex investment strategies, which can then override its functions as necessary."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          58256,
          323,
          3650,
          38778
        ],
        "name": "InvestmentStrategyBase",
        "nameLocation": "845:22:29",
        "scope": 58257,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 29
}