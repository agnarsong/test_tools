/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  L1StandardBridgeUpgrade,
  L1StandardBridgeUpgradeInterface,
} from "../../../contracts/test-helpers/L1StandardBridgeUpgrade";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ERC20DepositInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ERC20WithdrawalFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ETHDepositInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "ETHWithdrawalFinalized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositERC20To",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_l2Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "depositETHTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "donateETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeERC20Withdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeETHWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeMantleWithdrawal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1messenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2TokenBridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1MantleAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l1MantleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2TokenBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191690556116f3806100306000396000f3fe6080604052600436106100e15760003560e01c80638f601f661161007f578063a9f9e67511610059578063a9f9e67514610285578063b1a1a882146102a5578063c0c53b8b146102b8578063f82b418e146102d857600080fd5b80638f601f661461020c57806391c49bf8146102525780639a2ac6d51461027257600080fd5b80633cb747bf116100bb5780633cb747bf146101ac57806358a997f6146101cc578063838b2520146101ec5780638b4c40b01461012c57600080fd5b80630d8e6e2c146101335780631532ec3414610154578063331518481461017457600080fd5b3661012e57333b1561010e5760405162461bcd60e51b815260040161010590610fc1565b60405180910390fd5b61012c333362030d40604051806020016040528060008152506102f8565b005b600080fd5b34801561013f57600080fd5b50604051600281526020015b60405180910390f35b34801561016057600080fd5b5061012c61016f36600461104b565b6103d2565b34801561018057600080fd5b50600254610194906001600160a01b031681565b6040516001600160a01b03909116815260200161014b565b3480156101b857600080fd5b50600054610194906001600160a01b031681565b3480156101d857600080fd5b5061012c6101e73660046110d7565b610604565b3480156101f857600080fd5b5061012c61020736600461115a565b61063b565b34801561021857600080fd5b506102446102273660046111f0565b600360209081526000928352604080842090915290825290205481565b60405190815260200161014b565b34801561025e57600080fd5b50600154610194906001600160a01b031681565b61012c610280366004611229565b610654565b34801561029157600080fd5b5061012c6102a036600461128c565b61069c565b61012c6102b3366004611305565b610869565b3480156102c457600080fd5b5061012c6102d3366004611358565b6108cf565b3480156102e457600080fd5b5061012c6102f336600461104b565b610976565b600063662a633a60e01b600073deaddeaddeaddeaddeaddeaddeaddeaddead111187873487604051602401610332969594939291906113fb565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915260015490915061037e906001600160a01b03168483610aa5565b836001600160a01b0316856001600160a01b03167f35d79ab81f2b2017e19afb5c5571778877782d7a8786f5907f93b0f4702f4f2334856040516103c392919061144a565b60405180910390a35050505050565b6001546001600160a01b03166103f06000546001600160a01b031690565b6001600160a01b0316336001600160a01b0316146104205760405162461bcd60e51b815260040161010590611463565b806001600160a01b031661043c6000546001600160a01b031690565b6001600160a01b0316636e296e456040518163ffffffff1660e01b815260040160206040518083038186803b15801561047457600080fd5b505afa158015610488573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ac91906114b1565b6001600160a01b0316146104d25760405162461bcd60e51b8152600401610105906114ce565b604080516000808252602082019092526001600160a01b0387169086906040516104fc919061151e565b60006040518083038185875af1925050503d8060008114610539576040519150601f19603f3d011682016040523d82523d6000602084013e61053e565b606091505b50509050806105ac5760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b6064820152608401610105565b856001600160a01b0316876001600160a01b03167f2ac69ee804d9a7a0984249f508dfab7cb2534b465b6ce1580f99a38ba9c5e6318787876040516105f393929190611563565b60405180910390a350505050505050565b333b156106235760405162461bcd60e51b815260040161010590610fc1565b6106338686333388888888610b07565b505050505050565b61064b8787338888888888610b07565b50505050505050565b61069633858585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102f892505050565b50505050565b6001546001600160a01b03166106ba6000546001600160a01b031690565b6001600160a01b0316336001600160a01b0316146106ea5760405162461bcd60e51b815260040161010590611463565b806001600160a01b03166107066000546001600160a01b031690565b6001600160a01b0316636e296e456040518163ffffffff1660e01b815260040160206040518083038186803b15801561073e57600080fd5b505afa158015610752573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077691906114b1565b6001600160a01b03161461079c5760405162461bcd60e51b8152600401610105906114ce565b6001600160a01b038089166000908152600360209081526040808320938b16835292905220546107cd90859061159c565b6001600160a01b03808a166000818152600360209081526040808320948d1683529390529190912091909155610804908686610cda565b856001600160a01b0316876001600160a01b0316896001600160a01b03167f3ceee06c1e37648fcbb6ed52e17b3e1f275a1f8c7b22a84b2b84732431e046b38888888860405161085794939291906115b3565b60405180910390a45050505050505050565b333b156108885760405162461bcd60e51b815260040161010590610fc1565b6108ca33338585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506102f892505050565b505050565b6000546001600160a01b0316156109375760405162461bcd60e51b815260206004820152602660248201527f436f6e74726163742068617320616c7265616479206265656e20696e697469616044820152653634bd32b21760d11b6064820152608401610105565b600080546001600160a01b039485166001600160a01b031991821617909155600180549385169382169390931790925560028054919093169116179055565b6001546001600160a01b03166109946000546001600160a01b031690565b6001600160a01b0316336001600160a01b0316146109c45760405162461bcd60e51b815260040161010590611463565b806001600160a01b03166109e06000546001600160a01b031690565b6001600160a01b0316636e296e456040518163ffffffff1660e01b815260040160206040518083038186803b158015610a1857600080fd5b505afa158015610a2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5091906114b1565b6001600160a01b031614610a765760405162461bcd60e51b8152600401610105906114ce565b600254610633906001600160a01b031673deaddeaddeaddeaddeaddeaddeaddeaddead0000888888888861069c565b600054604051633dbb202b60e01b81526001600160a01b0390911690633dbb202b90610ad9908690859087906004016115e5565b600060405180830381600087803b158015610af357600080fd5b505af115801561064b573d6000803e3d6000fd5b610b1c6001600160a01b038916873087610d3d565b6002546060906001600160a01b038a811691161415610bbf5760405173deaddeaddeaddeaddeaddeaddeaddeaddead00009850633315319d60e11b90610b8690731a4b46696b2bb4794eb3d4c26f1c55f9170fa4c5908b908b908b908b908a908a9060240161161f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529050610c1a565b604051633315319d60e11b90610be5908b908b908b908b908b908a908a9060240161161f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b600154610c31906001600160a01b03168583610aa5565b6001600160a01b03808a166000908152600360209081526040808320938c1683529290522054610c62908690611670565b6001600160a01b03808b1660008181526003602090815260408083208e86168085529252918290209490945551918a1692917f718594027abd4eaed59f95162563e0cc6d0e8d5b86b1c7be8b1b0ac3343d039690610cc7908b908b908a908a906115b3565b60405180910390a4505050505050505050565b6040516001600160a01b0383166024820152604481018290526108ca90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610d75565b6040516001600160a01b03808516602483015283166044820152606481018290526106969085906323b872dd60e01b90608401610d06565b6000610dca826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610e479092919063ffffffff16565b8051909150156108ca5780806020019051810190610de89190611688565b6108ca5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610105565b6060610e568484600085610e60565b90505b9392505050565b606082471015610ec15760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610105565b843b610f0f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610105565b600080866001600160a01b03168587604051610f2b919061151e565b60006040518083038185875af1925050503d8060008114610f68576040519150601f19603f3d011682016040523d82523d6000602084013e610f6d565b606091505b5091509150610f7d828286610f88565b979650505050505050565b60608315610f97575081610e59565b825115610fa75782518084602001fd5b8160405162461bcd60e51b815260040161010591906116aa565b6020808252600f908201526e4163636f756e74206e6f7420454f4160881b604082015260600190565b6001600160a01b0381168114610fff57600080fd5b50565b60008083601f84011261101457600080fd5b50813567ffffffffffffffff81111561102c57600080fd5b60208301915083602082850101111561104457600080fd5b9250929050565b60008060008060006080868803121561106357600080fd5b853561106e81610fea565b9450602086013561107e81610fea565b935060408601359250606086013567ffffffffffffffff8111156110a157600080fd5b6110ad88828901611002565b969995985093965092949392505050565b803563ffffffff811681146110d257600080fd5b919050565b60008060008060008060a087890312156110f057600080fd5b86356110fb81610fea565b9550602087013561110b81610fea565b945060408701359350611120606088016110be565b9250608087013567ffffffffffffffff81111561113c57600080fd5b61114889828a01611002565b979a9699509497509295939492505050565b600080600080600080600060c0888a03121561117557600080fd5b873561118081610fea565b9650602088013561119081610fea565b955060408801356111a081610fea565b9450606088013593506111b5608089016110be565b925060a088013567ffffffffffffffff8111156111d157600080fd5b6111dd8a828b01611002565b989b979a50959850939692959293505050565b6000806040838503121561120357600080fd5b823561120e81610fea565b9150602083013561121e81610fea565b809150509250929050565b6000806000806060858703121561123f57600080fd5b843561124a81610fea565b9350611258602086016110be565b9250604085013567ffffffffffffffff81111561127457600080fd5b61128087828801611002565b95989497509550505050565b600080600080600080600060c0888a0312156112a757600080fd5b87356112b281610fea565b965060208801356112c281610fea565b955060408801356112d281610fea565b945060608801356112e281610fea565b93506080880135925060a088013567ffffffffffffffff8111156111d157600080fd5b60008060006040848603121561131a57600080fd5b611323846110be565b9250602084013567ffffffffffffffff81111561133f57600080fd5b61134b86828701611002565b9497909650939450505050565b60008060006060848603121561136d57600080fd5b833561137881610fea565b9250602084013561138881610fea565b9150604084013561139881610fea565b809150509250925092565b60005b838110156113be5781810151838201526020016113a6565b838111156106965750506000910152565b600081518084526113e78160208601602086016113a3565b601f01601f19169290920160200192915050565b6001600160a01b03878116825286811660208301528581166040830152841660608201526080810183905260c060a0820181905260009061143e908301846113cf565b98975050505050505050565b828152604060208201526000610e5660408301846113cf565b6020808252602e908201527f42564d5f58434841494e3a206d657373656e67657220636f6e7472616374207560408201526d1b985d5d1a195b9d1a58d85d195960921b606082015260800190565b6000602082840312156114c357600080fd5b8151610e5981610fea565b60208082526030908201527f42564d5f58434841494e3a2077726f6e672073656e646572206f662063726f7360408201526f732d646f6d61696e206d65737361676560801b606082015260800190565b600082516115308184602087016113a3565b9190910192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b83815260406020820152600061157d60408301848661153a565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115ae576115ae611586565b500390565b60018060a01b03851681528360208201526060604082015260006115db60608301848661153a565b9695505050505050565b6001600160a01b0384168152606060208201819052600090611609908301856113cf565b905063ffffffff83166040830152949350505050565b6001600160a01b03888116825287811660208301528681166040830152851660608201526080810184905260c060a08201819052600090611663908301848661153a565b9998505050505050505050565b6000821982111561168357611683611586565b500190565b60006020828403121561169a57600080fd5b81518015158114610e5957600080fd5b602081526000610e5960208301846113cf56fea264697066735822122040dc7003fb6520a77a23db2e9e3fe11e998da516fdbb11e2493064a511d299af64736f6c63430008090033";

type L1StandardBridgeUpgradeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1StandardBridgeUpgradeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1StandardBridgeUpgrade__factory extends ContractFactory {
  constructor(...args: L1StandardBridgeUpgradeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1StandardBridgeUpgrade> {
    return super.deploy(overrides || {}) as Promise<L1StandardBridgeUpgrade>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): L1StandardBridgeUpgrade {
    return super.attach(address) as L1StandardBridgeUpgrade;
  }
  override connect(signer: Signer): L1StandardBridgeUpgrade__factory {
    return super.connect(signer) as L1StandardBridgeUpgrade__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1StandardBridgeUpgradeInterface {
    return new utils.Interface(_abi) as L1StandardBridgeUpgradeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1StandardBridgeUpgrade {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as L1StandardBridgeUpgrade;
  }
}
