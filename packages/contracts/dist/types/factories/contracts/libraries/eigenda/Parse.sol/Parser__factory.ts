/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Parser,
  ParserInterface,
} from "../../../../../contracts/libraries/eigenda/Parse.sol/Parser";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "polys",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "parse",
    outputs: [
      {
        internalType: "bytes",
        name: "provenString",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610492806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f944c8f14610030575b600080fd5b61004361003e366004610204565b610059565b60405161005091906102b6565b60405180910390f35b60606100666020846102ff565b6100c65760405162461bcd60e51b815260206004820152602760248201527f43616e6e6f742073746172742072656164696e672066726f6d206120706164646044820152666564206279746560c81b606482015260840160405180910390fd5b6000835b83835110156101e2576000610115826100e4602082610329565b6100ef90600161033d565b6100fa906020610355565b6101049190610374565b85516101109088610374565b6101ec565b90508388888581811061012a5761012a61038b565b905060200281019061013c91906103a1565b8490610148858361033d565b92610155939291906103ef565b60405160200161016793929190610419565b604051602081830303815290604052935087878481811061018a5761018a61038b565b905060200281019061019c91906103a1565b90506101a8828461033d565b14156101c457826101b881610441565b935050600191506101dc565b6101cf81600161033d565b6101d9908361033d565b91505b506100ca565b5050949350505050565b60008183106101fb57816101fd565b825b9392505050565b6000806000806060858703121561021a57600080fd5b843567ffffffffffffffff8082111561023257600080fd5b818701915087601f83011261024657600080fd5b81358181111561025557600080fd5b8860208260051b850101111561026a57600080fd5b6020928301999098509187013596604001359550909350505050565b60005b838110156102a1578181015183820152602001610289565b838111156102b0576000848401525b50505050565b60208152600082518060208401526102d5816040850160208701610286565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601260045260246000fd5b60008261030e5761030e6102e9565b500690565b634e487b7160e01b600052601160045260246000fd5b600082610338576103386102e9565b500490565b6000821982111561035057610350610313565b500190565b600081600019048311821515161561036f5761036f610313565b500290565b60008282101561038657610386610313565b500390565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126103b857600080fd5b83018035915067ffffffffffffffff8211156103d357600080fd5b6020019150368190038213156103e857600080fd5b9250929050565b600080858511156103ff57600080fd5b8386111561040c57600080fd5b5050820193919092039150565b6000845161042b818460208901610286565b8201838582376000930192835250909392505050565b600060001982141561045557610455610313565b506001019056fea2646970667358221220231a64ac1898e5fb776721059fc5ef61a77c7683bff0c42507445e24fd9de82364736f6c63430008090033";

type ParserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ParserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Parser__factory extends ContractFactory {
  constructor(...args: ParserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Parser> {
    return super.deploy(overrides || {}) as Promise<Parser>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Parser {
    return super.attach(address) as Parser;
  }
  override connect(signer: Signer): Parser__factory {
    return super.connect(signer) as Parser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParserInterface {
    return new utils.Interface(_abi) as ParserInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Parser {
    return new Contract(address, _abi, signerOrProvider) as Parser;
  }
}
