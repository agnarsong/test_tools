/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  InterTxVerifier,
  InterTxVerifierInterface,
} from "../../../../../../contracts/L1/fraud-proof/verifier/subverifiers/InterTxVerifier";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "coinbase",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "origin",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
              },
              {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256",
              },
              {
                internalType: "uint64",
                name: "gas",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "v",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "r",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "s",
                type: "uint256",
              },
            ],
            internalType: "struct EVMTypesLib.Transaction",
            name: "transaction",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "inputRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VerificationContext.Context",
        name: "ctx",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "currStateHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "executeOneStepProof",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "blockNumber",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "transactionIdx",
            type: "uint64",
          },
          {
            internalType: "uint16",
            name: "depth",
            type: "uint16",
          },
          {
            internalType: "uint64",
            name: "gas",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "refund",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "lastDepthHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "callFlag",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "out",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "outSize",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "pc",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "opCode",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "codeHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "stackSize",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "stackHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "memSize",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "memRoot",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "inputDataSize",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "inputDataRoot",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "returnDataSize",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "returnDataRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "committedGlobalStateRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "globalStateRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "selfDestructAcc",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "logAcc",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "blockHashRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "accessListRoot",
            type: "bytes32",
          },
        ],
        internalType: "struct OneStepProof.StateProof",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "coinbase",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "number",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "origin",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
              },
              {
                internalType: "uint256",
                name: "gasPrice",
                type: "uint256",
              },
              {
                internalType: "uint64",
                name: "gas",
                type: "uint64",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "v",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "r",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "s",
                type: "uint256",
              },
            ],
            internalType: "struct EVMTypesLib.Transaction",
            name: "transaction",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "inputRoot",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "txHash",
            type: "bytes32",
          },
        ],
        internalType: "struct VerificationContext.Context",
        name: "ctx",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "currStateHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "encoded",
        type: "bytes",
      },
    ],
    name: "verifyOneStepProof",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type InterTxVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterTxVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterTxVerifier__factory extends ContractFactory {
  constructor(...args: InterTxVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InterTxVerifier> {
    return super.deploy(overrides || {}) as Promise<InterTxVerifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InterTxVerifier {
    return super.attach(address) as InterTxVerifier;
  }
  override connect(signer: Signer): InterTxVerifier__factory {
    return super.connect(signer) as InterTxVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterTxVerifierInterface {
    return new utils.Interface(_abi) as InterTxVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InterTxVerifier {
    return new Contract(address, _abi, signerOrProvider) as InterTxVerifier;
  }
}
