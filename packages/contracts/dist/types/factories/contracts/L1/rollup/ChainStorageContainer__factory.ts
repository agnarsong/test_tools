/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ChainStorageContainer,
  ChainStorageContainerInterface,
} from "../../../../contracts/L1/rollup/ChainStorageContainer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_libAddressManager",
        type: "address",
      },
      {
        internalType: "string",
        name: "_owner",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "bytes27",
        name: "_globalMetadata",
        type: "bytes27",
      },
    ],
    name: "deleteElementsAfterInclusive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteElementsAfterInclusive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "get",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGlobalMetadata",
    outputs: [
      {
        internalType: "bytes27",
        name: "",
        type: "bytes27",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "length",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "libAddressManager",
    outputs: [
      {
        internalType: "contract Lib_AddressManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_object",
        type: "bytes32",
      },
      {
        internalType: "bytes27",
        name: "_globalMetadata",
        type: "bytes27",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_object",
        type: "bytes32",
      },
    ],
    name: "push",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes27",
        name: "_globalMetadata",
        type: "bytes27",
      },
    ],
    name: "setGlobalMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ca338038062000ca3833981016040819052620000349162000129565b600080546001600160a01b0319166001600160a01b0384161790558051620000649060019060208401906200006d565b50505062000266565b8280546200007b9062000229565b90600052602060002090601f0160209004810192826200009f5760008555620000ea565b82601f10620000ba57805160ff1916838001178555620000ea565b82800160010185558215620000ea579182015b82811115620000ea578251825591602001919060010190620000cd565b50620000f8929150620000fc565b5090565b5b80821115620000f85760008155600101620000fd565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200013d57600080fd5b82516001600160a01b03811681146200015557600080fd5b602084810151919350906001600160401b03808211156200017557600080fd5b818601915086601f8301126200018a57600080fd5b8151818111156200019f576200019f62000113565b604051601f8201601f19908116603f01168101908382118183101715620001ca57620001ca62000113565b816040528281528986848701011115620001e357600080fd5b600093505b82841015620002075784840186015181850187015292850192620001e8565b82841115620002195760008684830101525b8096505050505050509250929050565b600181811c908216806200023e57607f821691505b602082108114156200026057634e487b7160e01b600052602260045260246000fd5b50919050565b610a2d80620002766000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063461a447811610071578063461a44781461012f5780634651d91e146101425780638da5cb5b146101555780639507d39a1461016a578063b298e36b1461017d578063ccf8f9691461019057600080fd5b8063167fd681146100ae5780631f7b6d32146100c35780632015276c146100de57806329061de2146100f1578063299ca47814610104575b600080fd5b6100c16100bc36600461077f565b6101af565b005b6100cb61028b565b6040519081526020015b60405180910390f35b6100c16100ec36600461077f565b6102a3565b6100c16100ff3660046107ab565b6102ef565b600054610117906001600160a01b031681565b6040516001600160a01b0390911681526020016100d5565b61011761013d3660046107e3565b61033d565b6100c1610150366004610894565b6103c4565b61015d61040f565b6040516100d591906108ad565b6100cb610178366004610894565b61049d565b6100c161018b366004610894565b6104b1565b6101986104fc565b60405164ffffffffff1990911681526020016100d5565b610242600180546101bf90610902565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb90610902565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b505050505061033d565b6001600160a01b0316336001600160a01b03161461027b5760405162461bcd60e51b81526004016102729061093d565b60405180910390fd5b6102876002838361050d565b5050565b6000610297600261059a565b64ffffffffff16905090565b6102b3600180546101bf90610902565b6001600160a01b0316336001600160a01b0316146102e35760405162461bcd60e51b81526004016102729061093d565b610287600283836105ae565b6102ff600180546101bf90610902565b6001600160a01b0316336001600160a01b03161461032f5760405162461bcd60e51b81526004016102729061093d565b61033a600282610606565b50565b6000805460405163bf40fac160e01b81526001600160a01b039091169063bf40fac19061036e9085906004016108ad565b60206040518083038186803b15801561038657600080fd5b505afa15801561039a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103be919061099b565b92915050565b6103d4600180546101bf90610902565b6001600160a01b0316336001600160a01b0316146104045760405162461bcd60e51b81526004016102729061093d565b61033a600282610630565b6001805461041c90610902565b80601f016020809104026020016040519081016040528092919081815260200182805461044890610902565b80156104955780601f1061046a57610100808354040283529160200191610495565b820191906000526020600020905b81548152906001019060200180831161047857829003601f168201915b505050505081565b60006103be600264ffffffffff8416610656565b6104c1600180546101bf90610902565b6001600160a01b0316336001600160a01b0316146104f15760405162461bcd60e51b81526004016102729061093d565b61033a6002826106cb565b600061050860026106f1565b905090565b600061051884610708565b9050806000015164ffffffffff168364ffffffffff16106105725760405162461bcd60e51b815260206004820152601460248201527324b73232bc1037baba1037b3103137bab732399760611b6044820152606401610272565b64ffffffffff8316815264ffffffffff19821660208201526105948482610744565b50505050565b6000806105a683610708565b519392505050565b60006105b984610708565b805164ffffffffff16600090815260018601602052604090208490558051909150816105e4826109c4565b64ffffffffff1690525064ffffffffff19821660208201526105948482610744565b600061061183610708565b64ffffffffff1983166020820152905061062b8382610744565b505050565b600061063b83610708565b905061062b8282602001518561050d9092919063ffffffff16565b60008061066284610708565b805190915064ffffffffff1683106106b35760405162461bcd60e51b815260206004820152601460248201527324b73232bc1037baba1037b3103137bab732399760611b6044820152606401610272565b50506000908152600191909101602052604090205490565b60006106d683610708565b905061062b828260200151856105ae9092919063ffffffff16565b6000806106fd83610708565b602001519392505050565b604080518082019091526000808252602082015250546040805180820190915264ffffffffff8216815264ffffffffff19909116602082015290565b805160208201518354818317929190831461075d578285555b5050505050565b803564ffffffffff198116811461077a57600080fd5b919050565b6000806040838503121561079257600080fd5b823591506107a260208401610764565b90509250929050565b6000602082840312156107bd57600080fd5b6107c682610764565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156107f557600080fd5b813567ffffffffffffffff8082111561080d57600080fd5b818401915084601f83011261082157600080fd5b813581811115610833576108336107cd565b604051601f8201601f19908116603f0116810190838211818310171561085b5761085b6107cd565b8160405282815287602084870101111561087457600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156108a657600080fd5b5035919050565b600060208083528351808285015260005b818110156108da578581018301518582016040015282016108be565b818111156108ec576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061091657607f821691505b6020821081141561093757634e487b7160e01b600052602260045260246000fd5b50919050565b602080825260409082018190527f436861696e53746f72616765436f6e7461696e65723a2046756e6374696f6e20908201527f63616e206f6e6c792062652063616c6c656420627920746865206f776e65722e606082015260800190565b6000602082840312156109ad57600080fd5b81516001600160a01b03811681146107c657600080fd5b600064ffffffffff808316818114156109ed57634e487b7160e01b600052601160045260246000fd5b600101939250505056fea26469706673582212203f93907b0eed4c7e0fcbb761dda4387c9f9f9de3202c7953b24792f8ad1de09064736f6c63430008090033";

type ChainStorageContainerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChainStorageContainerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChainStorageContainer__factory extends ContractFactory {
  constructor(...args: ChainStorageContainerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _libAddressManager: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChainStorageContainer> {
    return super.deploy(
      _libAddressManager,
      _owner,
      overrides || {}
    ) as Promise<ChainStorageContainer>;
  }
  override getDeployTransaction(
    _libAddressManager: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _libAddressManager,
      _owner,
      overrides || {}
    );
  }
  override attach(address: string): ChainStorageContainer {
    return super.attach(address) as ChainStorageContainer;
  }
  override connect(signer: Signer): ChainStorageContainer__factory {
    return super.connect(signer) as ChainStorageContainer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChainStorageContainerInterface {
    return new utils.Interface(_abi) as ChainStorageContainerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChainStorageContainer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChainStorageContainer;
  }
}
