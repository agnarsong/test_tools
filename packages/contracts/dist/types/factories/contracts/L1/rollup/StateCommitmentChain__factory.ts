/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StateCommitmentChain,
  StateCommitmentChainInterface,
} from "../../../../contracts/L1/rollup/StateCommitmentChain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_libAddressManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1messenger",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fraudProofWindow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sequencerPublishWindow",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_startBlockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_length",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_batchTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "_tssMembers",
        type: "address[]",
      },
    ],
    name: "DistributeTssReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_startBlockNumber",
        type: "uint256",
      },
    ],
    name: "RollBackL2Chain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_batchIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_batchRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_batchSize",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_prevTotalElements",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_extraData",
        type: "bytes",
      },
    ],
    name: "StateBatchAppended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_batchIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "_batchRoot",
        type: "bytes32",
      },
    ],
    name: "StateBatchDeleted",
    type: "event",
  },
  {
    inputs: [],
    name: "FRAUD_PROOF_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEQUENCER_PUBLISH_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "_batch",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_shouldStartAtElement",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "appendStateBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "batches",
    outputs: [
      {
        internalType: "contract IChainStorageContainer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "batchIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "batchRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "batchSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prevTotalElements",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct Lib_BVMCodec.ChainBatchHeader",
        name: "_batchHeader",
        type: "tuple",
      },
    ],
    name: "deleteStateBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFraudProofWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "_fraudProofWindow",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastSequencerTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "_lastSequencerTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBatches",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalBatches",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalElements",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalElements",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "batchIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "batchRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "batchSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prevTotalElements",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct Lib_BVMCodec.ChainBatchHeader",
        name: "_batchHeader",
        type: "tuple",
      },
    ],
    name: "insideFraudProofWindow",
    outputs: [
      {
        internalType: "bool",
        name: "_inside",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "libAddressManager",
    outputs: [
      {
        internalType: "contract Lib_AddressManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "resolve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_shouldRollBack",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_shouldStartAtElement",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "rollBackL2Chain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fraudProofWindow",
        type: "uint256",
      },
    ],
    name: "setFraudProofWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_element",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "batchIndex",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "batchRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "batchSize",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prevTotalElements",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct Lib_BVMCodec.ChainBatchHeader",
        name: "_batchHeader",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "siblings",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Lib_BVMCodec.ChainInclusionProof",
        name: "_proof",
        type: "tuple",
      },
    ],
    name: "verifyStateCommitment",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200277138038062002771833981016040819052620000349162000090565b600080546001600160a01b039586166001600160a01b0319918216179091556001805494909516931692909217909255600291909155600355620000d8565b80516001600160a01b03811681146200008b57600080fd5b919050565b60008060008060808587031215620000a757600080fd5b620000b28562000073565b9350620000c26020860162000073565b6040860151606090960151949790965092505050565b61268980620000e86000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637ad168a011610097578063b768bb1711610066578063b768bb17146101f7578063c17b291b1461020a578063cfdf677e14610213578063e561dddc1461021b57600080fd5b80637ad168a0146101b057806381eb62ef146101b857806389a1d980146101c1578063ab59f7b8146101e457600080fd5b8063461a4478116100d3578063461a44781461017057806355a17f8a146101835780635b4d90e2146101955780637aa63a86146101a857600080fd5b80630bf3b5f2146101055780632169f79f1461011a578063299ca4781461012d5780633cb747bf1461015d575b600080fd5b610118610113366004611e26565b610223565b005b610118610128366004611f05565b610322565b600054610140906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600154610140906001600160a01b031681565b61014061017e366004611f68565b610601565b6002545b604051908152602001610154565b6101186101a3366004612050565b610688565b6101876107ee565b610187610807565b61018760035481565b6101d46101cf366004612050565b610820565b6040519015158152602001610154565b6101186101f2366004612085565b6108b0565b6101d461020536600461209e565b6109af565b61018760025481565b610140610a49565b610187610a71565b61022b6107ee565b82146102525760405162461bcd60e51b81526004016102499061215b565b60405180910390fd5b61027e6040518060400160405280600b81526020016a2137b73226b0b730b3b2b960a91b815250610601565b604051630156a69560e11b81523360048201526001600160a01b0391909116906302ad4d2a9060240160206040518083038186803b1580156102bf57600080fd5b505afa1580156102d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f791906121b8565b6103135760405162461bcd60e51b8152600401610249906121da565b61031d8382610aeb565b505050565b61032a6107ee565b82146103485760405162461bcd60e51b81526004016102499061215b565b6103746040518060400160405280600b81526020016a2137b73226b0b730b3b2b960a91b815250610601565b604051630156a69560e11b81523360048201526001600160a01b0391909116906302ad4d2a9060240160206040518083038186803b1580156103b557600080fd5b505afa1580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed91906121b8565b6104095760405162461bcd60e51b8152600401610249906121da565b60008351116104665760405162461bcd60e51b815260206004820152602360248201527f43616e6e6f74207375626d697420616e20656d7074792073746174652062617460448201526231b41760e91b6064820152608401610249565b6104a46040518060400160405280601981526020017f43616e6f6e6963616c5472616e73616374696f6e436861696e00000000000000815250610601565b6001600160a01b0316637aa63a866040518163ffffffff1660e01b815260040160206040518083038186803b1580156104dc57600080fd5b505afa1580156104f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105149190612229565b835161051e6107ee565b6105289190612258565b11156105ae5760405162461bcd60e51b815260206004820152604960248201527f4e756d626572206f6620737461746520726f6f74732063616e6e6f742065786360448201527f65656420746865206e756d626572206f662063616e6f6e6963616c207472616e60648201526839b0b1ba34b7b7399760b91b608482015260a401610249565b6105b9838383610ca3565b6105f7838242336040516020016105e39291909182526001600160a01b0316602082015260400190565b604051602081830303815290604052610dc8565b61031d8383611001565b6000805460405163bf40fac160e01b81526001600160a01b039091169063bf40fac1906106329085906004016122bd565b60206040518083038186803b15801561064a57600080fd5b505afa15801561065e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068291906122e5565b92915050565b6106ba60405180604001604052806011815260200170212b26afa33930bab22b32b934b334b2b960791b815250610601565b6001600160a01b0316336001600160a01b0316146107405760405162461bcd60e51b815260206004820152603b60248201527f537461746520626174636865732063616e206f6e6c792062652064656c65746560448201527f64206279207468652042564d5f467261756456657269666965722e00000000006064820152608401610249565b610749816111b2565b6107655760405162461bcd60e51b815260040161024990612302565b61076e81610820565b6107e2576040805162461bcd60e51b81526020600482015260248101919091527f537461746520626174636865732063616e206f6e6c792062652064656c65746560448201527f642077697468696e207468652066726175642070726f6f662077696e646f772e6064820152608401610249565b6107eb8161124e565b50565b6000806107f96113fa565b5064ffffffffff1692915050565b6000806108126113fa565b64ffffffffff169392505050565b6000808260a0015180602001905181019061083b9190612331565b509050806108995760405162461bcd60e51b815260206004820152602560248201527f4261746368206865616465722074696d657374616d702063616e6e6f74206265604482015264207a65726f60d81b6064820152608401610249565b42600254826108a89190612258565b119392505050565b60008054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156108fc57600080fd5b505afa158015610910573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093491906122e5565b6001600160a01b0316336001600160a01b0316146109aa5760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c792063616c6c61626c6520627920746865206c6962416464726573734d60448201526c30b730b3b2b91037bbb732b91760991b6064820152608401610249565b600255565b60006109ba836111b2565b6109d65760405162461bcd60e51b815260040161024990612302565b6109f3836020015185846000015185602001518760400151611491565b610a3f5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420696e636c7573696f6e2070726f6f662e00000000000000006044820152606401610249565b5060019392505050565b6000610a6c60405180606001604052806021815260200161263360219139610601565b905090565b6000610a7b610a49565b6001600160a01b0316631f7b6d326040518163ffffffff1660e01b815260040160206040518083038186803b158015610ab357600080fd5b505afa158015610ac7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c9190612229565b610b2360405180604001604052806017815260200176283937bc3cafafaa29a9afa3b937bab826b0b730b3b2b960491b815250610601565b6001600160a01b0316633231a7f083604051602001610b4491815260200190565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401610b78929190612361565b602060405180830381600087803b158015610b9257600080fd5b505af1158015610ba6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bca91906121b8565b610c105760405162461bcd60e51b81526020600482015260176024820152761d995c9a599e481cda59db985d1d5c994819985a5b1959604a1b6044820152606401610249565b600082604051602401610c2591815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f523f40d60e01b1790529050610c7373deaddeaddeaddeaddeaddeaddeaddeaddead2222621e8480836116d6565b60405183907f8ef5d07412def056f6bfc680f359c8a0370cfacb2becaf67d01e2e372e08964a90600090a2505050565b610cdb60405180604001604052806017815260200176283937bc3cafafaa29a9afa3b937bab826b0b730b3b2b960491b815250610601565b6001600160a01b0316633231a7f08484604051602001610cfc92919061237a565b60405160208183030381529060405280519060200120836040518363ffffffff1660e01b8152600401610d30929190612361565b602060405180830381600087803b158015610d4a57600080fd5b505af1158015610d5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8291906121b8565b61031d5760405162461bcd60e51b81526020600482015260176024820152761d995c9a599e481cda59db985d1d5c994819985a5b1959604a1b6044820152606401610249565b6000610df76040518060400160405280600c81526020016b212b26afa83937b837b9b2b960a11b815250610601565b9050600080610e046113fa565b9092509050336001600160a01b0384161415610e21575042610eb6565b426003548264ffffffffff16610e379190612258565b10610eb65760405162461bcd60e51b815260206004820152604360248201527f43616e6e6f74207075626c69736820737461746520726f6f747320776974686960448201527f6e207468652073657175656e636572207075626c69636174696f6e2077696e6460648201526237bb9760e91b608482015260a401610249565b60006040518060c00160405280610ecb610a71565b8152602001610ed989611741565b8152602001885181526020018464ffffffffff16815260200187815260200186815250905080600001517f9cf3ad24eae3fd6d461e2f566b35b95b6d671871d9fcb45f8ac8030e4a8d21b382602001518360400151846060015185608001518660a00151604051610f4e9594939291906123c2565b60405180910390a2610f5e610a49565b6001600160a01b0316632015276c610f7583611c1c565b610f9a84604001518560600151610f8c9190612258565b602887811b91909117901b90565b6040516001600160e01b031960e085901b168152600481019290925264ffffffffff19166024820152604401600060405180830381600087803b158015610fe057600080fd5b505af1158015610ff4573d6000803e3d6000fd5b5050505050505050505050565b600061103b60405180604001604052806017815260200176283937bc3cafafaa29a9afa3b937bab826b0b730b3b2b960491b815250610601565b6001600160a01b0316632cd00d536040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561107557600080fd5b505af1158015611089573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110b19190810190612405565b905060008151116111045760405162461bcd60e51b815260206004820152601860248201527f67657420747373206d656d6265727320696e206572726f7200000000000000006044820152606401610249565b8251604051600091630fae75d960e01b91611127918691429087906024016124e3565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290506111706020602160991b01621e8480836116d6565b42837ff533ef50019763ee9d95ad46e28350b533c11edd472ae7be93e8fae83c1b6d998651856040516111a4929190612512565b60405180910390a350505050565b60006111bc610a49565b8251604051634a83e9cd60e11b81526001600160a01b039290921691639507d39a916111ee9160040190815260200190565b60206040518083038186803b15801561120657600080fd5b505afa15801561121a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123e9190612229565b61124783611c1c565b1492915050565b611256610a49565b6001600160a01b0316631f7b6d326040518163ffffffff1660e01b815260040160206040518083038186803b15801561128e57600080fd5b505afa1580156112a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c69190612229565b81511061130c5760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b2103130ba31b41034b73232bc1760611b6044820152606401610249565b611315816111b2565b6113315760405162461bcd60e51b815260040161024990612302565b611339610a49565b815160608301516001600160a01b03929092169163167fd681919060281b6040516001600160e01b031960e085901b168152600481019290925264ffffffffff19166024820152604401600060405180830381600087803b15801561139d57600080fd5b505af11580156113b1573d6000803e3d6000fd5b5050505080600001517f8747b69ce8fdb31c3b9b0a67bd8049ad8c1a69ea417b69b12174068abd9cbd6482602001516040516113ef91815260200190565b60405180910390a250565b6000806000611407610a49565b6001600160a01b031663ccf8f9696040518163ffffffff1660e01b815260040160206040518083038186803b15801561143f57600080fd5b505afa158015611453573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611477919061252b565b64ffffffffff602882901c169460509190911c9350915050565b60008082116115085760405162461bcd60e51b815260206004820152603760248201527f4c69625f4d65726b6c65547265653a20546f74616c206c6561766573206d757360448201527f742062652067726561746572207468616e207a65726f2e0000000000000000006064820152608401610249565b8184106115635760405162461bcd60e51b8152602060048201526024808201527f4c69625f4d65726b6c65547265653a20496e646578206f7574206f6620626f756044820152633732399760e11b6064820152608401610249565b61156c82611c65565b8351146115f75760405162461bcd60e51b815260206004820152604d60248201527f4c69625f4d65726b6c65547265653a20546f74616c207369626c696e6773206460448201527f6f6573206e6f7420636f72726563746c7920636f72726573706f6e6420746f2060648201526c3a37ba30b6103632b0bb32b99760991b608482015260a401610249565b8460005b84518110156116c95785600116600114156116625784818151811061162257611622612553565b602002602001015182604051602001611645929190918252602082015260400190565b6040516020818303038152906040528051906020012091506116b0565b8185828151811061167557611675612553565b6020026020010151604051602001611697929190918252602082015260400190565b6040516020818303038152906040528051906020012091505b60019590951c94806116c181612569565b9150506115fb565b5090951495945050505050565b600154604051633dbb202b60e01b81526001600160a01b0390911690633dbb202b9061170a90869085908790600401612584565b600060405180830381600087803b15801561172457600080fd5b505af1158015611738573d6000803e3d6000fd5b50505050505050565b6000808251116117b05760405162461bcd60e51b815260206004820152603460248201527f4c69625f4d65726b6c65547265653a204d7573742070726f76696465206174206044820152733632b0b9ba1037b732903632b0b3103430b9b41760611b6064820152608401610249565b8151600114156117dc57816000815181106117cd576117cd612553565b60200260200101519050919050565b60408051610200810182527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56381527f633dc4d7da7256660a892f8f1604a44b5432649cc8ec5cb3ced4c4e6ac94dd1d60208201527f890740a8eb06ce9be422cb8da5cdafc2b58c0a5e24036c578de2a433c828ff7d818301527f3b8ec09e026fdc305365dfc94e189a81b38c7597b3d941c279f042e8206e0bd86060808301919091527fecd50eee38e386bd62be9bedb990706951b65fe053bd9d8a521af753d139e2da60808301527fdefff6d330bb5403f63b14f33b578274160de3a50df4efecf0e0db73bcdd3da560a08301527f617bdd11f7c0a11f49db22f629387a12da7596f9d1704d7465177c63d88ec7d760c08301527f292c23a9aa1d8bea7e2435e555a4a60e379a5a35f3f452bae60121073fb6eead60e08301527fe1cea92ed99acdcb045a6726b2f87107e8a61620a232cf4d7d5b5766b3952e106101008301527f7ad66c0a68c72cb89e4fb4303841966e4062a76ab97451e3b9fb526a5ceb7f826101208301527fe026cc5a4aed3c22a58cbd3d2ac754c9352c5436f638042dca99034e836365166101408301527f3d04cffd8b46a874edf5cfae63077de85f849a660426697b06a829c70dd1409c6101608301527fad676aa337a485e4728a0b240d92b3ef7b3c372d06d189322bfd5f61f1e7203e6101808301527fa2fca4a49658f9fab7aa63289c91b7c7b6c832a6d0e69334ff5b0a3483d09dab6101a08301527f4ebfd9cd7bca2505f7bef59cc1c12ecc708fff26ae4af19abe852afe9e20c8626101c08301527f2def10d13dd169f550f578bda343d9717a138562e0093b380a1120789d53cf106101e083015282518381529081018352909160009190602082018180368337505085519192506000918291508180805b6001841115611bf257611a8d6002856125d4565b9150611a9a6002856125e8565b600114905060005b82811015611b46578a611ab68260026125fc565b81518110611ac657611ac6612553565b602002602001015196508a816002611ade91906125fc565b611ae9906001612258565b81518110611af957611af9612553565b6020026020010151955086602089015285604089015287805190602001208b8281518110611b2957611b29612553565b602090810291909101015280611b3e81612569565b915050611aa2565b508015611bc25789611b5960018661261b565b81518110611b6957611b69612553565b60200260200101519550878360108110611b8557611b85612553565b602002015160001b945085602088015284604088015286805190602001208a8381518110611bb557611bb5612553565b6020026020010181815250505b80611bce576000611bd1565b60015b611bde9060ff1683612258565b935082611bea81612569565b935050611a79565b89600081518110611c0557611c05612553565b602002602001015198505050505050505050919050565b6020808201516040808401516060850151608086015160a08701519351600096611c48969591016123c2565b604051602081830303815290604052805190602001209050919050565b6000808211611ccf5760405162461bcd60e51b815260206004820152603060248201527f4c69625f4d65726b6c65547265653a2043616e6e6f7420636f6d70757465206360448201526f32b4b6143637b3af99149037b310181760811b6064820152608401610249565b8160011415611ce057506000919050565b81600060805b60018110611d1e5780611cfc600180831b61261b565b901b831615611d1657611d0f8183612258565b92811c9291505b60011c611ce6565b506001811b8414611d3757611d34600182612258565b90505b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611d7757611d77611d3e565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611da657611da6611d3e565b604052919050565b600067ffffffffffffffff831115611dc857611dc8611d3e565b611ddb601f8401601f1916602001611d7d565b9050828152838383011115611def57600080fd5b828260208301376000602084830101529392505050565b600082601f830112611e1757600080fd5b611d3783833560208501611dae565b600080600060608486031215611e3b57600080fd5b8335925060208401359150604084013567ffffffffffffffff811115611e6057600080fd5b611e6c86828701611e06565b9150509250925092565b600067ffffffffffffffff821115611e9057611e90611d3e565b5060051b60200190565b600082601f830112611eab57600080fd5b81356020611ec0611ebb83611e76565b611d7d565b82815260059290921b84018101918181019086841115611edf57600080fd5b8286015b84811015611efa5780358352918301918301611ee3565b509695505050505050565b600080600060608486031215611f1a57600080fd5b833567ffffffffffffffff80821115611f3257600080fd5b611f3e87838801611e9a565b9450602086013593506040860135915080821115611f5b57600080fd5b50611e6c86828701611e06565b600060208284031215611f7a57600080fd5b813567ffffffffffffffff811115611f9157600080fd5b8201601f81018413611fa257600080fd5b611fb184823560208401611dae565b949350505050565b600060c08284031215611fcb57600080fd5b611fd3611d54565b905081358152602082013560208201526040820135604082015260608201356060820152608082013567ffffffffffffffff8082111561201257600080fd5b61201e85838601611e06565b608084015260a084013591508082111561203757600080fd5b5061204484828501611e06565b60a08301525092915050565b60006020828403121561206257600080fd5b813567ffffffffffffffff81111561207957600080fd5b611fb184828501611fb9565b60006020828403121561209757600080fd5b5035919050565b6000806000606084860312156120b357600080fd5b83359250602084013567ffffffffffffffff808211156120d257600080fd5b6120de87838801611fb9565b935060408601359150808211156120f457600080fd5b908501906040828803121561210857600080fd5b60405160408101818110838211171561212357612123611d3e565b6040528235815260208301358281111561213c57600080fd5b61214889828601611e9a565b6020830152508093505050509250925092565b6020808252603d908201527f41637475616c20626174636820737461727420696e64657820646f6573206e6f60408201527f74206d6174636820657870656374656420737461727420696e6465782e000000606082015260800190565b6000602082840312156121ca57600080fd5b81518015158114611d3757600080fd5b6020808252602f908201527f50726f706f73657220646f6573206e6f74206861766520656e6f75676820636f60408201526e1b1b185d195c985b081c1bdcdd1959608a1b606082015260800190565b60006020828403121561223b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561226b5761226b612242565b500190565b6000815180845260005b818110156122965760208185018101518683018201520161227a565b818111156122a8576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611d376020830184612270565b6001600160a01b03811681146107eb57600080fd5b6000602082840312156122f757600080fd5b8151611d37816122d0565b60208082526015908201527424b73b30b634b2103130ba31b4103432b0b232b91760591b604082015260600190565b6000806040838503121561234457600080fd5b825191506020830151612356816122d0565b809150509250929050565b828152604060208201526000611fb16040830184612270565b604080825283519082018190526000906020906060840190828701845b828110156123b357815184529284019290840190600101612397565b50505092019290925292915050565b85815284602082015283604082015260a0606082015260006123e760a0830185612270565b82810360808401526123f98185612270565b98975050505050505050565b6000602080838503121561241857600080fd5b825167ffffffffffffffff81111561242f57600080fd5b8301601f8101851361244057600080fd5b805161244e611ebb82611e76565b81815260059190911b8201830190838101908783111561246d57600080fd5b928401925b82841015612494578351612485816122d0565b82529284019290840190612472565b979650505050505050565b600081518084526020808501945080840160005b838110156124d85781516001600160a01b0316875295820195908201906001016124b3565b509495945050505050565b848152836020820152826040820152608060608201526000612508608083018461249f565b9695505050505050565b828152604060208201526000611fb1604083018461249f565b60006020828403121561253d57600080fd5b815164ffffffffff1981168114611d3757600080fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561257d5761257d612242565b5060010190565b6001600160a01b03841681526060602082018190526000906125a890830185612270565b905063ffffffff83166040830152949350505050565b634e487b7160e01b600052601260045260246000fd5b6000826125e3576125e36125be565b500490565b6000826125f7576125f76125be565b500690565b600081600019048311821515161561261657612616612242565b500290565b60008282101561262d5761262d612242565b50039056fe436861696e53746f72616765436f6e7461696e65722d5343432d62617463686573a2646970667358221220662dfd6e7a845e5035a8a88768b5f9a4a8fc96f5d5d991df1f3c333e57aa336e64736f6c63430008090033";

type StateCommitmentChainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StateCommitmentChainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StateCommitmentChain__factory extends ContractFactory {
  constructor(...args: StateCommitmentChainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _libAddressManager: PromiseOrValue<string>,
    _l1messenger: PromiseOrValue<string>,
    _fraudProofWindow: PromiseOrValue<BigNumberish>,
    _sequencerPublishWindow: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StateCommitmentChain> {
    return super.deploy(
      _libAddressManager,
      _l1messenger,
      _fraudProofWindow,
      _sequencerPublishWindow,
      overrides || {}
    ) as Promise<StateCommitmentChain>;
  }
  override getDeployTransaction(
    _libAddressManager: PromiseOrValue<string>,
    _l1messenger: PromiseOrValue<string>,
    _fraudProofWindow: PromiseOrValue<BigNumberish>,
    _sequencerPublishWindow: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _libAddressManager,
      _l1messenger,
      _fraudProofWindow,
      _sequencerPublishWindow,
      overrides || {}
    );
  }
  override attach(address: string): StateCommitmentChain {
    return super.attach(address) as StateCommitmentChain;
  }
  override connect(signer: Signer): StateCommitmentChain__factory {
    return super.connect(signer) as StateCommitmentChain__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StateCommitmentChainInterface {
    return new utils.Interface(_abi) as StateCommitmentChainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StateCommitmentChain {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StateCommitmentChain;
  }
}
