/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BVM_DeployerWhitelist,
  BVM_DeployerWhitelistInterface,
} from "../../../../contracts/L2/predeploys/BVM_DeployerWhitelist";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
    ],
    name: "WhitelistDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    name: "WhitelistStatusChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "enableArbitraryContractDeployment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
    ],
    name: "isDeployerAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isWhitelisted",
        type: "bool",
      },
    ],
    name: "setWhitelistedDeployer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061048c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806308fd63221461006757806313af40351461007c5780638da5cb5b1461008f5780639b19251a146100bf578063b1540a01146100f2578063bdc7b54f14610105575b600080fd5b61007a61007536600461039b565b61010d565b005b61007a61008a3660046103d7565b6101a3565b6000546100a2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e26100cd3660046103d7565b60016020526000908152604090205460ff1681565b60405190151581526020016100b6565b6100e26101003660046103d7565b6102cc565b61007a610303565b6000546001600160a01b031633146101405760405162461bcd60e51b8152600401610137906103f9565b60405180910390fd5b6001600160a01b038216600081815260016020908152604091829020805460ff19168515159081179091558251938452908301527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d910160405180910390a15050565b6000546001600160a01b031633146101cd5760405162461bcd60e51b8152600401610137906103f9565b6001600160a01b0381166102635760405162461bcd60e51b815260206004820152605160248201527f42564d5f4465706c6f79657257686974656c6973743a2063616e206f6e6c792060448201527f62652064697361626c65642076696120656e61626c65417262697472617279436064820152701bdb9d1c9858dd11195c1b1bde5b595b9d607a1b608482015260a401610137565b600054604080516001600160a01b03928316815291831660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1600080546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b031615806102fd57506001600160a01b03821660009081526001602052604090205460ff165b92915050565b6000546001600160a01b0316331461032d5760405162461bcd60e51b8152600401610137906103f9565b6000546040516001600160a01b0390911681527fc0e106cf568e50698fdbde1eff56f5a5c966cc7958e37e276918e9e4ccdf8cd49060200160405180910390a1600080546001600160a01b0319169055565b80356001600160a01b038116811461039657600080fd5b919050565b600080604083850312156103ae57600080fd5b6103b78361037f565b9150602083013580151581146103cc57600080fd5b809150509250929050565b6000602082840312156103e957600080fd5b6103f28261037f565b9392505050565b6020808252603a908201527f46756e6374696f6e2063616e206f6e6c792062652063616c6c6564206279207460408201527f6865206f776e6572206f66207468697320636f6e74726163742e00000000000060608201526080019056fea264697066735822122014c54fb7ee74ea774867baf99a626bf5080d91aef21986eb9bbc65ca16a20bfd64736f6c63430008090033";

type BVM_DeployerWhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BVM_DeployerWhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BVM_DeployerWhitelist__factory extends ContractFactory {
  constructor(...args: BVM_DeployerWhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BVM_DeployerWhitelist> {
    return super.deploy(overrides || {}) as Promise<BVM_DeployerWhitelist>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BVM_DeployerWhitelist {
    return super.attach(address) as BVM_DeployerWhitelist;
  }
  override connect(signer: Signer): BVM_DeployerWhitelist__factory {
    return super.connect(signer) as BVM_DeployerWhitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BVM_DeployerWhitelistInterface {
    return new utils.Interface(_abi) as BVM_DeployerWhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BVM_DeployerWhitelist {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BVM_DeployerWhitelist;
  }
}
