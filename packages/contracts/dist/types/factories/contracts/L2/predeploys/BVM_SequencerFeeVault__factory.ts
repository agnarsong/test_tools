/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BVM_SequencerFeeVault,
  BVM_SequencerFeeVaultInterface,
} from "../../../../contracts/L2/predeploys/BVM_SequencerFeeVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1FeeWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bvmGasPriceOracleAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_burner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minWithdrawalAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "L1Gas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bvmGasPriceOracleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1FeeWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_burner",
        type: "address",
      },
    ],
    name: "setBurner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1FeeWallet",
        type: "address",
      },
    ],
    name: "setL1FeeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "setMinWithdrawalAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109c93803806109c983398101604081905261002f916101c3565b61003833610087565b610041856100d7565b600180546001600160a01b03199081166001600160a01b039687161790915560028054821694861694909417909355600380549093169190931617905560045550610221565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146101365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661019b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161012d565b6101a481610087565b50565b80516001600160a01b03811681146101be57600080fd5b919050565b600080600080600060a086880312156101db57600080fd5b6101e4866101a7565b94506101f2602087016101a7565b9350610200604087016101a7565b925061020e606087016101a7565b9150608086015190509295509295909350565b610799806102306000396000f3fe6080604052600436106100ab5760003560e01c806385b5b14d1161006457806385b5b14d1461017b5780638da5cb5b1461019b578063a996d6ce146101b9578063bfb08462146101d9578063d4ff9218146101f9578063f2fde38b1461021957600080fd5b8063110b7eb0146100b757806327810b6e146100f45780633ccfd60b146101145780635558979e1461012b578063715018a6146101505780638312f1491461016557600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506002546100d7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561010057600080fd5b506003546100d7906001600160a01b031681565b34801561012057600080fd5b50610129610239565b005b34801561013757600080fd5b5061014262030d4081565b6040519081526020016100eb565b34801561015c57600080fd5b50610129610432565b34801561017157600080fd5b5061014260045481565b34801561018757600080fd5b5061012961019636600461061a565b610468565b3480156101a757600080fd5b506000546001600160a01b03166100d7565b3480156101c557600080fd5b506101296101d4366004610633565b610497565b3480156101e557600080fd5b506101296101f4366004610633565b6104e3565b34801561020557600080fd5b506001546100d7906001600160a01b031681565b34801561022557600080fd5b50610129610234366004610633565b61052f565b600154600254604080516268f21d60e51b815290516001600160a01b039384169390921691630d1e43a091600480820192602092909190829003018186803b15801561028457600080fd5b505afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc9190610663565b600114156102f857506003546004546001600160a01b03909116906102e990670de0b6b3a764000061067c565b4710156102f35750565b6103ad565b60045461030d90670de0b6b3a764000061067c565b4710156103ad5760405162461bcd60e51b815260206004820152605760248201527f42564d5f53657175656e6365724665655661756c743a2077697468647261776160448201527f6c20616d6f756e74206d7573742062652067726561746572207468616e206d6960648201527f6e696d756d207769746864726177616c20616d6f756e74000000000000000000608482015260a4015b60405180910390fd5b6040805160208101825260008082529151631474f2a960e31b81526010602160991b019263a3a79548926103fd9273deaddeaddeaddeaddeaddeaddeaddeaddead000092879247926004016106a9565b600060405180830381600087803b15801561041757600080fd5b505af115801561042b573d6000803e3d6000fd5b5050505050565b6000546001600160a01b0316331461045c5760405162461bcd60e51b81526004016103a49061072e565b61046660006105ca565b565b6000546001600160a01b031633146104925760405162461bcd60e51b81526004016103a49061072e565b600455565b6000546001600160a01b031633146104c15760405162461bcd60e51b81526004016103a49061072e565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461050d5760405162461bcd60e51b81526004016103a49061072e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146105595760405162461bcd60e51b81526004016103a49061072e565b6001600160a01b0381166105be5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103a4565b6105c7816105ca565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561062c57600080fd5b5035919050565b60006020828403121561064557600080fd5b81356001600160a01b038116811461065c57600080fd5b9392505050565b60006020828403121561067557600080fd5b5051919050565b60008160001904831182151516156106a457634e487b7160e01b600052601160045260246000fd5b500290565b600060018060a01b03808816835260208188168185015286604085015263ffffffff8616606085015260a06080850152845191508160a085015260005b828110156107025785810182015185820160c0015281016106e6565b8281111561071457600060c084870101525b5050601f01601f19169190910160c0019695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122097b27de226a62419f48d1d4c3b523b328d9974e845c39c606e3a7c2c912fc57264736f6c63430008090033";

type BVM_SequencerFeeVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BVM_SequencerFeeVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BVM_SequencerFeeVault__factory extends ContractFactory {
  constructor(...args: BVM_SequencerFeeVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _l1FeeWallet: PromiseOrValue<string>,
    _bvmGasPriceOracleAddress: PromiseOrValue<string>,
    _burner: PromiseOrValue<string>,
    _minWithdrawalAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BVM_SequencerFeeVault> {
    return super.deploy(
      _owner,
      _l1FeeWallet,
      _bvmGasPriceOracleAddress,
      _burner,
      _minWithdrawalAmount,
      overrides || {}
    ) as Promise<BVM_SequencerFeeVault>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _l1FeeWallet: PromiseOrValue<string>,
    _bvmGasPriceOracleAddress: PromiseOrValue<string>,
    _burner: PromiseOrValue<string>,
    _minWithdrawalAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _l1FeeWallet,
      _bvmGasPriceOracleAddress,
      _burner,
      _minWithdrawalAmount,
      overrides || {}
    );
  }
  override attach(address: string): BVM_SequencerFeeVault {
    return super.attach(address) as BVM_SequencerFeeVault;
  }
  override connect(signer: Signer): BVM_SequencerFeeVault__factory {
    return super.connect(signer) as BVM_SequencerFeeVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BVM_SequencerFeeVaultInterface {
    return new utils.Interface(_abi) as BVM_SequencerFeeVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BVM_SequencerFeeVault {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BVM_SequencerFeeVault;
  }
}
