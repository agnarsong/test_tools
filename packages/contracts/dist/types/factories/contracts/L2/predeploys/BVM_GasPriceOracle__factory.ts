/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BVM_GasPriceOracle,
  BVM_GasPriceOracleInterface,
} from "../../../../contracts/L2/predeploys/BVM_GasPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ChargeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "DAGasPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "DASwitchUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "DecimalsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "GasPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "IsBurningUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "L1BaseFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "OverheadUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ScalarUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "IsBurning",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "charge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daGasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "daSwitch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getL1Fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getL1GasUsed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1BaseFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "overhead",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scalar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sccAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_charge",
        type: "uint256",
      },
    ],
    name: "setCharge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_daGasPrice",
        type: "uint256",
      },
    ],
    name: "setDAGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_daSwitch",
        type: "uint256",
      },
    ],
    name: "setDaSwitch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256",
      },
    ],
    name: "setGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_isBurning",
        type: "uint256",
      },
    ],
    name: "setIsBurning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseFee",
        type: "uint256",
      },
    ],
    name: "setL1BaseFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_overhead",
        type: "uint256",
      },
    ],
    name: "setOverhead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_scalar",
        type: "uint256",
      },
    ],
    name: "setScalar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dc6380380610dc683398101604081905261002f91610167565b61003833610047565b61004181610097565b50610197565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146100f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661015b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ed565b61016481610047565b50565b60006020828403121561017957600080fd5b81516001600160a01b038116811461019057600080fd5b9392505050565b610c20806101a66000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063715018a6116100c3578063de26c4a11161007c578063de26c4a114610288578063ea01cd361461029b578063f2fde38b146102ae578063f45e65d8146102c1578063fc55b138146102ca578063fe173b97146102dd57600080fd5b8063715018a61461020f5780638c8885c8146102175780638da5cb5b1461022a578063bede39b51461024f578063bf1fe42014610262578063c76478321461027557600080fd5b806345c51a381161011557806345c51a38146101bb57806349948e0e146101ce578063519b4bd3146101e157806355161913146101ea5780635cbe497a146101f357806370465597146101fc57600080fd5b80630c18c1621461015d5780630d1e43a0146101795780630e6faf1e14610181578063288005781461018a578063313ce5671461019f5780633577afc5146101a8575b600080fd5b61016660035481565b6040519081526020015b60405180910390f35b600654610166565b610166600a5481565b61019d6101983660046108dc565b6102e6565b005b61016660055481565b61019d6101b63660046108dc565b610380565b61019d6101c93660046108dc565b6103e6565b6101666101dc36600461090b565b610445565b61016660025481565b61016660075481565b61016660095481565b61019d61020a3660046108dc565b6104a1565b61019d610500565b61019d6102253660046108dc565b610536565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610170565b61019d61025d3660046108dc565b610595565b61019d6102703660046108dc565b6105f4565b61019d6102833660046108dc565b610653565b61016661029636600461090b565b6106dc565b600854610237906001600160a01b031681565b61019d6102bc3660046109bc565b610768565b61016660045481565b61019d6102d83660046108dc565b610803565b61016660015481565b6000546001600160a01b031633146103195760405162461bcd60e51b8152600401610310906109ec565b60405180910390fd5b808015806103275750806001145b6103435760405162461bcd60e51b815260040161031090610a21565b600a8290556040518281527f65cacb453bbeab72658947058c43b2a6c7dfcca1c9d96ba1bc470d346929b288906020015b60405180910390a15050565b6000546001600160a01b031633146103aa5760405162461bcd60e51b8152600401610310906109ec565b60038190556040518181527f32740b35c0ea213650f60d44366b4fb211c9033b50714e4a1d34e65d5beb9bb4906020015b60405180910390a150565b6000546001600160a01b031633146104105760405162461bcd60e51b8152600401610310906109ec565b60098190556040518181527f5af81f5214eaf8c64101a8fde536abc770ef62af9e14d15e2b0b68760b2028f5906020016103db565b600080610451836106dc565b90506000600254826104639190610a6e565b90506000600554600a6104769190610b73565b90506000600454836104889190610a6e565b905060006104968383610b7f565b979650505050505050565b6000546001600160a01b031633146104cb5760405162461bcd60e51b8152600401610310906109ec565b60048190556040518181527f3336cd9708eaf2769a0f0dc0679f30e80f15dcd88d1921b5a16858e8b85c591a906020016103db565b6000546001600160a01b0316331461052a5760405162461bcd60e51b8152600401610310906109ec565b610534600061088c565b565b6000546001600160a01b031633146105605760405162461bcd60e51b8152600401610310906109ec565b60058190556040518181527fd68112a8707e326d08be3656b528c1bcc5bbbfc47f4177e2179b14d8640838c1906020016103db565b6000546001600160a01b031633146105bf5760405162461bcd60e51b8152600401610310906109ec565b60028190556040518181527f351fb23757bb5ea0546c85b7996ddd7155f96b939ebaa5ff7bc49c75f27f2c44906020016103db565b6000546001600160a01b0316331461061e5760405162461bcd60e51b8152600401610310906109ec565b60018190556040518181527ffcdccc6074c6c42e4bd578aa9870c697dc976a270968452d2b8c8dc369fae396906020016103db565b6000546001600160a01b0316331461067d5760405162461bcd60e51b8152600401610310906109ec565b8080158061068b5750806001145b6106a75760405162461bcd60e51b815260040161031090610a21565b60068290556040518281527fd1eaae13a99b475ddca546a1b4a45052c66c14049997f44a1731a8e7167981a790602001610374565b600080805b8351811015610741578381815181106106fc576106fc610ba1565b01602001516001600160f81b0319166107215761071a600483610bb7565b915061072f565b61072c601083610bb7565b91505b8061073981610bcf565b9150506106e1565b506000600354826107529190610bb7565b905061076081610440610bb7565b949350505050565b6000546001600160a01b031633146107925760405162461bcd60e51b8152600401610310906109ec565b6001600160a01b0381166107f75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610310565b6108008161088c565b50565b6000546001600160a01b0316331461082d5760405162461bcd60e51b8152600401610310906109ec565b8080158061083b5750806001145b6108575760405162461bcd60e51b815260040161031090610a21565b60078290556040518281527f49244d4195584d0644398167ca8caa7b98ee36b674e4b4d2a2640749b27eafb790602001610374565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156108ee57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561091d57600080fd5b813567ffffffffffffffff8082111561093557600080fd5b818401915084601f83011261094957600080fd5b81358181111561095b5761095b6108f5565b604051601f8201601f19908116603f01168101908382118183101715610983576109836108f5565b8160405282815287602084870101111561099c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156109ce57600080fd5b81356001600160a01b03811681146109e557600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f696e76616c69642076616c75652c6d7573742062652030206f72203100000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610a8857610a88610a58565b500290565b600181815b80851115610ac8578160001904821115610aae57610aae610a58565b80851615610abb57918102915b93841c9390800290610a92565b509250929050565b600082610adf57506001610b6d565b81610aec57506000610b6d565b8160018114610b025760028114610b0c57610b28565b6001915050610b6d565b60ff841115610b1d57610b1d610a58565b50506001821b610b6d565b5060208310610133831016604e8410600b8410161715610b4b575081810a610b6d565b610b558383610a8d565b8060001904821115610b6957610b69610a58565b0290505b92915050565b60006109e58383610ad0565b600082610b9c57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60008219821115610bca57610bca610a58565b500190565b6000600019821415610be357610be3610a58565b506001019056fea2646970667358221220b348647ccfc7827e2205665c9504afa5ec092bef6195c4aad89397450d0d81da64736f6c63430008090033";

type BVM_GasPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BVM_GasPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BVM_GasPriceOracle__factory extends ContractFactory {
  constructor(...args: BVM_GasPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BVM_GasPriceOracle> {
    return super.deploy(_owner, overrides || {}) as Promise<BVM_GasPriceOracle>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): BVM_GasPriceOracle {
    return super.attach(address) as BVM_GasPriceOracle;
  }
  override connect(signer: Signer): BVM_GasPriceOracle__factory {
    return super.connect(signer) as BVM_GasPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BVM_GasPriceOracleInterface {
    return new utils.Interface(_abi) as BVM_GasPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BVM_GasPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as BVM_GasPriceOracle;
  }
}
