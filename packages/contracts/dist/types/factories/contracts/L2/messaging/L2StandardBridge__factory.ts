/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  L2StandardBridge,
  L2StandardBridgeInterface,
} from "../../../../contracts/L2/messaging/L2StandardBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2CrossDomainMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1TokenBridge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "DepositFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "DepositFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "WithdrawalInitiated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "finalizeDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l1TokenBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l1Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_l1Gas",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610dab380380610dab83398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610ced806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806332b7006d1461005c57806336c717c1146100715780633cb747bf146100a0578063662a633a146100b3578063a3a79548146100c6575b600080fd5b61006f61006a366004610968565b6100d9565b005b600154610084906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600054610084906001600160a01b031681565b61006f6100c13660046109d9565b6100ef565b61006f6100d4366004610a71565b6104c6565b6100e8853333878787876104dd565b5050505050565b6001546001600160a01b031661010d6000546001600160a01b031690565b6001600160a01b0316336001600160a01b0316146101895760405162461bcd60e51b815260206004820152602e60248201527f42564d5f58434841494e3a206d657373656e67657220636f6e7472616374207560448201526d1b985d5d1a195b9d1a58d85d195960921b60648201526084015b60405180910390fd5b806001600160a01b03166101a56000546001600160a01b031690565b6001600160a01b0316636e296e456040518163ffffffff1660e01b815260040160206040518083038186803b1580156101dd57600080fd5b505afa1580156101f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102159190610af4565b6001600160a01b0316146102845760405162461bcd60e51b815260206004820152603060248201527f42564d5f58434841494e3a2077726f6e672073656e646572206f662063726f7360448201526f732d646f6d61696e206d65737361676560801b6064820152608401610180565b61029587631d1d8b6360e01b610742565b80156103245750866001600160a01b031663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156102d757600080fd5b505af11580156102eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030f9190610af4565b6001600160a01b0316886001600160a01b0316145b156103eb576040516340c10f1960e01b81526001600160a01b038681166004830152602482018690528816906340c10f1990604401600060405180830381600087803b15801561037357600080fd5b505af1158015610387573d6000803e3d6000fd5b50505050856001600160a01b0316876001600160a01b0316896001600160a01b03167fb0444523268717a02698be47d0803aa7468c00acbed2f8bd93a0459cde61dd89888888886040516103de9493929190610b41565b60405180910390a46104bc565b600063a9f9e67560e01b8989888a8989896040516024016104129796959493929190610b69565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915260015490915061045f906001600160a01b0316600083610767565b866001600160a01b0316886001600160a01b03168a6001600160a01b03167f7ea89a4591614515571c2b51f5ea06494056f261c10ab1ed8c03c7590d87bce0898989896040516104b29493929190610b41565b60405180910390a4505b5050505050505050565b6104d5863387878787876104dd565b505050505050565b604051632770a7eb60e21b8152336004820152602481018590526001600160a01b03881690639dc29fac90604401600060405180830381600087803b15801561052557600080fd5b505af1158015610539573d6000803e3d6000fd5b505050506000876001600160a01b031663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561057a57600080fd5b505af115801561058e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b29190610af4565b905060606001600160a01b03891673deaddeaddeaddeaddeaddeaddeaddeaddead111114156106365760405163054cbb0d60e21b906105fd908a908a908a9089908990602401610bba565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290506106d8565b6001600160a01b03891673deaddeaddeaddeaddeaddeaddeaddeaddead0000141561067d57604051637c15a0c760e11b906105fd908a908a908a9089908990602401610bba565b60405163a9f9e67560e01b906106a39084908c908c908c908c908b908b90602401610b69565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290505b6001546106ef906001600160a01b03168683610767565b336001600160a01b0316896001600160a01b0316836001600160a01b03167f73d170910aba9e6d50b102db522b1dbcd796216f5128b445aa2135272886497e8a8a89896040516104b29493929190610b41565b600061074d836107d2565b801561075e575061075e8383610805565b90505b92915050565b600054604051633dbb202b60e01b81526001600160a01b0390911690633dbb202b9061079b90869085908790600401610c29565b600060405180830381600087803b1580156107b557600080fd5b505af11580156107c9573d6000803e3d6000fd5b50505050505050565b60006107e5826301ffc9a760e01b610805565b801561076157506107fe826001600160e01b0319610805565b1592915050565b604080516001600160e01b0319831660248083019190915282518083039091018152604490910182526020810180516001600160e01b03166301ffc9a760e01b179052905160009190829081906001600160a01b038716906175309061086c908690610c79565b6000604051808303818686fa925050503d80600081146108a8576040519150601f19603f3d011682016040523d82523d6000602084013e6108ad565b606091505b50915091506020815110156108c85760009350505050610761565b8180156108e45750808060200190518101906108e49190610c95565b9695505050505050565b6001600160a01b038116811461090357600080fd5b50565b803563ffffffff8116811461091a57600080fd5b919050565b60008083601f84011261093157600080fd5b50813567ffffffffffffffff81111561094957600080fd5b60208301915083602082850101111561096157600080fd5b9250929050565b60008060008060006080868803121561098057600080fd5b853561098b816108ee565b9450602086013593506109a060408701610906565b9250606086013567ffffffffffffffff8111156109bc57600080fd5b6109c88882890161091f565b969995985093965092949392505050565b600080600080600080600060c0888a0312156109f457600080fd5b87356109ff816108ee565b96506020880135610a0f816108ee565b95506040880135610a1f816108ee565b94506060880135610a2f816108ee565b93506080880135925060a088013567ffffffffffffffff811115610a5257600080fd5b610a5e8a828b0161091f565b989b979a50959850939692959293505050565b60008060008060008060a08789031215610a8a57600080fd5b8635610a95816108ee565b95506020870135610aa5816108ee565b945060408701359350610aba60608801610906565b9250608087013567ffffffffffffffff811115610ad657600080fd5b610ae289828a0161091f565b979a9699509497509295939492505050565b600060208284031215610b0657600080fd5b8151610b11816108ee565b9392505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b03851681528360208201526060604082015260006108e4606083018486610b18565b6001600160a01b03888116825287811660208301528681166040830152851660608201526080810184905260c060a08201819052600090610bad9083018486610b18565b9998505050505050505050565b6001600160a01b0386811682528516602082015260408101849052608060608201819052600090610bee9083018486610b18565b979650505050505050565b60005b83811015610c14578181015183820152602001610bfc565b83811115610c23576000848401525b50505050565b60018060a01b03841681526060602082015260008351806060840152610c56816080850160208801610bf9565b63ffffffff93909316604083015250601f91909101601f19160160800192915050565b60008251610c8b818460208701610bf9565b9190910192915050565b600060208284031215610ca757600080fd5b81518015158114610b1157600080fdfea26469706673582212201071c4ccadf379cebd1f4005b5d757cd692088863d849847703a9c051088b5bc64736f6c63430008090033";

type L2StandardBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2StandardBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2StandardBridge__factory extends ContractFactory {
  constructor(...args: L2StandardBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _l2CrossDomainMessenger: PromiseOrValue<string>,
    _l1TokenBridge: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L2StandardBridge> {
    return super.deploy(
      _l2CrossDomainMessenger,
      _l1TokenBridge,
      overrides || {}
    ) as Promise<L2StandardBridge>;
  }
  override getDeployTransaction(
    _l2CrossDomainMessenger: PromiseOrValue<string>,
    _l1TokenBridge: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _l2CrossDomainMessenger,
      _l1TokenBridge,
      overrides || {}
    );
  }
  override attach(address: string): L2StandardBridge {
    return super.attach(address) as L2StandardBridge;
  }
  override connect(signer: Signer): L2StandardBridge__factory {
    return super.connect(signer) as L2StandardBridge__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2StandardBridgeInterface {
    return new utils.Interface(_abi) as L2StandardBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2StandardBridge {
    return new Contract(address, _abi, signerOrProvider) as L2StandardBridge;
  }
}
